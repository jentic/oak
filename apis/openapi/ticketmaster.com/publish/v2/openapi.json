{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "url": "http://developer.ticketmaster.com/support/contact-us/"
    },
    "description": "Publish API",
    "title": "ticketmaster publish api",
    "version": "v2",
    "x-jentic-source-url": "https://raw.githubusercontent.com/ticketmaster-api/ticketmaster-api.github.io/dev/_data/orgs/publish-api/v1/api.json"
  },
  "servers": [
    {
      "url": "https://app.ticketmaster.com/discovery/v2"
    }
  ],
  "paths": {
    "/publish/v2/attractions": {
      "post": {
        "parameters": [
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "publishAttraction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attraction"
              }
            }
          },
          "description": "Attraction",
          "required": true
        },
        "summary": "Publish an attractions"
      }
    },
    "/publish/v2/attractions/{id}": {
      "patch": {
        "parameters": [
          {
            "description": "ID of the attraction the patch will be applied",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "patchAttraction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AugmentationData"
              }
            }
          },
          "description": "Patch to apply",
          "required": true
        },
        "summary": "Publish a patch on an attraction"
      }
    },
    "/publish/v2/attractions/{id}/videos": {
      "post": {
        "parameters": [
          {
            "description": "ID of the attraction the video is linked to",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "publishAttractionVideos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Video"
              }
            }
          },
          "description": "Video data",
          "required": true
        },
        "summary": "Publish a video on an attraction"
      }
    },
    "/publish/v2/entitlements": {
      "post": {
        "parameters": [
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 2.0.0",
        "operationId": "publishEntitlements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entitlement"
              }
            }
          },
          "description": "Entitlements information to add to the entity",
          "required": true
        },
        "summary": "Publish entitlements on an entity"
      }
    },
    "/publish/v2/events": {
      "post": {
        "parameters": [
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "publishEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "description": "Event",
          "required": true
        },
        "summary": "Publish an event"
      }
    },
    "/publish/v2/events/{id}": {
      "patch": {
        "parameters": [
          {
            "description": "ID of the event the patch will be applied",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "patchEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AugmentationData"
              }
            }
          },
          "description": "Patch to apply",
          "required": true
        },
        "summary": "Publish a patch on an event"
      }
    },
    "/publish/v2/events/{id}/videos": {
      "post": {
        "parameters": [
          {
            "description": "ID of the event the video is linked to",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "publishEventVideos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Video"
              }
            }
          },
          "description": "Video data",
          "required": true
        },
        "summary": "Publish a video on an event"
      }
    },
    "/publish/v2/extensions": {
      "post": {
        "parameters": [
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "publishExtension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtensionData"
              }
            }
          },
          "description": "Extension information to add to the entity",
          "required": true
        },
        "summary": "Publish extension on an entity"
      }
    },
    "/publish/v2/venues": {
      "post": {
        "parameters": [
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "publishVenue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Venue"
              }
            }
          },
          "description": "Venue",
          "required": true
        },
        "summary": "Publish a venue"
      }
    },
    "/publish/v2/venues/{id}": {
      "patch": {
        "parameters": [
          {
            "description": "ID of the venue the patch will be applied",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique correlation id to be able to trace the request in our system",
            "in": "header",
            "name": "TMPS-Correlation-Id",
            "required": true,
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IngestionResult"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "description": "Since 1.0.0",
        "operationId": "patchVenue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AugmentationData"
              }
            }
          },
          "description": "Patch to apply",
          "required": true
        },
        "summary": "Publish a patch on a venue"
      }
    }
  },
  "components": {
    "requestBodies": {
      "AugmentationData": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AugmentationData"
            }
          }
        },
        "description": "Patch to apply",
        "required": true
      },
      "Video": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Video"
            }
          }
        },
        "description": "Video data",
        "required": true
      }
    },
    "schemas": {
      "AccessDates": {
        "description": "Event's Access Date",
        "properties": {
          "endApproximate": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the access end date is approximated",
            "example": "yyyy-MM-ddThh-mm-ssZ",
            "position": 3,
            "type": "boolean"
          },
          "endDateTime": {
            "description": "Event's end access time",
            "example": "yyyy-MM-ddThh-mm-ssZ",
            "format": "date-time",
            "position": 2,
            "type": "string"
          },
          "startApproximate": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the access start date is approximated",
            "position": 1,
            "type": "boolean"
          },
          "startDateTime": {
            "description": "Event's start access time",
            "example": "yyyy-MM-ddThh-mm-ssZ",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Address": {
        "description": "Address",
        "properties": {
          "line1s": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Aaddress first line - multi-lingual fields",
            "example": "en-us: line1",
            "position": 1,
            "type": "object"
          },
          "line2s": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Address second line - multi-lingual fields",
            "example": "en-us:line2",
            "position": 4,
            "type": "object"
          },
          "line3s": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Address third line - multi-lingual fields",
            "example": "en-us:line3",
            "position": 4,
            "type": "object"
          }
        },
        "type": "object"
      },
      "Area": {
        "description": "Area",
        "properties": {
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          }
        },
        "type": "object"
      },
      "Attraction": {
        "description": "Attraction",
        "properties": {
          "active": {
            "default": false,
            "description": "Indicate if the entity is active, inactive entity won't appear in Discovery API",
            "position": 95,
            "type": "boolean"
          },
          "additionalInfos": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional informations of the entity - multi-lingual fields",
            "example": "en-us: additionalInfo",
            "position": 23,
            "type": "object"
          },
          "classifications": {
            "description": "Attraction's classifications",
            "items": {
              "$ref": "#/components/schemas/Classification"
            },
            "position": 30,
            "type": "array"
          },
          "descriptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Descriptions of the entity - multi-lingual fields",
            "example": "en-us: description",
            "position": 21,
            "type": "object"
          },
          "discoverable": {
            "default": false,
            "description": "True if the entity is dicoverable in discovery API",
            "position": 97,
            "type": "boolean"
          },
          "images": {
            "description": "Images of the entity",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "position": 29,
            "type": "array",
            "uniqueItems": true
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          },
          "references": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "References of this entity in an other system. Reference is the exact same entity",
            "example": "sourceName: id",
            "position": 71,
            "type": "object"
          },
          "relationships": {
            "description": "Relationships on the entity, like if the entity is a duplicate of another one",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "position": 70,
            "type": "array"
          },
          "source": {
            "$ref": "#/components/schemas/Source",
            "description": "Source of the entity, where the entity comes from",
            "position": 2
          },
          "test": {
            "default": false,
            "description": "Indicate if this is a test entity, by default test entities won't appear in discovery API",
            "position": 96,
            "type": "boolean"
          },
          "type": {
            "description": "Type of the entity",
            "enum": [
              "event",
              "venue",
              "attraction"
            ],
            "type": "string"
          },
          "url": {
            "description": "URL of a web site detail page of the entity",
            "position": 24,
            "type": "string"
          },
          "version": {
            "description": "Version of the entity. Version is to avoid updated an entity with an older version",
            "format": "int64",
            "position": 80,
            "type": "integer"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "AttractionExtensions": {
        "description": "All Attraction's extensions",
        "type": "object"
      },
      "AugmentationData": {
        "description": "This class defines the Augmentation Data on the Publish API",
        "properties": {
          "changes": {
            "description": "List of changes to apply to the related entity",
            "items": {
              "$ref": "#/components/schemas/Change"
            },
            "position": 5,
            "type": "array"
          },
          "relatedEntityId": {
            "description": "Id of the entity to apply the augmentation data.",
            "position": 1,
            "type": "string"
          },
          "relatedEntityType": {
            "description": "The type of the entity to apply the augmentation data.",
            "enum": [
              "event",
              "attraction",
              "venue"
            ],
            "type": "string"
          },
          "score": {
            "description": "The confidence (%) level of the accuracy of this augmention data. 100 is the better",
            "format": "float",
            "position": 4,
            "type": "number"
          },
          "source": {
            "description": "The source where the augementation data came from",
            "position": 2,
            "type": "string"
          },
          "versionNumber": {
            "description": "Vesion of this augmentation data. This field is to avoid updating entity with old data. ",
            "format": "int64",
            "position": 3,
            "type": "integer"
          }
        },
        "required": [
          "changes",
          "relatedEntityId",
          "relatedEntityType",
          "source",
          "versionNumber"
        ],
        "type": "object"
      },
      "Change": {
        "description": "This class defines the Changes on the Publish API",
        "properties": {
          "from": {
            "description": "Json path of the source entity when using the move operation.",
            "position": 1,
            "type": "string"
          },
          "op": {
            "description": "Operation to apply on the entity.",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ],
            "type": "string"
          },
          "path": {
            "description": "Json path from the root of the document to the place where the change should be applied.",
            "position": 2,
            "type": "string"
          },
          "value": {
            "description": "Data to change. MUST be a valid json object.",
            "position": 3,
            "type": "object"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "Chronology": {
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/DateTimeZone"
          }
        },
        "type": "object"
      },
      "City": {
        "description": "City",
        "properties": {
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          }
        },
        "type": "object"
      },
      "Classification": {
        "description": "Classification",
        "properties": {
          "genre": {
            "$ref": "#/components/schemas/Level",
            "description": "Secondary Genre to further describe an entity (Rock, Classical, Animation, etc)",
            "position": 2
          },
          "primary": {
            "default": false,
            "type": "boolean"
          },
          "segment": {
            "$ref": "#/components/schemas/Segment",
            "description": "A Segment is a primary genre for an entity (Music, Sports, Arts, etc)",
            "position": 1
          },
          "subGenre": {
            "$ref": "#/components/schemas/Level",
            "description": "Tertiary Genre for additional detail when describring an entity (Alternative Rock, Ambient Pop, etc)",
            "position": 3
          },
          "subType": {
            "$ref": "#/components/schemas/Level",
            "description": "Secondary Type to further categorize an entity (Band, Choir, Chorus, etc)",
            "position": 6
          },
          "type": {
            "$ref": "#/components/schemas/Level",
            "description": "A Type represents a kind or group of people. (Donation, Group, Individual, Merchandise, Event Style, etc)",
            "position": 5
          }
        },
        "type": "object"
      },
      "Country": {
        "description": "Country",
        "properties": {
          "countryCode": {
            "description": "Country code (ISO 3166)",
            "type": "string"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          }
        },
        "type": "object"
      },
      "DateTimeField": {
        "properties": {
          "durationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "leapDurationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "lenient": {
            "default": false,
            "type": "boolean"
          },
          "maximumValue": {
            "format": "int32",
            "type": "integer"
          },
          "minimumValue": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "rangeDurationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "supported": {
            "default": false,
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DateTimeFieldType"
          }
        },
        "type": "object"
      },
      "DateTimeFieldType": {
        "properties": {
          "durationType": {
            "$ref": "#/components/schemas/DurationFieldType"
          },
          "name": {
            "type": "string"
          },
          "rangeDurationType": {
            "$ref": "#/components/schemas/DurationFieldType"
          }
        },
        "type": "object"
      },
      "DateTimeZone": {
        "properties": {
          "fixed": {
            "default": false,
            "type": "boolean"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DisplaySettingExtension": {
        "description": "Event's display settings extension",
        "type": "object"
      },
      "Dma": {
        "description": "DMA (Designated Market Area)",
        "properties": {
          "id": {
            "description": "DMS's id",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DurationField": {
        "properties": {
          "name": {
            "type": "string"
          },
          "precise": {
            "default": false,
            "type": "boolean"
          },
          "supported": {
            "default": false,
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DurationFieldType"
          },
          "unitMillis": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DurationFieldType": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EndDates": {
        "description": "Event's End Dates",
        "properties": {
          "approximate": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the end date is approximated",
            "position": 2,
            "type": "boolean"
          },
          "dateTime": {
            "description": "The event end date time",
            "example": "yyyy-MM-ddThh-mm-ssZ",
            "format": "date-time",
            "position": 1,
            "type": "string"
          },
          "localTime": {
            "$ref": "#/components/schemas/LocalTime",
            "description": "The event end time in local time",
            "example": "yyyy-MM-dd"
          }
        },
        "type": "object"
      },
      "Entitlement": {
        "description": "This class defines an entitlement data on the Publish API",
        "properties": {
          "data": {
            "description": "The actual entitlements information to add to the entity",
            "position": 6,
            "type": "object"
          },
          "relatedEntityId": {
            "description": "Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided",
            "position": 1,
            "type": "string"
          },
          "relatedEntitySource": {
            "$ref": "#/components/schemas/Source",
            "description": "Source of the related entity.",
            "position": 2
          },
          "relatedEntityType": {
            "description": "The type of the entity to add this entitlement to",
            "enum": [
              "event",
              "venue",
              "attraction"
            ],
            "pattern": "^event|venue|attraction$",
            "position": 2,
            "type": "string"
          },
          "source": {
            "description": "Source of the extension, where it came from",
            "enum": [
              "ticketmaster"
            ],
            "type": "string"
          },
          "versionNumber": {
            "description": "Version of the entitlements. Version is to prevent to override an entitlements with an older one",
            "format": "int64",
            "position": 5,
            "type": "integer"
          }
        },
        "required": [
          "data",
          "relatedEntityType",
          "source"
        ],
        "type": "object"
      },
      "EntityChanges": {
        "properties": {
          "changes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "newlyCreated": {
            "default": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Event": {
        "description": "Event",
        "properties": {
          "active": {
            "default": false,
            "description": "Indicate if the entity is active, inactive entity won't appear in Discovery API",
            "position": 95,
            "type": "boolean"
          },
          "additionalInfos": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional informations of the entity - multi-lingual fields",
            "example": "en-us: additionalInfo",
            "position": 23,
            "type": "object"
          },
          "attractions": {
            "description": "Ordered Attraction related to the event",
            "items": {
              "$ref": "#/components/schemas/Attraction"
            },
            "position": 53,
            "type": "array"
          },
          "classifications": {
            "description": "Event's classifications",
            "items": {
              "$ref": "#/components/schemas/Classification"
            },
            "position": 50,
            "type": "array"
          },
          "dates": {
            "$ref": "#/components/schemas/EventDates",
            "description": "Event's dates information",
            "position": 31
          },
          "descriptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Descriptions of the entity - multi-lingual fields",
            "example": "en-us: description",
            "position": 21,
            "type": "object"
          },
          "discoverable": {
            "default": false,
            "description": "True if the entity is dicoverable in discovery API",
            "position": 97,
            "type": "boolean"
          },
          "distance": {
            "format": "double",
            "type": "number"
          },
          "images": {
            "description": "Images of the entity",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "position": 29,
            "type": "array",
            "uniqueItems": true
          },
          "infos": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any information related to the event - multi-lingual fields",
            "example": "en-us: info",
            "position": 33,
            "type": "object"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          },
          "place": {
            "$ref": "#/components/schemas/Place",
            "description": "Place has the information on where the event happens. It can be set if there is no venue",
            "position": 51
          },
          "pleaseNotes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any notes related to the event - multi-lingual fields",
            "example": "en-us: note",
            "position": 35,
            "type": "object"
          },
          "priceRanges": {
            "description": "Price ranges of this event",
            "items": {
              "$ref": "#/components/schemas/PriceRange"
            },
            "position": 36,
            "type": "array",
            "uniqueItems": true
          },
          "promoter": {
            "$ref": "#/components/schemas/Promoter",
            "description": "Event's promoter",
            "position": 37
          },
          "publicVisibility": {
            "$ref": "#/components/schemas/PublicVisibility",
            "description": "Event's public visibility dates",
            "position": 30
          },
          "references": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "References of this entity in an other system. Reference is the exact same entity",
            "example": "sourceName: id",
            "position": 71,
            "type": "object"
          },
          "relationships": {
            "description": "Relationships on the entity, like if the entity is a duplicate of another one",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "position": 70,
            "type": "array"
          },
          "sales": {
            "$ref": "#/components/schemas/EventSalesDates",
            "description": "Event's sales dates information",
            "position": 32
          },
          "source": {
            "$ref": "#/components/schemas/Source",
            "description": "Source of the entity, where the entity comes from",
            "position": 2
          },
          "test": {
            "default": false,
            "description": "Indicate if this is a test entity, by default test entities won't appear in discovery API",
            "position": 96,
            "type": "boolean"
          },
          "type": {
            "description": "Type of the entity",
            "enum": [
              "event",
              "venue",
              "attraction"
            ],
            "type": "string"
          },
          "units": {
            "type": "string"
          },
          "url": {
            "description": "URL of a web site detail page of the entity",
            "position": 24,
            "type": "string"
          },
          "venue": {
            "$ref": "#/components/schemas/Venue",
            "description": "Venue information",
            "position": 52
          },
          "version": {
            "description": "Version of the entity. Version is to avoid updated an entity with an older version",
            "format": "int64",
            "position": 80,
            "type": "integer"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "EventDates": {
        "description": "Event's Dates",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/AccessDates",
            "description": "Event's access dates. The date and time the fan can access the event",
            "position": 2
          },
          "end": {
            "$ref": "#/components/schemas/EndDates",
            "description": "Event's end dates. The date and time when the event will end",
            "position": 1
          },
          "start": {
            "$ref": "#/components/schemas/StartDates",
            "description": "Event's start dates. The date and time when the event will start"
          },
          "status": {
            "$ref": "#/components/schemas/EventStatus",
            "description": "Status of the event",
            "position": 4
          },
          "timezone": {
            "description": "Event's timezone",
            "position": 3,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventExtensions": {
        "description": "All Event's extensions",
        "type": "object"
      },
      "EventSalesDates": {
        "description": "Event's Sales Dates",
        "properties": {
          "presales": {
            "description": "Presale information on this event",
            "items": {
              "$ref": "#/components/schemas/Presale"
            },
            "position": 1,
            "type": "array"
          },
          "public": {
            "$ref": "#/components/schemas/PublicSaleDates",
            "description": "Public onsale information on this event"
          }
        },
        "type": "object"
      },
      "EventStatus": {
        "description": "Event's Status",
        "properties": {
          "code": {
            "description": "The event's status code",
            "enum": [
              "onsale",
              "offsale",
              "canceled",
              "postponed",
              "rescheduled"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Extension": {
        "type": "object"
      },
      "ExtensionData": {
        "description": "This class defines an extenstion data on the Publish API",
        "properties": {
          "data": {
            "description": "The actual information to add to the entity",
            "position": 6,
            "type": "object"
          },
          "relatedEntityId": {
            "description": "Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided",
            "position": 3,
            "type": "string"
          },
          "relatedEntitySource": {
            "$ref": "#/components/schemas/Source",
            "description": "Source of the related entity.",
            "position": 4
          },
          "relatedEntityType": {
            "description": "The type of the entity to add this extensions to",
            "enum": [
              "event",
              "venue",
              "attraction"
            ],
            "pattern": "^event|venue|attraction$",
            "position": 2,
            "type": "string"
          },
          "source": {
            "description": "Source of the extension, where it came from",
            "type": "string"
          },
          "type": {
            "description": "The type of the extension. This represent the data sent",
            "position": 1,
            "type": "string"
          },
          "versionNumber": {
            "description": "Version of the extensions. Version is to prevent to override an extension with an older one",
            "format": "int64",
            "position": 5,
            "type": "integer"
          }
        },
        "required": [
          "data",
          "relatedEntityType",
          "source",
          "type"
        ],
        "type": "object"
      },
      "GeocodeExtension": {
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "formattedAddress": {
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "postalCode": {
            "type": "string"
          },
          "route": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GeolocationVenueExtensions": {
        "description": "Venue's geocode extension",
        "type": "object"
      },
      "Geometry": {
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "type": "object"
      },
      "HostExtension": {
        "description": "Venue's Host extension",
        "type": "object"
      },
      "Image": {
        "description": "Image",
        "properties": {
          "attribution": {
            "description": "Attribution of the image",
            "position": 8,
            "type": "string"
          },
          "domains": {
            "description": "Domains on which this image should be displayed",
            "items": {
              "type": "string"
            },
            "position": 7,
            "type": "array",
            "uniqueItems": true
          },
          "fallback": {
            "default": false,
            "description": "true if the image is not the event's image but a fallbak image",
            "position": 6,
            "type": "boolean"
          },
          "height": {
            "description": "Height of the image",
            "format": "int32",
            "position": 5,
            "type": "integer"
          },
          "ratio": {
            "description": "Aspect ratio of the image",
            "enum": [
              "16_9",
              "3_2",
              "4_3"
            ],
            "position": 3,
            "type": "string"
          },
          "url": {
            "description": "Public URL of the image",
            "position": 2,
            "type": "string"
          },
          "width": {
            "description": "Width of the image",
            "format": "int32",
            "position": 4,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IngestionResult": {
        "description": "This class defines the IngestionResult on the Publish API",
        "properties": {
          "id": {
            "description": "Id of the entity ingested in the discovery api",
            "type": "string"
          },
          "ignoredProperties": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "List properties that are ignored in the validation",
            "position": 5,
            "type": "object"
          },
          "invalidProperties": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "List of invalid properties",
            "position": 5,
            "type": "object"
          },
          "invalidValues": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "List of invalid values",
            "position": 5,
            "type": "object"
          },
          "missingProperties": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "List of properties that should be present in your entity to ease its dicovery",
            "position": 4,
            "type": "object"
          },
          "status": {
            "description": "Status of the result",
            "enum": [
              "Error",
              "SuccessWarning",
              "Success"
            ],
            "position": 1,
            "type": "string"
          },
          "unknownProperties": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "List of unknown properties that will be dropped",
            "position": 5,
            "type": "object"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "Level": {
        "properties": {
          "id": {
            "description": "The ID of the classification's level",
            "type": "string"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The Name of the classification's level - multi-lingual fields",
            "position": 2,
            "type": "object"
          }
        },
        "type": "object"
      },
      "LicensingInformation": {
        "description": "This class defines an entitlement data on the Publish API",
        "properties": {
          "license": {
            "description": "License name",
            "type": "string"
          },
          "regionRestriction": {
            "$ref": "#/components/schemas/RegionRestrictions",
            "description": "Restrictions based on regions"
          }
        },
        "required": [
          "license"
        ],
        "type": "object"
      },
      "LocalTime": {
        "properties": {
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "fieldTypes": {
            "items": {
              "$ref": "#/components/schemas/DateTimeFieldType"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/DateTimeField"
            },
            "type": "array"
          },
          "hourOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfSecond": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfHour": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfMinute": {
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Locale": {
        "properties": {
          "country": {
            "type": "string"
          },
          "displayCountry": {
            "type": "string"
          },
          "displayLanguage": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "displayScript": {
            "type": "string"
          },
          "displayVariant": {
            "type": "string"
          },
          "extensionKeys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "iso3Country": {
            "type": "string"
          },
          "iso3Language": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "unicodeLocaleAttributes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "unicodeLocaleKeys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "variant": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Location": {
        "description": "Location",
        "properties": {
          "latitude": {
            "description": "Latitude",
            "type": "number"
          },
          "longitude": {
            "description": "Longitude",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Market": {
        "description": "Market",
        "properties": {
          "id": {
            "description": "Market's id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Parking": {
        "description": "Parking",
        "properties": {
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          },
          "url": {
            "description": "Url to the web page of the parking",
            "position": 20,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Place": {
        "description": "Place",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "Address of the place",
            "position": 1
          },
          "area": {
            "$ref": "#/components/schemas/Area",
            "description": "Area of the place"
          },
          "city": {
            "$ref": "#/components/schemas/City",
            "description": "City of the Place",
            "position": 2
          },
          "country": {
            "$ref": "#/components/schemas/Country",
            "description": "Country of the place",
            "position": 4
          },
          "location": {
            "$ref": "#/components/schemas/Location",
            "description": "Location of the place",
            "position": 6
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          },
          "postalCode": {
            "description": "Postal code / zipcode of the place",
            "position": 5,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/State",
            "description": "State / Province of the place",
            "position": 3
          }
        },
        "type": "object"
      },
      "Presale": {
        "description": "Event's Presale Info",
        "properties": {
          "descriptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Description of the presale - multi-lingual fields",
            "example": "en-us: description",
            "position": 2,
            "type": "object"
          },
          "endDateTime": {
            "description": "Presale's end dates. The date and time when the presale will end",
            "format": "date-time",
            "position": 5,
            "type": "string"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Name of the presale - multi-lingual fields",
            "example": "en-us: name",
            "type": "object"
          },
          "startDateTime": {
            "description": "Presale's start dates. The date and time when the presale will start",
            "format": "date-time",
            "position": 4,
            "type": "string"
          },
          "url": {
            "description": "Presale link URL",
            "position": 3,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PriceRange": {
        "description": "PriceRange",
        "properties": {
          "currency": {
            "description": "Currency",
            "position": 1,
            "type": "string"
          },
          "max": {
            "description": "Maximum price",
            "format": "double",
            "position": 3,
            "type": "number"
          },
          "min": {
            "description": "Minimum price",
            "format": "double",
            "position": 2,
            "type": "number"
          },
          "type": {
            "description": "Type of price",
            "enum": [
              "standard"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Promoter": {
        "description": "Promoter",
        "properties": {
          "descriptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Description of the promoter - multi-lingual fields",
            "example": "en-us: description",
            "position": 4,
            "type": "object"
          },
          "id": {
            "description": "Id of the promoter",
            "type": "string"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Name of the promoter - multi-lingual fields",
            "example": "en-us: name",
            "position": 2,
            "type": "object"
          }
        },
        "type": "object"
      },
      "PublicSaleDates": {
        "description": "Event's Public Onsales Dates",
        "properties": {
          "endDateTime": {
            "description": "Public sale's end dates. The date and time when the public sale will end",
            "format": "date-time",
            "position": 1,
            "type": "string"
          },
          "startDateTime": {
            "description": "Public sale's start dates. The date and time when the public sale will start",
            "format": "date-time",
            "type": "string"
          },
          "startTBD": {
            "default": false,
            "description": "True if the public sale's date is to be determined",
            "position": 2,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PublicVisibility": {
        "description": "The class defines the public visibility period on the Discovery/Publish API.",
        "properties": {
          "endDateTime": {
            "description": "The end of the public visibility. The date and time when the event will be public visible",
            "format": "date-time",
            "position": 1,
            "type": "string"
          },
          "startDateTime": {
            "description": "The start of the public visibility. The date and time when the event will be public visible",
            "format": "date-time",
            "type": "string"
          },
          "visible": {
            "default": false,
            "description": "True if you want to have the event visible in the discovery API",
            "position": 2,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RegionRestrictions": {
        "description": "This class defines an entitlement data on the Publish API",
        "properties": {
          "allowed": {
            "description": "Restrictions based on regions",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Relationship": {
        "description": "Relationship",
        "type": "object"
      },
      "Segment": {
        "description": "Segment",
        "properties": {
          "id": {
            "description": "The ID of the classification's level",
            "type": "string"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The Name of the classification's level - multi-lingual fields",
            "position": 2,
            "type": "object"
          }
        },
        "type": "object"
      },
      "Social": {
        "description": "Social networks data",
        "properties": {
          "twitter": {
            "$ref": "#/components/schemas/Twitter",
            "description": "Twitter data"
          }
        },
        "type": "object"
      },
      "Source": {
        "description": "Source",
        "properties": {
          "id": {
            "description": "ID of the entity in the source's system",
            "pattern": "^[a-zA-Z0-9_-]*$",
            "position": 1,
            "type": "string"
          },
          "name": {
            "description": "Source's name",
            "pattern": "^[a-zA-Z0-9_-]*$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StartDates": {
        "description": "Event's Start Dates",
        "properties": {
          "dateTBA": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the start date is TBA",
            "position": 4,
            "type": "boolean"
          },
          "dateTBD": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the start date is TBD",
            "position": 3,
            "type": "boolean"
          },
          "dateTime": {
            "description": "The event start datetime",
            "example": "yyyy-MM-ddThh:mm:ssZ",
            "format": "date-time",
            "position": 2,
            "type": "string"
          },
          "localDate": {
            "description": "The event start date in local date",
            "example": "yyyy-MM-dd",
            "format": "date",
            "type": "string"
          },
          "localTime": {
            "$ref": "#/components/schemas/LocalTime",
            "description": "The event end time in local time",
            "example": "yyyy-MM-dd",
            "position": 1
          },
          "noSpecificTime": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the event has no specific time",
            "position": 6,
            "type": "boolean"
          },
          "timeTBA": {
            "default": false,
            "description": "Boolean flag to indicate whether or not the start time is TBA",
            "position": 5,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "State": {
        "description": "State",
        "properties": {
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          },
          "stateCode": {
            "description": "State code",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TatExtension": {
        "description": "The Attraction Tool (TAT) extension",
        "type": "object"
      },
      "TicketmasterAttractionExtensions": {
        "description": "Attraction's extension (ticketmaster source)",
        "type": "object"
      },
      "TicketmasterEventExtensions": {
        "description": "Event's extension (ticketmaster source)",
        "type": "object"
      },
      "TicketmasterVenueExtensions": {
        "description": "Venue's extension (ticketmaster source)",
        "type": "object"
      },
      "Twitter": {
        "description": "Twitter data",
        "properties": {
          "handle": {
            "description": "Twitter handle",
            "enum": [
              "@a Twitter handle"
            ],
            "example": "@a Twitter handle exampe",
            "type": "string"
          },
          "hashtags": {
            "description": "Twitter hashtags",
            "example": "#hashtag example #hashtag another example",
            "items": {
              "type": "string"
            },
            "position": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Venue": {
        "description": "Venue",
        "properties": {
          "accessibleSeatingDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue accessible seating details - multi-lingual fields",
            "example": "en-us:seatingDetails",
            "position": 34,
            "type": "object"
          },
          "active": {
            "default": false,
            "description": "Indicate if the entity is active, inactive entity won't appear in Discovery API",
            "position": 95,
            "type": "boolean"
          },
          "additionalInfos": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional informations of the entity - multi-lingual fields",
            "example": "en-us: additionalInfo",
            "position": 23,
            "type": "object"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "Address of the venue",
            "position": 20
          },
          "boxOfficeInfo": {
            "$ref": "#/components/schemas/VenueBoxOfficeInfo",
            "description": "Box office informations for the venue",
            "position": 31
          },
          "city": {
            "$ref": "#/components/schemas/City",
            "description": "City of the venue",
            "position": 21
          },
          "country": {
            "$ref": "#/components/schemas/Country",
            "description": "Country of the venue",
            "position": 23
          },
          "currency": {
            "description": "Default currency of ticket prices for events in this venue",
            "position": 27,
            "type": "string"
          },
          "descriptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Descriptions of the entity - multi-lingual fields",
            "example": "en-us: description",
            "position": 21,
            "type": "object"
          },
          "discoverable": {
            "default": false,
            "description": "True if the entity is dicoverable in discovery API",
            "position": 97,
            "type": "boolean"
          },
          "distance": {
            "format": "double",
            "type": "number"
          },
          "dma": {
            "description": "The list of associated DMAs (Designated Market Areas) of the venue",
            "items": {
              "$ref": "#/components/schemas/Dma"
            },
            "position": 29,
            "type": "array"
          },
          "generalInfo": {
            "$ref": "#/components/schemas/VenueGeneralInfo",
            "description": "General informations on the venue",
            "position": 36
          },
          "images": {
            "description": "Images of the entity",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "position": 29,
            "type": "array",
            "uniqueItems": true
          },
          "location": {
            "$ref": "#/components/schemas/Location",
            "description": "Location of the venue",
            "position": 25
          },
          "markets": {
            "description": "Markets of the venue",
            "items": {
              "$ref": "#/components/schemas/Market"
            },
            "position": 28,
            "type": "array"
          },
          "names": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Names of the entity - multi-lingual fields",
            "example": "en-us: name",
            "position": 11,
            "type": "object"
          },
          "parkingDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue parking info - multi-lingual fields",
            "example": "en-us:parkingDetails",
            "position": 32,
            "type": "object"
          },
          "postalCode": {
            "description": "Postal code / zipcode of the venue",
            "position": 24,
            "type": "string"
          },
          "references": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "References of this entity in an other system. Reference is the exact same entity",
            "example": "sourceName: id",
            "position": 71,
            "type": "object"
          },
          "relationships": {
            "description": "Relationships on the entity, like if the entity is a duplicate of another one",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "position": 70,
            "type": "array"
          },
          "social": {
            "$ref": "#/components/schemas/Social",
            "description": "Social networks data",
            "position": 30
          },
          "source": {
            "$ref": "#/components/schemas/Source",
            "description": "Source of the entity, where the entity comes from",
            "position": 2
          },
          "state": {
            "$ref": "#/components/schemas/State",
            "description": "State / Province of the venue",
            "position": 22
          },
          "test": {
            "default": false,
            "description": "Indicate if this is a test entity, by default test entities won't appear in discovery API",
            "position": 96,
            "type": "boolean"
          },
          "timezone": {
            "description": "Timezone of the venue",
            "position": 26,
            "type": "string"
          },
          "type": {
            "description": "Type of the entity",
            "enum": [
              "event",
              "venue",
              "attraction"
            ],
            "type": "string"
          },
          "units": {
            "type": "string"
          },
          "url": {
            "description": "URL of a web site detail page of the entity",
            "position": 24,
            "type": "string"
          },
          "version": {
            "description": "Version of the entity. Version is to avoid updated an entity with an older version",
            "format": "int64",
            "position": 80,
            "type": "integer"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "VenueBoxOfficeInfo": {
        "description": "Venue box office information",
        "properties": {
          "acceptedPaymentDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue box office accepted payment details - multi-lingual fields",
            "example": "en-us:paymentDetails",
            "position": 4,
            "type": "object"
          },
          "openHoursDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue box office opening hours - multi-lingual fields",
            "example": "en-us:openHours",
            "position": 2,
            "type": "object"
          },
          "phoneNumberDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue box office phone number - multi-lingual fields",
            "example": "en-us:phoneNumbers",
            "type": "object"
          },
          "willCallDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue box office will call details - multi-lingual fields",
            "example": "en-us:willCall",
            "position": 6,
            "type": "object"
          }
        },
        "type": "object"
      },
      "VenueExtensions": {
        "description": "All Venue's extensions",
        "type": "object"
      },
      "VenueGeneralInfo": {
        "description": "Venue general information",
        "properties": {
          "childRules": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue children rules - multi-lingual fields",
            "example": "en-us: rule",
            "position": 2,
            "type": "object"
          },
          "generalRules": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Venue general rules - multi-lingual fields",
            "example": "en-us: rule",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Video": {
        "description": "This class defines an entitlement data on the Publish API",
        "properties": {
          "embedUrl": {
            "description": "The url of the embeded video",
            "position": 6,
            "type": "string"
          },
          "licensingInformation": {
            "$ref": "#/components/schemas/LicensingInformation",
            "description": "License information for the video",
            "position": 6
          },
          "source": {
            "$ref": "#/components/schemas/Source",
            "description": "Source of the extension, where it came from"
          },
          "url": {
            "description": "The url of the video",
            "position": 6,
            "type": "string"
          }
        },
        "required": [
          "licensingInformation",
          "source",
          "url"
        ],
        "type": "object"
      }
    }
  }
}