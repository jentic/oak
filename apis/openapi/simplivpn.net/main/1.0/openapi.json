{
  "openapi": "3.0.1",
  "info": {
    "title": "SimpliVPNAPI",
    "version": "1.0",
    "x-jentic-source-url": "https://api.simplivpn.net/swagger/v1/swagger.json"
  },
  "servers": [
    {
      "url": "https://api.simplivpn.net"
    }
  ],
  "paths": {
    "/servers": {
      "get": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "operationId": "GetServers",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/server-summaries": {
      "get": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "operationId": "GetServerSummaries",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "summary": "Register",
        "description": "This route allows VPN Admin user's with an api key to register a vpn user account. This route can only be called using your api key supplied to you from SimpliVPN. Before calling this you should use your api key to call the /UsernameAvailable route to make sure the username you want is available first. All subsequent user requests following can be done using the user's api token, their token's expire every 7 days, so you should occasionally check them and if you get unauthorized, refresh their token by calling /login route. This route will also auto-enable a new user.",
        "operationId": "Register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "summary": "Login",
        "description": "This route allows you to login a user. The response will give you a Bearer auth token to use with all rquests pertaining to the user. This token expires in 7 days, so for every request you should check if you get an unauthorized responsve and re-validate the login if needed.",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/enable-user": {
      "post": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "summary": "EnableUser",
        "description": "This route allows you to enable a user's vpn access. This route can only be called using your user's Bearer Auth token.",
        "operationId": "EnableUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/disable-user": {
      "post": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "summary": "DisableUser",
        "description": "This route allows you to disable a user's vpn access.",
        "operationId": "DisableUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/username-available": {
      "post": {
        "tags": [
          "SimpliVPNAPI"
        ],
        "summary": "UsernameAvailable",
        "description": "This route allows VPN Admin user's to check if a specific username is available before registering an account username. This route can only be called using your api key supplied to you from SimpliVPN.",
        "operationId": "UsernameAvailable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DisableUser": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EnableUser": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Register": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "await": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserLogin": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the bearer scheme",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}