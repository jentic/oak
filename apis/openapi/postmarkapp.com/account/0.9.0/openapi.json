{
  "openapi": "3.0.0",
  "info": {
    "description": "Postmark makes sending and receiving email\nincredibly easy. The Account-level API allows users to\nconfigure all Servers, Domains, and Sender Signatures associated\nwith an Account.\n",
    "title": "Postmark Account-level API",
    "version": "0.9.0",
    "x-jentic-source-url": "https://postmarkapp.com/swagger/account.yml"
  },
  "servers": [
    {
      "url": "https://api.postmarkapp.com"
    }
  ],
  "paths": {
    "/domains": {
      "get": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of records to return per request. Max 500.",
            "in": "query",
            "name": "count",
            "required": true,
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of records to skip",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainListingResults"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "listDomains",
        "summary": "List Domains"
      },
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "createDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainCreationModel"
              }
            }
          }
        },
        "summary": "Create a Domain"
      }
    },
    "/domains/{domainid}": {
      "delete": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Domain that should be deleted by the request.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardPostmarkResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "deleteDomain",
        "summary": "Delete a Domain"
      },
      "get": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Domain that should be retrieved.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "getDomain",
        "summary": "Get a Domain"
      },
      "put": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Domain that should be modified by the request.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "editDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEditingModel"
              }
            }
          }
        },
        "summary": "Update a Domain"
      }
    },
    "/domains/{domainid}/rotatedkim": {
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature for which a new DKIM Key should be generated.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DKIMRotationResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "description": "Creates a new DKIM key to replace your current key. Until the DNS entries are confirmed,\nthe new values will be in the `DKIMPendingHost` and `DKIMPendingTextValue` fields.\nAfter the new DKIM value is verified in DNS, the pending values will migrate to\n`DKIMTextValue` and `DKIMPendingTextValue` and Postmark will begin to sign emails\nwith the new DKIM key.\n",
        "operationId": "rotateDKIMKeyForDomain",
        "summary": "Rotate DKIM Key"
      }
    },
    "/domains/{domainid}/verifydkim": {
      "put": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Domain for which DKIM DNS records should be verified.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "requestDkimVerificationForDomain",
        "summary": "Request DNS Verification for DKIM"
      }
    },
    "/domains/{domainid}/verifyreturnpath": {
      "put": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Domain for which Return-Path DNS records should be verified.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "requestReturnPathVerificationForDomain",
        "summary": "Request DNS Verification for Return-Path"
      }
    },
    "/domains/{domainid}/verifyspf": {
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Domain for which SPF DNS records should be verified.",
            "in": "path",
            "name": "domainid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainSPFResult"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Domains API"
        ],
        "operationId": "requestSPFVerificationForDomain",
        "summary": "Request DNS Verification for SPF"
      }
    },
    "/senders": {
      "get": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of records to return per request. Max 500.",
            "in": "query",
            "name": "count",
            "required": true,
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of records to skip",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderListingResults"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "listSenderSignatures",
        "summary": "List Sender Signatures"
      },
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderSignatureExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "createSenderSignature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderSignatureCreationModel"
              }
            }
          }
        },
        "summary": "Create a Sender Signature"
      }
    },
    "/senders/{signatureid}": {
      "delete": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature that should be deleted by the request.",
            "in": "path",
            "name": "signatureid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardPostmarkResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "deleteSenderSignature",
        "summary": "Delete a Sender Signature"
      },
      "get": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature that should be retrieved.",
            "in": "path",
            "name": "signatureid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderSignatureExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "getSenderSignature",
        "summary": "Get a Sender Signature"
      },
      "put": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature that should be modified by the request.",
            "in": "path",
            "name": "signatureid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderSignatureExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "editSenderSignature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderSignatureEditingModel"
              }
            }
          }
        },
        "summary": "Update a Sender Signature"
      }
    },
    "/senders/{signatureid}/requestnewdkim": {
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature for which a new DKIM Key should be generated.",
            "in": "path",
            "name": "signatureid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardPostmarkResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "description": "Requests a new DKIM key to be created. Until the DNS entries are confirmed,\nthe new values will be in the `DKIMPendingHost` and `DKIMPendingTextValue` fields.\nAfter the new DKIM value is verified in DNS, the pending values will migrate to\n`DKIMTextValue` and `DKIMPendingTextValue` and Postmark will begin to sign emails\nwith the new DKIM key.\n",
        "operationId": "requestNewDKIMKeyForSenderSignature",
        "summary": "Request a new DKIM Key"
      }
    },
    "/senders/{signatureid}/resend": {
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature that should have its confirmation email resent.",
            "in": "path",
            "name": "signatureid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardPostmarkResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "resendSenderSignatureConfirmationEmail",
        "summary": "Resend Signature Confirmation Email"
      }
    },
    "/senders/{signatureid}/verifyspf": {
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID for the Sender Signature for which SPF DNS records should be verified.",
            "in": "path",
            "name": "signatureid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderSignatureExtendedInformation"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Sender Signatures API"
        ],
        "operationId": "requestSPFVerificationForSenderSignature",
        "summary": "Request DNS Verification for SPF"
      }
    },
    "/servers": {
      "get": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of servers to return per request.",
            "in": "query",
            "name": "count",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of servers to skip.",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by a specific server name",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListingResponse"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Server Management API"
        ],
        "operationId": "listServers",
        "summary": "List servers"
      },
      "post": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedServerInfo"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Server Management API"
        ],
        "operationId": "createServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServerPayload"
              }
            }
          }
        },
        "summary": "Create a Server"
      }
    },
    "/servers/{serverid}": {
      "delete": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Server that should be deleted.",
            "in": "path",
            "name": "serverid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Server Management API"
        ],
        "operationId": "deleteServer",
        "summary": "Delete a Server"
      },
      "get": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Server to get.",
            "in": "path",
            "name": "serverid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedServerInfo"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Server Management API"
        ],
        "operationId": "getServerInformation",
        "summary": "Get a Server"
      },
      "put": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Server to update.",
            "in": "path",
            "name": "serverid",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedServerInfo"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Server Management API"
        ],
        "operationId": "editServerInformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditServerPayload"
              }
            }
          }
        },
        "summary": "Edit a Server"
      }
    },
    "/templates/push": {
      "put": {
        "parameters": [
          {
            "description": "The token associated with the Account on which this request will operate.",
            "in": "header",
            "name": "X-Postmark-Account-Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesPushResponse"
                }
              }
            },
            "description": "ok"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Templates API"
        ],
        "operationId": "pushTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesPushModel"
              }
            }
          },
          "required": true
        },
        "summary": "Push templates from one server to another"
      }
    }
  },
  "components": {
    "responses": {
      "422": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StandardPostmarkResponse"
            }
          }
        },
        "description": "An error was generated due to incorrect use of the API. See the Message associated with this response for more information."
      },
      "500": {
        "description": "Indicates an internal server error occurred."
      }
    },
    "schemas": {
      "CreateServerPayload": {
        "description": "",
        "properties": {
          "BounceHookUrl": {
            "type": "string"
          },
          "ClickHookUrl": {
            "type": "string"
          },
          "Color": {
            "type": "string"
          },
          "DeliveryHookUrl": {
            "type": "string"
          },
          "InboundDomain": {
            "type": "string"
          },
          "InboundHookUrl": {
            "type": "string"
          },
          "InboundSpamThreshold": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "OpenHookUrl": {
            "type": "string"
          },
          "PostFirstOpenOnly": {
            "type": "boolean"
          },
          "RawEmailEnabled": {
            "type": "boolean"
          },
          "SmtpApiActivated": {
            "type": "boolean"
          },
          "TrackLinks": {
            "enum": [
              "None",
              "HtmlAndTextTracking",
              "HtmlOnlyTracking",
              "TextOnlyTracking"
            ],
            "type": "string"
          },
          "TrackOpens": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DKIMRotationResponse": {
        "description": "",
        "properties": {
          "DKIMHost": {
            "type": "string"
          },
          "DKIMPendingHost": {
            "type": "string"
          },
          "DKIMPendingTextValue": {
            "type": "string"
          },
          "DKIMRevokedHost": {
            "type": "string"
          },
          "DKIMRevokedTextValue": {
            "type": "string"
          },
          "DKIMTestValue": {
            "type": "string"
          },
          "DKIMUpdateStatus": {
            "type": "string"
          },
          "DKIMVerified": {
            "type": "boolean"
          },
          "ID": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "SafeToRemoveRevokedKeyFromDNS": {
            "type": "boolean"
          },
          "WeakDKIM": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DomainCreationModel": {
        "description": "",
        "properties": {
          "Name": {
            "type": "string"
          },
          "ReturnPathDomain": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainEditingModel": {
        "description": "",
        "properties": {
          "ReturnPathDomain": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainExtendedInformation": {
        "description": "",
        "properties": {
          "DKIMHost": {
            "type": "string"
          },
          "DKIMPendingHost": {
            "type": "string"
          },
          "DKIMPendingTextValue": {
            "type": "string"
          },
          "DKIMRevokedHost": {
            "type": "string"
          },
          "DKIMRevokedTextValue": {
            "type": "string"
          },
          "DKIMTestValue": {
            "type": "string"
          },
          "DKIMUpdateStatus": {
            "type": "string"
          },
          "DKIMVerified": {
            "type": "boolean"
          },
          "ID": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ReturnPathDomain": {
            "type": "string"
          },
          "ReturnPathDomainCNAMEValue": {
            "type": "string"
          },
          "ReturnPathDomainVerified": {
            "type": "boolean"
          },
          "SPFHost": {
            "type": "string"
          },
          "SPFTextValue": {
            "type": "string"
          },
          "SPFVerified": {
            "type": "boolean"
          },
          "SafeToRemoveRevokedKeyFromDNS": {
            "type": "boolean"
          },
          "WeakDKIM": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DomainInformation": {
        "description": "",
        "properties": {
          "DKIMVerified": {
            "type": "boolean"
          },
          "ID": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ReturnPathDomainVerified": {
            "type": "boolean"
          },
          "SPFVerified": {
            "type": "boolean"
          },
          "WeakDKIM": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DomainListingResults": {
        "description": "",
        "properties": {
          "Domains": {
            "items": {
              "$ref": "#/components/schemas/DomainInformation"
            },
            "type": "array"
          },
          "TotalCount": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DomainSPFResult": {
        "description": "",
        "properties": {
          "SPFHost": {
            "type": "string"
          },
          "SPFTextValue": {
            "type": "string"
          },
          "SPFVerified": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EditServerPayload": {
        "description": "",
        "properties": {
          "BounceHookUrl": {
            "type": "string"
          },
          "ClickHookUrl": {
            "type": "string"
          },
          "Color": {
            "type": "string"
          },
          "DeliveryHookUrl": {
            "type": "string"
          },
          "InboundDomain": {
            "type": "string"
          },
          "InboundHookUrl": {
            "type": "string"
          },
          "InboundSpamThreshold": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "OpenHookUrl": {
            "type": "string"
          },
          "PostFirstOpenOnly": {
            "type": "boolean"
          },
          "RawEmailEnabled": {
            "type": "boolean"
          },
          "SmtpApiActivated": {
            "type": "boolean"
          },
          "TrackLinks": {
            "enum": [
              "None",
              "HtmlAndTextTracking",
              "HtmlOnlyTracking",
              "TextOnlyTracking"
            ],
            "type": "string"
          },
          "TrackOpens": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ExtendedServerInfo": {
        "description": "",
        "properties": {
          "ApiTokens": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "BounceHookUrl": {
            "type": "string"
          },
          "ClickHookUrl": {
            "type": "string"
          },
          "Color": {
            "type": "string"
          },
          "DeliveryHookUrl": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "InboundAddress": {
            "type": "string"
          },
          "InboundDomain": {
            "type": "string"
          },
          "InboundHash": {
            "type": "string"
          },
          "InboundHookUrl": {
            "type": "string"
          },
          "InboundSpamThreshold": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "OpenHookUrl": {
            "type": "string"
          },
          "PostFirstOpenOnly": {
            "type": "boolean"
          },
          "RawEmailEnabled": {
            "type": "boolean"
          },
          "ServerLink": {
            "type": "string"
          },
          "SmtpApiActivated": {
            "type": "boolean"
          },
          "TrackLinks": {
            "enum": [
              "None",
              "HtmlAndTextTracking",
              "HtmlOnlyTracking",
              "TextOnlyTracking"
            ],
            "type": "string"
          },
          "TrackOpens": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SenderListingResults": {
        "description": "",
        "properties": {
          "SenderSignatures": {
            "items": {
              "$ref": "#/components/schemas/SenderSignatureInformation"
            },
            "type": "array"
          },
          "TotalCount": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SenderSignatureCreationModel": {
        "description": "",
        "properties": {
          "FromEmail": {
            "format": "email",
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "ReplyToEmail": {
            "format": "email",
            "type": "string"
          },
          "ReturnPathDomain": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SenderSignatureEditingModel": {
        "description": "",
        "properties": {
          "Name": {
            "type": "string"
          },
          "ReplyToEmail": {
            "format": "email",
            "type": "string"
          },
          "ReturnPathDomain": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SenderSignatureExtendedInformation": {
        "description": "",
        "properties": {
          "Confirmed": {
            "type": "boolean"
          },
          "DKIMHost": {
            "type": "string"
          },
          "DKIMPendingHost": {
            "type": "string"
          },
          "DKIMPendingTextValue": {
            "type": "string"
          },
          "DKIMRevokedHost": {
            "type": "string"
          },
          "DKIMRevokedTextValue": {
            "type": "string"
          },
          "DKIMTestValue": {
            "type": "string"
          },
          "DKIMUpdateStatus": {
            "type": "string"
          },
          "DKIMVerified": {
            "type": "boolean"
          },
          "Domain": {
            "type": "string"
          },
          "EmailAddress": {
            "format": "email",
            "type": "string"
          },
          "ID": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ReplyToEmailAddress": {
            "format": "email",
            "type": "string"
          },
          "ReturnPathDomain": {
            "type": "string"
          },
          "ReturnPathDomainCNAMEValue": {
            "type": "string"
          },
          "ReturnPathDomainVerified": {
            "type": "boolean"
          },
          "SPFHost": {
            "type": "string"
          },
          "SPFTextValue": {
            "type": "string"
          },
          "SPFVerified": {
            "type": "boolean"
          },
          "SafeToRemoveRevokedKeyFromDNS": {
            "type": "boolean"
          },
          "WeakDKIM": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SenderSignatureInformation": {
        "description": "",
        "properties": {
          "Confirmed": {
            "type": "boolean"
          },
          "Domain": {
            "type": "string"
          },
          "EmailAddress": {
            "format": "email",
            "type": "string"
          },
          "ID": {
            "format": "int64",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ReplyToEmailAddress": {
            "format": "email",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerListingResponse": {
        "description": "The results of listing servers.",
        "properties": {
          "Servers": {
            "items": {
              "$ref": "#/components/schemas/ExtendedServerInfo"
            },
            "type": "array"
          },
          "TotalCount": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StandardPostmarkResponse": {
        "description": "A Postmark API error.",
        "properties": {
          "ErrorCode": {
            "type": "integer"
          },
          "Message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplatesPushModel": {
        "description": "",
        "properties": {
          "DestinationServerId": {
            "type": "integer"
          },
          "PerformChanges": {
            "type": "boolean"
          },
          "SourceServerId": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TemplatesPushResponse": {
        "description": "",
        "properties": {
          "Templates": {
            "items": {
              "properties": {
                "Action": {
                  "type": "string"
                },
                "Alias": {
                  "type": "string"
                },
                "Name": {
                  "type": "string"
                },
                "TemplateId": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "TotalCount": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  }
}