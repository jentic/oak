{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@files.com",
      "name": "Files.com Customer Success Team"
    },
    "title": "Files.com API",
    "version": "0.0.1",
    "x-jentic-source-url": "https://app.files.com/api/rest/v1/swagger_doc.json"
  },
  "servers": [
    {
      "url": "https://app.files.com/api/rest/v1"
    }
  ],
  "paths": {
    "/action_notification_export_results": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "ID of the associated action notification export.",
            "in": "query",
            "name": "action_notification_export_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "ID of the associated action notification export."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionNotificationExportResultEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionNotificationExportResultEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionNotificationExportResultEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ActionNotificationExportResults objects.",
            "x-ms-summary": "A list of ActionNotificationExportResults objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "action_notification_export_results",
          "Action Notification Export Results"
        ],
        "description": "List Action Notification Export Results",
        "operationId": "GetActionNotificationExportResults",
        "summary": "List Action Notification Export Results",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/action_notification_exports": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionNotificationExportEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ActionNotificationExportEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActionNotificationExportEntity"
                }
              }
            },
            "description": "The ActionNotificationExports object.",
            "x-ms-summary": "The ActionNotificationExports object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "action_notification_exports",
          "Action Notification Exports"
        ],
        "description": "Create Action Notification Export",
        "operationId": "PostActionNotificationExports",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "end_at": {
                    "description": "End date/time of export range.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "query_folder": {
                    "description": "Return notifications that were triggered by actions in this folder.",
                    "type": "string"
                  },
                  "query_message": {
                    "description": "Error message associated with the request, if any.",
                    "type": "string"
                  },
                  "query_path": {
                    "description": "Return notifications that were triggered by actions on this specific path.",
                    "type": "string"
                  },
                  "query_request_method": {
                    "description": "The HTTP request method used by the webhook.",
                    "type": "string"
                  },
                  "query_request_url": {
                    "description": "The target webhook URL.",
                    "type": "string"
                  },
                  "query_status": {
                    "description": "The HTTP status returned from the server in response to the webhook request.",
                    "type": "string"
                  },
                  "query_success": {
                    "description": "true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise.",
                    "type": "boolean"
                  },
                  "start_at": {
                    "description": "Start date/time of export range.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Action Notification Export",
        "x-authentication": [
          "folder_admin",
          "readonly_ok",
          {
            "path_params": [
              "query_path",
              "query_folder"
            ]
          }
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/action_notification_exports/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Action Notification Export ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Action Notification Export ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionNotificationExportEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ActionNotificationExportEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActionNotificationExportEntity"
                }
              }
            },
            "description": "The ActionNotificationExports object.",
            "x-ms-summary": "The ActionNotificationExports object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "action_notification_exports",
          "Action Notification Exports"
        ],
        "description": "Show Action Notification Export",
        "operationId": "GetActionNotificationExportsId",
        "summary": "Show Action Notification Export",
        "x-authentication": [
          "folder_admin",
          "readonly_ok"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/api_key": {
      "delete": {
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_key",
          "API Keys"
        ],
        "description": "Delete current API key.  (Requires current API connection to be using an API key.)",
        "operationId": "ApiKeyDeleteCurrent",
        "summary": "Delete current API key.  (Requires current API connection to be using an API key.)",
        "x-authentication": [
          "native_app",
          "office_integration"
        ],
        "x-category": [
          "developers"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKey object.",
            "x-ms-summary": "The ApiKey object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_key",
          "API Keys"
        ],
        "description": "Show information about current API key.  (Requires current API connection to be using an API key.)",
        "operationId": "ApiKeyFindCurrent",
        "summary": "Show information about current API key.  (Requires current API connection to be using an API key.)",
        "x-authentication": [
          "native_app",
          "office_integration"
        ],
        "x-category": [
          "developers"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKey object.",
            "x-ms-summary": "The ApiKey object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_key",
          "API Keys"
        ],
        "description": "Update current API key.  (Requires current API connection to be using an API key.)",
        "operationId": "ApiKeyUpdateCurrent",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "expires_at": {
                    "description": "API Key expiration date",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "Internal name for the API Key.  For your use.",
                    "type": "string"
                  },
                  "permission_set": {
                    "description": "Permissions for this API Key. It must be full for site-wide API Keys.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations). Keys with the `office_integration` permission set are auto generated, and automatically expire, to allow users to interact with office integration platforms. Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.",
                    "enum": [
                      "none",
                      "full",
                      "desktop_app",
                      "sync_app",
                      "office_integration",
                      "mobile_app"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update current API key.  (Requires current API connection to be using an API key.)",
        "x-authentication": [
          "native_app",
          "office_integration"
        ],
        "x-category": [
          "developers"
        ]
      }
    },
    "/api_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ApiKeys objects.",
            "x-ms-summary": "A list of ApiKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_keys",
          "API Keys"
        ],
        "description": "List API Keys",
        "operationId": "GetApiKeys",
        "summary": "List API Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "expires_at": {
              "sort": [
                "expires_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ],
        "x-sortable_columns": [
          "expires_at"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKeys object.",
            "x-ms-summary": "The ApiKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_keys",
          "API Keys"
        ],
        "description": "Create API Key",
        "operationId": "PostApiKeys",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostApiKeys"
        },
        "summary": "Create API Key",
        "x-authentication": [],
        "x-category": [
          "developers"
        ],
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ]
      }
    },
    "/api_keys/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Api Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Api Key ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_keys",
          "API Keys"
        ],
        "description": "Delete API Key",
        "operationId": "DeleteApiKeysId",
        "summary": "Delete API Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Api Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Api Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKeys object.",
            "x-ms-summary": "The ApiKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_keys",
          "API Keys"
        ],
        "description": "Show API Key",
        "operationId": "GetApiKeysId",
        "summary": "Show API Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Api Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Api Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKeys object.",
            "x-ms-summary": "The ApiKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_keys",
          "API Keys"
        ],
        "description": "Update API Key",
        "operationId": "PatchApiKeysId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "User-supplied description of API key.",
                    "type": "string"
                  },
                  "expires_at": {
                    "description": "API Key expiration date",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "Internal name for the API Key.  For your use.",
                    "type": "string"
                  },
                  "permission_set": {
                    "description": "Permissions for this API Key. It must be full for site-wide API Keys.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations). Keys with the `office_integration` permission set are auto generated, and automatically expire, to allow users to interact with office integration platforms. Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.",
                    "enum": [
                      "none",
                      "full",
                      "desktop_app",
                      "sync_app",
                      "office_integration",
                      "mobile_app"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update API Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ]
      }
    },
    "/api_request_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `api_key_id`, `interface`, `request_id`, `request_ip`, `request_method`, `success` or `user_id`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ api_key_id ]`, `[ interface ]`, `[ request_id ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ user_id ]`, `[ start_date, end_date ]`, `[ start_date, api_key_id ]`, `[ start_date, interface ]`, `[ start_date, request_id ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ start_date, user_id ]`, `[ end_date, api_key_id ]`, `[ end_date, interface ]`, `[ end_date, request_id ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ end_date, user_id ]`, `[ api_key_id, interface ]`, `[ api_key_id, request_id ]`, `[ api_key_id, request_ip ]`, `[ api_key_id, request_method ]`, `[ api_key_id, success ]`, `[ api_key_id, user_id ]`, `[ interface, request_id ]`, `[ interface, request_ip ]`, `[ interface, request_method ]`, `[ interface, success ]`, `[ interface, user_id ]`, `[ request_id, request_ip ]`, `[ request_id, request_method ]`, `[ request_id, success ]`, `[ request_id, user_id ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_ip, user_id ]`, `[ request_method, success ]`, `[ request_method, user_id ]`, `[ success, user_id ]`, `[ start_date, end_date, api_key_id ]`, `[ start_date, end_date, interface ]`, `[ start_date, end_date, request_id ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, user_id ]`, `[ start_date, api_key_id, interface ]`, `[ start_date, api_key_id, request_id ]`, `[ start_date, api_key_id, request_ip ]`, `[ start_date, api_key_id, request_method ]`, `[ start_date, api_key_id, success ]`, `[ start_date, api_key_id, user_id ]`, `[ start_date, interface, request_id ]`, `[ start_date, interface, request_ip ]`, `[ start_date, interface, request_method ]`, `[ start_date, interface, success ]`, `[ start_date, interface, user_id ]`, `[ start_date, request_id, request_ip ]`, `[ start_date, request_id, request_method ]`, `[ start_date, request_id, success ]`, `[ start_date, request_id, user_id ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_ip, user_id ]`, `[ start_date, request_method, success ]`, `[ start_date, request_method, user_id ]`, `[ start_date, success, user_id ]`, `[ end_date, api_key_id, interface ]`, `[ end_date, api_key_id, request_id ]`, `[ end_date, api_key_id, request_ip ]`, `[ end_date, api_key_id, request_method ]`, `[ end_date, api_key_id, success ]`, `[ end_date, api_key_id, user_id ]`, `[ end_date, interface, request_id ]`, `[ end_date, interface, request_ip ]`, `[ end_date, interface, request_method ]`, `[ end_date, interface, success ]`, `[ end_date, interface, user_id ]`, `[ end_date, request_id, request_ip ]`, `[ end_date, request_id, request_method ]`, `[ end_date, request_id, success ]`, `[ end_date, request_id, user_id ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_ip, user_id ]`, `[ end_date, request_method, success ]`, `[ end_date, request_method, user_id ]`, `[ end_date, success, user_id ]`, `[ api_key_id, interface, request_id ]`, `[ api_key_id, interface, request_ip ]`, `[ api_key_id, interface, request_method ]`, `[ api_key_id, interface, success ]`, `[ api_key_id, interface, user_id ]`, `[ api_key_id, request_id, request_ip ]`, `[ api_key_id, request_id, request_method ]`, `[ api_key_id, request_id, success ]`, `[ api_key_id, request_id, user_id ]`, `[ api_key_id, request_ip, request_method ]`, `[ api_key_id, request_ip, success ]`, `[ api_key_id, request_ip, user_id ]`, `[ api_key_id, request_method, success ]`, `[ api_key_id, request_method, user_id ]`, `[ api_key_id, success, user_id ]`, `[ interface, request_id, request_ip ]`, `[ interface, request_id, request_method ]`, `[ interface, request_id, success ]`, `[ interface, request_id, user_id ]`, `[ interface, request_ip, request_method ]`, `[ interface, request_ip, success ]`, `[ interface, request_ip, user_id ]`, `[ interface, request_method, success ]`, `[ interface, request_method, user_id ]`, `[ interface, success, user_id ]`, `[ request_id, request_ip, request_method ]`, `[ request_id, request_ip, success ]`, `[ request_id, request_ip, user_id ]`, `[ request_id, request_method, success ]`, `[ request_id, request_method, user_id ]`, `[ request_id, success, user_id ]`, `[ request_ip, request_method, success ]`, `[ request_ip, request_method, user_id ]`, `[ request_ip, success, user_id ]`, `[ request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface ]`, `[ start_date, end_date, api_key_id, request_id ]`, `[ start_date, end_date, api_key_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_method ]`, `[ start_date, end_date, api_key_id, success ]`, `[ start_date, end_date, api_key_id, user_id ]`, `[ start_date, end_date, interface, request_id ]`, `[ start_date, end_date, interface, request_ip ]`, `[ start_date, end_date, interface, request_method ]`, `[ start_date, end_date, interface, success ]`, `[ start_date, end_date, interface, user_id ]`, `[ start_date, end_date, request_id, request_ip ]`, `[ start_date, end_date, request_id, request_method ]`, `[ start_date, end_date, request_id, success ]`, `[ start_date, end_date, request_id, user_id ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_ip, user_id ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, end_date, request_method, user_id ]`, `[ start_date, end_date, success, user_id ]`, `[ start_date, api_key_id, interface, request_id ]`, `[ start_date, api_key_id, interface, request_ip ]`, `[ start_date, api_key_id, interface, request_method ]`, `[ start_date, api_key_id, interface, success ]`, `[ start_date, api_key_id, interface, user_id ]`, `[ start_date, api_key_id, request_id, request_ip ]`, `[ start_date, api_key_id, request_id, request_method ]`, `[ start_date, api_key_id, request_id, success ]`, `[ start_date, api_key_id, request_id, user_id ]`, `[ start_date, api_key_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_ip, success ]`, `[ start_date, api_key_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_method, success ]`, `[ start_date, api_key_id, request_method, user_id ]`, `[ start_date, api_key_id, success, user_id ]`, `[ start_date, interface, request_id, request_ip ]`, `[ start_date, interface, request_id, request_method ]`, `[ start_date, interface, request_id, success ]`, `[ start_date, interface, request_id, user_id ]`, `[ start_date, interface, request_ip, request_method ]`, `[ start_date, interface, request_ip, success ]`, `[ start_date, interface, request_ip, user_id ]`, `[ start_date, interface, request_method, success ]`, `[ start_date, interface, request_method, user_id ]`, `[ start_date, interface, success, user_id ]`, `[ start_date, request_id, request_ip, request_method ]`, `[ start_date, request_id, request_ip, success ]`, `[ start_date, request_id, request_ip, user_id ]`, `[ start_date, request_id, request_method, success ]`, `[ start_date, request_id, request_method, user_id ]`, `[ start_date, request_id, success, user_id ]`, `[ start_date, request_ip, request_method, success ]`, `[ start_date, request_ip, request_method, user_id ]`, `[ start_date, request_ip, success, user_id ]`, `[ start_date, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id ]`, `[ end_date, api_key_id, interface, request_ip ]`, `[ end_date, api_key_id, interface, request_method ]`, `[ end_date, api_key_id, interface, success ]`, `[ end_date, api_key_id, interface, user_id ]`, `[ end_date, api_key_id, request_id, request_ip ]`, `[ end_date, api_key_id, request_id, request_method ]`, `[ end_date, api_key_id, request_id, success ]`, `[ end_date, api_key_id, request_id, user_id ]`, `[ end_date, api_key_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_ip, success ]`, `[ end_date, api_key_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_method, success ]`, `[ end_date, api_key_id, request_method, user_id ]`, `[ end_date, api_key_id, success, user_id ]`, `[ end_date, interface, request_id, request_ip ]`, `[ end_date, interface, request_id, request_method ]`, `[ end_date, interface, request_id, success ]`, `[ end_date, interface, request_id, user_id ]`, `[ end_date, interface, request_ip, request_method ]`, `[ end_date, interface, request_ip, success ]`, `[ end_date, interface, request_ip, user_id ]`, `[ end_date, interface, request_method, success ]`, `[ end_date, interface, request_method, user_id ]`, `[ end_date, interface, success, user_id ]`, `[ end_date, request_id, request_ip, request_method ]`, `[ end_date, request_id, request_ip, success ]`, `[ end_date, request_id, request_ip, user_id ]`, `[ end_date, request_id, request_method, success ]`, `[ end_date, request_id, request_method, user_id ]`, `[ end_date, request_id, success, user_id ]`, `[ end_date, request_ip, request_method, success ]`, `[ end_date, request_ip, request_method, user_id ]`, `[ end_date, request_ip, success, user_id ]`, `[ end_date, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip ]`, `[ api_key_id, interface, request_id, request_method ]`, `[ api_key_id, interface, request_id, success ]`, `[ api_key_id, interface, request_id, user_id ]`, `[ api_key_id, interface, request_ip, request_method ]`, `[ api_key_id, interface, request_ip, success ]`, `[ api_key_id, interface, request_ip, user_id ]`, `[ api_key_id, interface, request_method, success ]`, `[ api_key_id, interface, request_method, user_id ]`, `[ api_key_id, interface, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method ]`, `[ api_key_id, request_id, request_ip, success ]`, `[ api_key_id, request_id, request_ip, user_id ]`, `[ api_key_id, request_id, request_method, success ]`, `[ api_key_id, request_id, request_method, user_id ]`, `[ api_key_id, request_id, success, user_id ]`, `[ api_key_id, request_ip, request_method, success ]`, `[ api_key_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_ip, success, user_id ]`, `[ api_key_id, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method ]`, `[ interface, request_id, request_ip, success ]`, `[ interface, request_id, request_ip, user_id ]`, `[ interface, request_id, request_method, success ]`, `[ interface, request_id, request_method, user_id ]`, `[ interface, request_id, success, user_id ]`, `[ interface, request_ip, request_method, success ]`, `[ interface, request_ip, request_method, user_id ]`, `[ interface, request_ip, success, user_id ]`, `[ interface, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success ]`, `[ request_id, request_ip, request_method, user_id ]`, `[ request_id, request_ip, success, user_id ]`, `[ request_id, request_method, success, user_id ]`, `[ request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_method ]`, `[ start_date, end_date, api_key_id, interface, success ]`, `[ start_date, end_date, api_key_id, interface, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_id, request_method ]`, `[ start_date, end_date, api_key_id, request_id, success ]`, `[ start_date, end_date, api_key_id, request_id, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip ]`, `[ start_date, end_date, interface, request_id, request_method ]`, `[ start_date, end_date, interface, request_id, success ]`, `[ start_date, end_date, interface, request_id, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method ]`, `[ start_date, end_date, interface, request_ip, success ]`, `[ start_date, end_date, interface, request_ip, user_id ]`, `[ start_date, end_date, interface, request_method, success ]`, `[ start_date, end_date, interface, request_method, user_id ]`, `[ start_date, end_date, interface, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method ]`, `[ start_date, end_date, request_id, request_ip, success ]`, `[ start_date, end_date, request_id, request_ip, user_id ]`, `[ start_date, end_date, request_id, request_method, success ]`, `[ start_date, end_date, request_id, request_method, user_id ]`, `[ start_date, end_date, request_id, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_ip, success, user_id ]`, `[ start_date, end_date, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, api_key_id, interface, request_id, success ]`, `[ start_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_ip, success ]`, `[ start_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_method, success ]`, `[ start_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, api_key_id, interface, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success ]`, `[ start_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, api_key_id, request_id, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method ]`, `[ start_date, interface, request_id, request_ip, success ]`, `[ start_date, interface, request_id, request_ip, user_id ]`, `[ start_date, interface, request_id, request_method, success ]`, `[ start_date, interface, request_id, request_method, user_id ]`, `[ start_date, interface, request_id, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success ]`, `[ start_date, interface, request_ip, request_method, user_id ]`, `[ start_date, interface, request_ip, success, user_id ]`, `[ start_date, interface, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success ]`, `[ start_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, request_id, request_ip, success, user_id ]`, `[ start_date, request_id, request_method, success, user_id ]`, `[ start_date, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip ]`, `[ end_date, api_key_id, interface, request_id, request_method ]`, `[ end_date, api_key_id, interface, request_id, success ]`, `[ end_date, api_key_id, interface, request_id, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_ip, success ]`, `[ end_date, api_key_id, interface, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_method, success ]`, `[ end_date, api_key_id, interface, request_method, user_id ]`, `[ end_date, api_key_id, interface, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_id, request_ip, success ]`, `[ end_date, api_key_id, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success ]`, `[ end_date, api_key_id, request_id, request_method, user_id ]`, `[ end_date, api_key_id, request_id, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method ]`, `[ end_date, interface, request_id, request_ip, success ]`, `[ end_date, interface, request_id, request_ip, user_id ]`, `[ end_date, interface, request_id, request_method, success ]`, `[ end_date, interface, request_id, request_method, user_id ]`, `[ end_date, interface, request_id, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success ]`, `[ end_date, interface, request_ip, request_method, user_id ]`, `[ end_date, interface, request_ip, success, user_id ]`, `[ end_date, interface, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success ]`, `[ end_date, request_id, request_ip, request_method, user_id ]`, `[ end_date, request_id, request_ip, success, user_id ]`, `[ end_date, request_id, request_method, success, user_id ]`, `[ end_date, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method ]`, `[ api_key_id, interface, request_id, request_ip, success ]`, `[ api_key_id, interface, request_id, request_ip, user_id ]`, `[ api_key_id, interface, request_id, request_method, success ]`, `[ api_key_id, interface, request_id, request_method, user_id ]`, `[ api_key_id, interface, request_id, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success ]`, `[ api_key_id, interface, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_ip, success, user_id ]`, `[ api_key_id, interface, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success ]`, `[ api_key_id, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_id, request_ip, success, user_id ]`, `[ api_key_id, request_id, request_method, success, user_id ]`, `[ api_key_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success ]`, `[ interface, request_id, request_ip, request_method, user_id ]`, `[ interface, request_id, request_ip, success, user_id ]`, `[ interface, request_id, request_method, success, user_id ]`, `[ interface, request_ip, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, interface, request_id, request_ip, success ]`, `[ start_date, end_date, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, request_id, request_method, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success ]`, `[ end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, interface, request_id, request_ip, success, user_id ]`, `[ end_date, interface, request_id, request_method, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ api_key_id, interface, request_id, request_method, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]` or `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `api_key_id`, `interface`, `request_id`, `request_ip`, `request_method`, `success` or `user_id`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ api_key_id ]`, `[ interface ]`, `[ request_id ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ user_id ]`, `[ start_date, end_date ]`, `[ start_date, api_key_id ]`, `[ start_date, interface ]`, `[ start_date, request_id ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ start_date, user_id ]`, `[ end_date, api_key_id ]`, `[ end_date, interface ]`, `[ end_date, request_id ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ end_date, user_id ]`, `[ api_key_id, interface ]`, `[ api_key_id, request_id ]`, `[ api_key_id, request_ip ]`, `[ api_key_id, request_method ]`, `[ api_key_id, success ]`, `[ api_key_id, user_id ]`, `[ interface, request_id ]`, `[ interface, request_ip ]`, `[ interface, request_method ]`, `[ interface, success ]`, `[ interface, user_id ]`, `[ request_id, request_ip ]`, `[ request_id, request_method ]`, `[ request_id, success ]`, `[ request_id, user_id ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_ip, user_id ]`, `[ request_method, success ]`, `[ request_method, user_id ]`, `[ success, user_id ]`, `[ start_date, end_date, api_key_id ]`, `[ start_date, end_date, interface ]`, `[ start_date, end_date, request_id ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, user_id ]`, `[ start_date, api_key_id, interface ]`, `[ start_date, api_key_id, request_id ]`, `[ start_date, api_key_id, request_ip ]`, `[ start_date, api_key_id, request_method ]`, `[ start_date, api_key_id, success ]`, `[ start_date, api_key_id, user_id ]`, `[ start_date, interface, request_id ]`, `[ start_date, interface, request_ip ]`, `[ start_date, interface, request_method ]`, `[ start_date, interface, success ]`, `[ start_date, interface, user_id ]`, `[ start_date, request_id, request_ip ]`, `[ start_date, request_id, request_method ]`, `[ start_date, request_id, success ]`, `[ start_date, request_id, user_id ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_ip, user_id ]`, `[ start_date, request_method, success ]`, `[ start_date, request_method, user_id ]`, `[ start_date, success, user_id ]`, `[ end_date, api_key_id, interface ]`, `[ end_date, api_key_id, request_id ]`, `[ end_date, api_key_id, request_ip ]`, `[ end_date, api_key_id, request_method ]`, `[ end_date, api_key_id, success ]`, `[ end_date, api_key_id, user_id ]`, `[ end_date, interface, request_id ]`, `[ end_date, interface, request_ip ]`, `[ end_date, interface, request_method ]`, `[ end_date, interface, success ]`, `[ end_date, interface, user_id ]`, `[ end_date, request_id, request_ip ]`, `[ end_date, request_id, request_method ]`, `[ end_date, request_id, success ]`, `[ end_date, request_id, user_id ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_ip, user_id ]`, `[ end_date, request_method, success ]`, `[ end_date, request_method, user_id ]`, `[ end_date, success, user_id ]`, `[ api_key_id, interface, request_id ]`, `[ api_key_id, interface, request_ip ]`, `[ api_key_id, interface, request_method ]`, `[ api_key_id, interface, success ]`, `[ api_key_id, interface, user_id ]`, `[ api_key_id, request_id, request_ip ]`, `[ api_key_id, request_id, request_method ]`, `[ api_key_id, request_id, success ]`, `[ api_key_id, request_id, user_id ]`, `[ api_key_id, request_ip, request_method ]`, `[ api_key_id, request_ip, success ]`, `[ api_key_id, request_ip, user_id ]`, `[ api_key_id, request_method, success ]`, `[ api_key_id, request_method, user_id ]`, `[ api_key_id, success, user_id ]`, `[ interface, request_id, request_ip ]`, `[ interface, request_id, request_method ]`, `[ interface, request_id, success ]`, `[ interface, request_id, user_id ]`, `[ interface, request_ip, request_method ]`, `[ interface, request_ip, success ]`, `[ interface, request_ip, user_id ]`, `[ interface, request_method, success ]`, `[ interface, request_method, user_id ]`, `[ interface, success, user_id ]`, `[ request_id, request_ip, request_method ]`, `[ request_id, request_ip, success ]`, `[ request_id, request_ip, user_id ]`, `[ request_id, request_method, success ]`, `[ request_id, request_method, user_id ]`, `[ request_id, success, user_id ]`, `[ request_ip, request_method, success ]`, `[ request_ip, request_method, user_id ]`, `[ request_ip, success, user_id ]`, `[ request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface ]`, `[ start_date, end_date, api_key_id, request_id ]`, `[ start_date, end_date, api_key_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_method ]`, `[ start_date, end_date, api_key_id, success ]`, `[ start_date, end_date, api_key_id, user_id ]`, `[ start_date, end_date, interface, request_id ]`, `[ start_date, end_date, interface, request_ip ]`, `[ start_date, end_date, interface, request_method ]`, `[ start_date, end_date, interface, success ]`, `[ start_date, end_date, interface, user_id ]`, `[ start_date, end_date, request_id, request_ip ]`, `[ start_date, end_date, request_id, request_method ]`, `[ start_date, end_date, request_id, success ]`, `[ start_date, end_date, request_id, user_id ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_ip, user_id ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, end_date, request_method, user_id ]`, `[ start_date, end_date, success, user_id ]`, `[ start_date, api_key_id, interface, request_id ]`, `[ start_date, api_key_id, interface, request_ip ]`, `[ start_date, api_key_id, interface, request_method ]`, `[ start_date, api_key_id, interface, success ]`, `[ start_date, api_key_id, interface, user_id ]`, `[ start_date, api_key_id, request_id, request_ip ]`, `[ start_date, api_key_id, request_id, request_method ]`, `[ start_date, api_key_id, request_id, success ]`, `[ start_date, api_key_id, request_id, user_id ]`, `[ start_date, api_key_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_ip, success ]`, `[ start_date, api_key_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_method, success ]`, `[ start_date, api_key_id, request_method, user_id ]`, `[ start_date, api_key_id, success, user_id ]`, `[ start_date, interface, request_id, request_ip ]`, `[ start_date, interface, request_id, request_method ]`, `[ start_date, interface, request_id, success ]`, `[ start_date, interface, request_id, user_id ]`, `[ start_date, interface, request_ip, request_method ]`, `[ start_date, interface, request_ip, success ]`, `[ start_date, interface, request_ip, user_id ]`, `[ start_date, interface, request_method, success ]`, `[ start_date, interface, request_method, user_id ]`, `[ start_date, interface, success, user_id ]`, `[ start_date, request_id, request_ip, request_method ]`, `[ start_date, request_id, request_ip, success ]`, `[ start_date, request_id, request_ip, user_id ]`, `[ start_date, request_id, request_method, success ]`, `[ start_date, request_id, request_method, user_id ]`, `[ start_date, request_id, success, user_id ]`, `[ start_date, request_ip, request_method, success ]`, `[ start_date, request_ip, request_method, user_id ]`, `[ start_date, request_ip, success, user_id ]`, `[ start_date, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id ]`, `[ end_date, api_key_id, interface, request_ip ]`, `[ end_date, api_key_id, interface, request_method ]`, `[ end_date, api_key_id, interface, success ]`, `[ end_date, api_key_id, interface, user_id ]`, `[ end_date, api_key_id, request_id, request_ip ]`, `[ end_date, api_key_id, request_id, request_method ]`, `[ end_date, api_key_id, request_id, success ]`, `[ end_date, api_key_id, request_id, user_id ]`, `[ end_date, api_key_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_ip, success ]`, `[ end_date, api_key_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_method, success ]`, `[ end_date, api_key_id, request_method, user_id ]`, `[ end_date, api_key_id, success, user_id ]`, `[ end_date, interface, request_id, request_ip ]`, `[ end_date, interface, request_id, request_method ]`, `[ end_date, interface, request_id, success ]`, `[ end_date, interface, request_id, user_id ]`, `[ end_date, interface, request_ip, request_method ]`, `[ end_date, interface, request_ip, success ]`, `[ end_date, interface, request_ip, user_id ]`, `[ end_date, interface, request_method, success ]`, `[ end_date, interface, request_method, user_id ]`, `[ end_date, interface, success, user_id ]`, `[ end_date, request_id, request_ip, request_method ]`, `[ end_date, request_id, request_ip, success ]`, `[ end_date, request_id, request_ip, user_id ]`, `[ end_date, request_id, request_method, success ]`, `[ end_date, request_id, request_method, user_id ]`, `[ end_date, request_id, success, user_id ]`, `[ end_date, request_ip, request_method, success ]`, `[ end_date, request_ip, request_method, user_id ]`, `[ end_date, request_ip, success, user_id ]`, `[ end_date, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip ]`, `[ api_key_id, interface, request_id, request_method ]`, `[ api_key_id, interface, request_id, success ]`, `[ api_key_id, interface, request_id, user_id ]`, `[ api_key_id, interface, request_ip, request_method ]`, `[ api_key_id, interface, request_ip, success ]`, `[ api_key_id, interface, request_ip, user_id ]`, `[ api_key_id, interface, request_method, success ]`, `[ api_key_id, interface, request_method, user_id ]`, `[ api_key_id, interface, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method ]`, `[ api_key_id, request_id, request_ip, success ]`, `[ api_key_id, request_id, request_ip, user_id ]`, `[ api_key_id, request_id, request_method, success ]`, `[ api_key_id, request_id, request_method, user_id ]`, `[ api_key_id, request_id, success, user_id ]`, `[ api_key_id, request_ip, request_method, success ]`, `[ api_key_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_ip, success, user_id ]`, `[ api_key_id, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method ]`, `[ interface, request_id, request_ip, success ]`, `[ interface, request_id, request_ip, user_id ]`, `[ interface, request_id, request_method, success ]`, `[ interface, request_id, request_method, user_id ]`, `[ interface, request_id, success, user_id ]`, `[ interface, request_ip, request_method, success ]`, `[ interface, request_ip, request_method, user_id ]`, `[ interface, request_ip, success, user_id ]`, `[ interface, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success ]`, `[ request_id, request_ip, request_method, user_id ]`, `[ request_id, request_ip, success, user_id ]`, `[ request_id, request_method, success, user_id ]`, `[ request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_method ]`, `[ start_date, end_date, api_key_id, interface, success ]`, `[ start_date, end_date, api_key_id, interface, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_id, request_method ]`, `[ start_date, end_date, api_key_id, request_id, success ]`, `[ start_date, end_date, api_key_id, request_id, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip ]`, `[ start_date, end_date, interface, request_id, request_method ]`, `[ start_date, end_date, interface, request_id, success ]`, `[ start_date, end_date, interface, request_id, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method ]`, `[ start_date, end_date, interface, request_ip, success ]`, `[ start_date, end_date, interface, request_ip, user_id ]`, `[ start_date, end_date, interface, request_method, success ]`, `[ start_date, end_date, interface, request_method, user_id ]`, `[ start_date, end_date, interface, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method ]`, `[ start_date, end_date, request_id, request_ip, success ]`, `[ start_date, end_date, request_id, request_ip, user_id ]`, `[ start_date, end_date, request_id, request_method, success ]`, `[ start_date, end_date, request_id, request_method, user_id ]`, `[ start_date, end_date, request_id, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_ip, success, user_id ]`, `[ start_date, end_date, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, api_key_id, interface, request_id, success ]`, `[ start_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_ip, success ]`, `[ start_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_method, success ]`, `[ start_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, api_key_id, interface, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success ]`, `[ start_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, api_key_id, request_id, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method ]`, `[ start_date, interface, request_id, request_ip, success ]`, `[ start_date, interface, request_id, request_ip, user_id ]`, `[ start_date, interface, request_id, request_method, success ]`, `[ start_date, interface, request_id, request_method, user_id ]`, `[ start_date, interface, request_id, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success ]`, `[ start_date, interface, request_ip, request_method, user_id ]`, `[ start_date, interface, request_ip, success, user_id ]`, `[ start_date, interface, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success ]`, `[ start_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, request_id, request_ip, success, user_id ]`, `[ start_date, request_id, request_method, success, user_id ]`, `[ start_date, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip ]`, `[ end_date, api_key_id, interface, request_id, request_method ]`, `[ end_date, api_key_id, interface, request_id, success ]`, `[ end_date, api_key_id, interface, request_id, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_ip, success ]`, `[ end_date, api_key_id, interface, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_method, success ]`, `[ end_date, api_key_id, interface, request_method, user_id ]`, `[ end_date, api_key_id, interface, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_id, request_ip, success ]`, `[ end_date, api_key_id, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success ]`, `[ end_date, api_key_id, request_id, request_method, user_id ]`, `[ end_date, api_key_id, request_id, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method ]`, `[ end_date, interface, request_id, request_ip, success ]`, `[ end_date, interface, request_id, request_ip, user_id ]`, `[ end_date, interface, request_id, request_method, success ]`, `[ end_date, interface, request_id, request_method, user_id ]`, `[ end_date, interface, request_id, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success ]`, `[ end_date, interface, request_ip, request_method, user_id ]`, `[ end_date, interface, request_ip, success, user_id ]`, `[ end_date, interface, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success ]`, `[ end_date, request_id, request_ip, request_method, user_id ]`, `[ end_date, request_id, request_ip, success, user_id ]`, `[ end_date, request_id, request_method, success, user_id ]`, `[ end_date, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method ]`, `[ api_key_id, interface, request_id, request_ip, success ]`, `[ api_key_id, interface, request_id, request_ip, user_id ]`, `[ api_key_id, interface, request_id, request_method, success ]`, `[ api_key_id, interface, request_id, request_method, user_id ]`, `[ api_key_id, interface, request_id, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success ]`, `[ api_key_id, interface, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_ip, success, user_id ]`, `[ api_key_id, interface, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success ]`, `[ api_key_id, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_id, request_ip, success, user_id ]`, `[ api_key_id, request_id, request_method, success, user_id ]`, `[ api_key_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success ]`, `[ interface, request_id, request_ip, request_method, user_id ]`, `[ interface, request_id, request_ip, success, user_id ]`, `[ interface, request_id, request_method, success, user_id ]`, `[ interface, request_ip, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, interface, request_id, request_ip, success ]`, `[ start_date, end_date, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, request_id, request_method, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success ]`, `[ end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, interface, request_id, request_ip, success, user_id ]`, `[ end_date, interface, request_id, request_method, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ api_key_id, interface, request_id, request_method, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]` or `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `interface`, `request_id`, `request_ip` or `request_method`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ api_key_id ]`, `[ interface ]`, `[ request_id ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ user_id ]`, `[ start_date, end_date ]`, `[ start_date, api_key_id ]`, `[ start_date, interface ]`, `[ start_date, request_id ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ start_date, user_id ]`, `[ end_date, api_key_id ]`, `[ end_date, interface ]`, `[ end_date, request_id ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ end_date, user_id ]`, `[ api_key_id, interface ]`, `[ api_key_id, request_id ]`, `[ api_key_id, request_ip ]`, `[ api_key_id, request_method ]`, `[ api_key_id, success ]`, `[ api_key_id, user_id ]`, `[ interface, request_id ]`, `[ interface, request_ip ]`, `[ interface, request_method ]`, `[ interface, success ]`, `[ interface, user_id ]`, `[ request_id, request_ip ]`, `[ request_id, request_method ]`, `[ request_id, success ]`, `[ request_id, user_id ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_ip, user_id ]`, `[ request_method, success ]`, `[ request_method, user_id ]`, `[ success, user_id ]`, `[ start_date, end_date, api_key_id ]`, `[ start_date, end_date, interface ]`, `[ start_date, end_date, request_id ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, user_id ]`, `[ start_date, api_key_id, interface ]`, `[ start_date, api_key_id, request_id ]`, `[ start_date, api_key_id, request_ip ]`, `[ start_date, api_key_id, request_method ]`, `[ start_date, api_key_id, success ]`, `[ start_date, api_key_id, user_id ]`, `[ start_date, interface, request_id ]`, `[ start_date, interface, request_ip ]`, `[ start_date, interface, request_method ]`, `[ start_date, interface, success ]`, `[ start_date, interface, user_id ]`, `[ start_date, request_id, request_ip ]`, `[ start_date, request_id, request_method ]`, `[ start_date, request_id, success ]`, `[ start_date, request_id, user_id ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_ip, user_id ]`, `[ start_date, request_method, success ]`, `[ start_date, request_method, user_id ]`, `[ start_date, success, user_id ]`, `[ end_date, api_key_id, interface ]`, `[ end_date, api_key_id, request_id ]`, `[ end_date, api_key_id, request_ip ]`, `[ end_date, api_key_id, request_method ]`, `[ end_date, api_key_id, success ]`, `[ end_date, api_key_id, user_id ]`, `[ end_date, interface, request_id ]`, `[ end_date, interface, request_ip ]`, `[ end_date, interface, request_method ]`, `[ end_date, interface, success ]`, `[ end_date, interface, user_id ]`, `[ end_date, request_id, request_ip ]`, `[ end_date, request_id, request_method ]`, `[ end_date, request_id, success ]`, `[ end_date, request_id, user_id ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_ip, user_id ]`, `[ end_date, request_method, success ]`, `[ end_date, request_method, user_id ]`, `[ end_date, success, user_id ]`, `[ api_key_id, interface, request_id ]`, `[ api_key_id, interface, request_ip ]`, `[ api_key_id, interface, request_method ]`, `[ api_key_id, interface, success ]`, `[ api_key_id, interface, user_id ]`, `[ api_key_id, request_id, request_ip ]`, `[ api_key_id, request_id, request_method ]`, `[ api_key_id, request_id, success ]`, `[ api_key_id, request_id, user_id ]`, `[ api_key_id, request_ip, request_method ]`, `[ api_key_id, request_ip, success ]`, `[ api_key_id, request_ip, user_id ]`, `[ api_key_id, request_method, success ]`, `[ api_key_id, request_method, user_id ]`, `[ api_key_id, success, user_id ]`, `[ interface, request_id, request_ip ]`, `[ interface, request_id, request_method ]`, `[ interface, request_id, success ]`, `[ interface, request_id, user_id ]`, `[ interface, request_ip, request_method ]`, `[ interface, request_ip, success ]`, `[ interface, request_ip, user_id ]`, `[ interface, request_method, success ]`, `[ interface, request_method, user_id ]`, `[ interface, success, user_id ]`, `[ request_id, request_ip, request_method ]`, `[ request_id, request_ip, success ]`, `[ request_id, request_ip, user_id ]`, `[ request_id, request_method, success ]`, `[ request_id, request_method, user_id ]`, `[ request_id, success, user_id ]`, `[ request_ip, request_method, success ]`, `[ request_ip, request_method, user_id ]`, `[ request_ip, success, user_id ]`, `[ request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface ]`, `[ start_date, end_date, api_key_id, request_id ]`, `[ start_date, end_date, api_key_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_method ]`, `[ start_date, end_date, api_key_id, success ]`, `[ start_date, end_date, api_key_id, user_id ]`, `[ start_date, end_date, interface, request_id ]`, `[ start_date, end_date, interface, request_ip ]`, `[ start_date, end_date, interface, request_method ]`, `[ start_date, end_date, interface, success ]`, `[ start_date, end_date, interface, user_id ]`, `[ start_date, end_date, request_id, request_ip ]`, `[ start_date, end_date, request_id, request_method ]`, `[ start_date, end_date, request_id, success ]`, `[ start_date, end_date, request_id, user_id ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_ip, user_id ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, end_date, request_method, user_id ]`, `[ start_date, end_date, success, user_id ]`, `[ start_date, api_key_id, interface, request_id ]`, `[ start_date, api_key_id, interface, request_ip ]`, `[ start_date, api_key_id, interface, request_method ]`, `[ start_date, api_key_id, interface, success ]`, `[ start_date, api_key_id, interface, user_id ]`, `[ start_date, api_key_id, request_id, request_ip ]`, `[ start_date, api_key_id, request_id, request_method ]`, `[ start_date, api_key_id, request_id, success ]`, `[ start_date, api_key_id, request_id, user_id ]`, `[ start_date, api_key_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_ip, success ]`, `[ start_date, api_key_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_method, success ]`, `[ start_date, api_key_id, request_method, user_id ]`, `[ start_date, api_key_id, success, user_id ]`, `[ start_date, interface, request_id, request_ip ]`, `[ start_date, interface, request_id, request_method ]`, `[ start_date, interface, request_id, success ]`, `[ start_date, interface, request_id, user_id ]`, `[ start_date, interface, request_ip, request_method ]`, `[ start_date, interface, request_ip, success ]`, `[ start_date, interface, request_ip, user_id ]`, `[ start_date, interface, request_method, success ]`, `[ start_date, interface, request_method, user_id ]`, `[ start_date, interface, success, user_id ]`, `[ start_date, request_id, request_ip, request_method ]`, `[ start_date, request_id, request_ip, success ]`, `[ start_date, request_id, request_ip, user_id ]`, `[ start_date, request_id, request_method, success ]`, `[ start_date, request_id, request_method, user_id ]`, `[ start_date, request_id, success, user_id ]`, `[ start_date, request_ip, request_method, success ]`, `[ start_date, request_ip, request_method, user_id ]`, `[ start_date, request_ip, success, user_id ]`, `[ start_date, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id ]`, `[ end_date, api_key_id, interface, request_ip ]`, `[ end_date, api_key_id, interface, request_method ]`, `[ end_date, api_key_id, interface, success ]`, `[ end_date, api_key_id, interface, user_id ]`, `[ end_date, api_key_id, request_id, request_ip ]`, `[ end_date, api_key_id, request_id, request_method ]`, `[ end_date, api_key_id, request_id, success ]`, `[ end_date, api_key_id, request_id, user_id ]`, `[ end_date, api_key_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_ip, success ]`, `[ end_date, api_key_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_method, success ]`, `[ end_date, api_key_id, request_method, user_id ]`, `[ end_date, api_key_id, success, user_id ]`, `[ end_date, interface, request_id, request_ip ]`, `[ end_date, interface, request_id, request_method ]`, `[ end_date, interface, request_id, success ]`, `[ end_date, interface, request_id, user_id ]`, `[ end_date, interface, request_ip, request_method ]`, `[ end_date, interface, request_ip, success ]`, `[ end_date, interface, request_ip, user_id ]`, `[ end_date, interface, request_method, success ]`, `[ end_date, interface, request_method, user_id ]`, `[ end_date, interface, success, user_id ]`, `[ end_date, request_id, request_ip, request_method ]`, `[ end_date, request_id, request_ip, success ]`, `[ end_date, request_id, request_ip, user_id ]`, `[ end_date, request_id, request_method, success ]`, `[ end_date, request_id, request_method, user_id ]`, `[ end_date, request_id, success, user_id ]`, `[ end_date, request_ip, request_method, success ]`, `[ end_date, request_ip, request_method, user_id ]`, `[ end_date, request_ip, success, user_id ]`, `[ end_date, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip ]`, `[ api_key_id, interface, request_id, request_method ]`, `[ api_key_id, interface, request_id, success ]`, `[ api_key_id, interface, request_id, user_id ]`, `[ api_key_id, interface, request_ip, request_method ]`, `[ api_key_id, interface, request_ip, success ]`, `[ api_key_id, interface, request_ip, user_id ]`, `[ api_key_id, interface, request_method, success ]`, `[ api_key_id, interface, request_method, user_id ]`, `[ api_key_id, interface, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method ]`, `[ api_key_id, request_id, request_ip, success ]`, `[ api_key_id, request_id, request_ip, user_id ]`, `[ api_key_id, request_id, request_method, success ]`, `[ api_key_id, request_id, request_method, user_id ]`, `[ api_key_id, request_id, success, user_id ]`, `[ api_key_id, request_ip, request_method, success ]`, `[ api_key_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_ip, success, user_id ]`, `[ api_key_id, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method ]`, `[ interface, request_id, request_ip, success ]`, `[ interface, request_id, request_ip, user_id ]`, `[ interface, request_id, request_method, success ]`, `[ interface, request_id, request_method, user_id ]`, `[ interface, request_id, success, user_id ]`, `[ interface, request_ip, request_method, success ]`, `[ interface, request_ip, request_method, user_id ]`, `[ interface, request_ip, success, user_id ]`, `[ interface, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success ]`, `[ request_id, request_ip, request_method, user_id ]`, `[ request_id, request_ip, success, user_id ]`, `[ request_id, request_method, success, user_id ]`, `[ request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_method ]`, `[ start_date, end_date, api_key_id, interface, success ]`, `[ start_date, end_date, api_key_id, interface, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_id, request_method ]`, `[ start_date, end_date, api_key_id, request_id, success ]`, `[ start_date, end_date, api_key_id, request_id, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip ]`, `[ start_date, end_date, interface, request_id, request_method ]`, `[ start_date, end_date, interface, request_id, success ]`, `[ start_date, end_date, interface, request_id, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method ]`, `[ start_date, end_date, interface, request_ip, success ]`, `[ start_date, end_date, interface, request_ip, user_id ]`, `[ start_date, end_date, interface, request_method, success ]`, `[ start_date, end_date, interface, request_method, user_id ]`, `[ start_date, end_date, interface, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method ]`, `[ start_date, end_date, request_id, request_ip, success ]`, `[ start_date, end_date, request_id, request_ip, user_id ]`, `[ start_date, end_date, request_id, request_method, success ]`, `[ start_date, end_date, request_id, request_method, user_id ]`, `[ start_date, end_date, request_id, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_ip, success, user_id ]`, `[ start_date, end_date, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, api_key_id, interface, request_id, success ]`, `[ start_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_ip, success ]`, `[ start_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_method, success ]`, `[ start_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, api_key_id, interface, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success ]`, `[ start_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, api_key_id, request_id, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method ]`, `[ start_date, interface, request_id, request_ip, success ]`, `[ start_date, interface, request_id, request_ip, user_id ]`, `[ start_date, interface, request_id, request_method, success ]`, `[ start_date, interface, request_id, request_method, user_id ]`, `[ start_date, interface, request_id, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success ]`, `[ start_date, interface, request_ip, request_method, user_id ]`, `[ start_date, interface, request_ip, success, user_id ]`, `[ start_date, interface, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success ]`, `[ start_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, request_id, request_ip, success, user_id ]`, `[ start_date, request_id, request_method, success, user_id ]`, `[ start_date, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip ]`, `[ end_date, api_key_id, interface, request_id, request_method ]`, `[ end_date, api_key_id, interface, request_id, success ]`, `[ end_date, api_key_id, interface, request_id, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_ip, success ]`, `[ end_date, api_key_id, interface, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_method, success ]`, `[ end_date, api_key_id, interface, request_method, user_id ]`, `[ end_date, api_key_id, interface, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_id, request_ip, success ]`, `[ end_date, api_key_id, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success ]`, `[ end_date, api_key_id, request_id, request_method, user_id ]`, `[ end_date, api_key_id, request_id, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method ]`, `[ end_date, interface, request_id, request_ip, success ]`, `[ end_date, interface, request_id, request_ip, user_id ]`, `[ end_date, interface, request_id, request_method, success ]`, `[ end_date, interface, request_id, request_method, user_id ]`, `[ end_date, interface, request_id, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success ]`, `[ end_date, interface, request_ip, request_method, user_id ]`, `[ end_date, interface, request_ip, success, user_id ]`, `[ end_date, interface, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success ]`, `[ end_date, request_id, request_ip, request_method, user_id ]`, `[ end_date, request_id, request_ip, success, user_id ]`, `[ end_date, request_id, request_method, success, user_id ]`, `[ end_date, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method ]`, `[ api_key_id, interface, request_id, request_ip, success ]`, `[ api_key_id, interface, request_id, request_ip, user_id ]`, `[ api_key_id, interface, request_id, request_method, success ]`, `[ api_key_id, interface, request_id, request_method, user_id ]`, `[ api_key_id, interface, request_id, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success ]`, `[ api_key_id, interface, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_ip, success, user_id ]`, `[ api_key_id, interface, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success ]`, `[ api_key_id, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_id, request_ip, success, user_id ]`, `[ api_key_id, request_id, request_method, success, user_id ]`, `[ api_key_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success ]`, `[ interface, request_id, request_ip, request_method, user_id ]`, `[ interface, request_id, request_ip, success, user_id ]`, `[ interface, request_id, request_method, success, user_id ]`, `[ interface, request_ip, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, interface, request_id, request_ip, success ]`, `[ start_date, end_date, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, request_id, request_method, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success ]`, `[ end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, interface, request_id, request_ip, success, user_id ]`, `[ end_date, interface, request_id, request_method, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ api_key_id, interface, request_id, request_method, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]` or `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`.",
            "example": {
              "interface": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `interface`, `request_id`, `request_ip` or `request_method`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ api_key_id ]`, `[ interface ]`, `[ request_id ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ user_id ]`, `[ start_date, end_date ]`, `[ start_date, api_key_id ]`, `[ start_date, interface ]`, `[ start_date, request_id ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ start_date, user_id ]`, `[ end_date, api_key_id ]`, `[ end_date, interface ]`, `[ end_date, request_id ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ end_date, user_id ]`, `[ api_key_id, interface ]`, `[ api_key_id, request_id ]`, `[ api_key_id, request_ip ]`, `[ api_key_id, request_method ]`, `[ api_key_id, success ]`, `[ api_key_id, user_id ]`, `[ interface, request_id ]`, `[ interface, request_ip ]`, `[ interface, request_method ]`, `[ interface, success ]`, `[ interface, user_id ]`, `[ request_id, request_ip ]`, `[ request_id, request_method ]`, `[ request_id, success ]`, `[ request_id, user_id ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_ip, user_id ]`, `[ request_method, success ]`, `[ request_method, user_id ]`, `[ success, user_id ]`, `[ start_date, end_date, api_key_id ]`, `[ start_date, end_date, interface ]`, `[ start_date, end_date, request_id ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, user_id ]`, `[ start_date, api_key_id, interface ]`, `[ start_date, api_key_id, request_id ]`, `[ start_date, api_key_id, request_ip ]`, `[ start_date, api_key_id, request_method ]`, `[ start_date, api_key_id, success ]`, `[ start_date, api_key_id, user_id ]`, `[ start_date, interface, request_id ]`, `[ start_date, interface, request_ip ]`, `[ start_date, interface, request_method ]`, `[ start_date, interface, success ]`, `[ start_date, interface, user_id ]`, `[ start_date, request_id, request_ip ]`, `[ start_date, request_id, request_method ]`, `[ start_date, request_id, success ]`, `[ start_date, request_id, user_id ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_ip, user_id ]`, `[ start_date, request_method, success ]`, `[ start_date, request_method, user_id ]`, `[ start_date, success, user_id ]`, `[ end_date, api_key_id, interface ]`, `[ end_date, api_key_id, request_id ]`, `[ end_date, api_key_id, request_ip ]`, `[ end_date, api_key_id, request_method ]`, `[ end_date, api_key_id, success ]`, `[ end_date, api_key_id, user_id ]`, `[ end_date, interface, request_id ]`, `[ end_date, interface, request_ip ]`, `[ end_date, interface, request_method ]`, `[ end_date, interface, success ]`, `[ end_date, interface, user_id ]`, `[ end_date, request_id, request_ip ]`, `[ end_date, request_id, request_method ]`, `[ end_date, request_id, success ]`, `[ end_date, request_id, user_id ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_ip, user_id ]`, `[ end_date, request_method, success ]`, `[ end_date, request_method, user_id ]`, `[ end_date, success, user_id ]`, `[ api_key_id, interface, request_id ]`, `[ api_key_id, interface, request_ip ]`, `[ api_key_id, interface, request_method ]`, `[ api_key_id, interface, success ]`, `[ api_key_id, interface, user_id ]`, `[ api_key_id, request_id, request_ip ]`, `[ api_key_id, request_id, request_method ]`, `[ api_key_id, request_id, success ]`, `[ api_key_id, request_id, user_id ]`, `[ api_key_id, request_ip, request_method ]`, `[ api_key_id, request_ip, success ]`, `[ api_key_id, request_ip, user_id ]`, `[ api_key_id, request_method, success ]`, `[ api_key_id, request_method, user_id ]`, `[ api_key_id, success, user_id ]`, `[ interface, request_id, request_ip ]`, `[ interface, request_id, request_method ]`, `[ interface, request_id, success ]`, `[ interface, request_id, user_id ]`, `[ interface, request_ip, request_method ]`, `[ interface, request_ip, success ]`, `[ interface, request_ip, user_id ]`, `[ interface, request_method, success ]`, `[ interface, request_method, user_id ]`, `[ interface, success, user_id ]`, `[ request_id, request_ip, request_method ]`, `[ request_id, request_ip, success ]`, `[ request_id, request_ip, user_id ]`, `[ request_id, request_method, success ]`, `[ request_id, request_method, user_id ]`, `[ request_id, success, user_id ]`, `[ request_ip, request_method, success ]`, `[ request_ip, request_method, user_id ]`, `[ request_ip, success, user_id ]`, `[ request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface ]`, `[ start_date, end_date, api_key_id, request_id ]`, `[ start_date, end_date, api_key_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_method ]`, `[ start_date, end_date, api_key_id, success ]`, `[ start_date, end_date, api_key_id, user_id ]`, `[ start_date, end_date, interface, request_id ]`, `[ start_date, end_date, interface, request_ip ]`, `[ start_date, end_date, interface, request_method ]`, `[ start_date, end_date, interface, success ]`, `[ start_date, end_date, interface, user_id ]`, `[ start_date, end_date, request_id, request_ip ]`, `[ start_date, end_date, request_id, request_method ]`, `[ start_date, end_date, request_id, success ]`, `[ start_date, end_date, request_id, user_id ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_ip, user_id ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, end_date, request_method, user_id ]`, `[ start_date, end_date, success, user_id ]`, `[ start_date, api_key_id, interface, request_id ]`, `[ start_date, api_key_id, interface, request_ip ]`, `[ start_date, api_key_id, interface, request_method ]`, `[ start_date, api_key_id, interface, success ]`, `[ start_date, api_key_id, interface, user_id ]`, `[ start_date, api_key_id, request_id, request_ip ]`, `[ start_date, api_key_id, request_id, request_method ]`, `[ start_date, api_key_id, request_id, success ]`, `[ start_date, api_key_id, request_id, user_id ]`, `[ start_date, api_key_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_ip, success ]`, `[ start_date, api_key_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_method, success ]`, `[ start_date, api_key_id, request_method, user_id ]`, `[ start_date, api_key_id, success, user_id ]`, `[ start_date, interface, request_id, request_ip ]`, `[ start_date, interface, request_id, request_method ]`, `[ start_date, interface, request_id, success ]`, `[ start_date, interface, request_id, user_id ]`, `[ start_date, interface, request_ip, request_method ]`, `[ start_date, interface, request_ip, success ]`, `[ start_date, interface, request_ip, user_id ]`, `[ start_date, interface, request_method, success ]`, `[ start_date, interface, request_method, user_id ]`, `[ start_date, interface, success, user_id ]`, `[ start_date, request_id, request_ip, request_method ]`, `[ start_date, request_id, request_ip, success ]`, `[ start_date, request_id, request_ip, user_id ]`, `[ start_date, request_id, request_method, success ]`, `[ start_date, request_id, request_method, user_id ]`, `[ start_date, request_id, success, user_id ]`, `[ start_date, request_ip, request_method, success ]`, `[ start_date, request_ip, request_method, user_id ]`, `[ start_date, request_ip, success, user_id ]`, `[ start_date, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id ]`, `[ end_date, api_key_id, interface, request_ip ]`, `[ end_date, api_key_id, interface, request_method ]`, `[ end_date, api_key_id, interface, success ]`, `[ end_date, api_key_id, interface, user_id ]`, `[ end_date, api_key_id, request_id, request_ip ]`, `[ end_date, api_key_id, request_id, request_method ]`, `[ end_date, api_key_id, request_id, success ]`, `[ end_date, api_key_id, request_id, user_id ]`, `[ end_date, api_key_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_ip, success ]`, `[ end_date, api_key_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_method, success ]`, `[ end_date, api_key_id, request_method, user_id ]`, `[ end_date, api_key_id, success, user_id ]`, `[ end_date, interface, request_id, request_ip ]`, `[ end_date, interface, request_id, request_method ]`, `[ end_date, interface, request_id, success ]`, `[ end_date, interface, request_id, user_id ]`, `[ end_date, interface, request_ip, request_method ]`, `[ end_date, interface, request_ip, success ]`, `[ end_date, interface, request_ip, user_id ]`, `[ end_date, interface, request_method, success ]`, `[ end_date, interface, request_method, user_id ]`, `[ end_date, interface, success, user_id ]`, `[ end_date, request_id, request_ip, request_method ]`, `[ end_date, request_id, request_ip, success ]`, `[ end_date, request_id, request_ip, user_id ]`, `[ end_date, request_id, request_method, success ]`, `[ end_date, request_id, request_method, user_id ]`, `[ end_date, request_id, success, user_id ]`, `[ end_date, request_ip, request_method, success ]`, `[ end_date, request_ip, request_method, user_id ]`, `[ end_date, request_ip, success, user_id ]`, `[ end_date, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip ]`, `[ api_key_id, interface, request_id, request_method ]`, `[ api_key_id, interface, request_id, success ]`, `[ api_key_id, interface, request_id, user_id ]`, `[ api_key_id, interface, request_ip, request_method ]`, `[ api_key_id, interface, request_ip, success ]`, `[ api_key_id, interface, request_ip, user_id ]`, `[ api_key_id, interface, request_method, success ]`, `[ api_key_id, interface, request_method, user_id ]`, `[ api_key_id, interface, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method ]`, `[ api_key_id, request_id, request_ip, success ]`, `[ api_key_id, request_id, request_ip, user_id ]`, `[ api_key_id, request_id, request_method, success ]`, `[ api_key_id, request_id, request_method, user_id ]`, `[ api_key_id, request_id, success, user_id ]`, `[ api_key_id, request_ip, request_method, success ]`, `[ api_key_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_ip, success, user_id ]`, `[ api_key_id, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method ]`, `[ interface, request_id, request_ip, success ]`, `[ interface, request_id, request_ip, user_id ]`, `[ interface, request_id, request_method, success ]`, `[ interface, request_id, request_method, user_id ]`, `[ interface, request_id, success, user_id ]`, `[ interface, request_ip, request_method, success ]`, `[ interface, request_ip, request_method, user_id ]`, `[ interface, request_ip, success, user_id ]`, `[ interface, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success ]`, `[ request_id, request_ip, request_method, user_id ]`, `[ request_id, request_ip, success, user_id ]`, `[ request_id, request_method, success, user_id ]`, `[ request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_method ]`, `[ start_date, end_date, api_key_id, interface, success ]`, `[ start_date, end_date, api_key_id, interface, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, request_id, request_method ]`, `[ start_date, end_date, api_key_id, request_id, success ]`, `[ start_date, end_date, api_key_id, request_id, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip ]`, `[ start_date, end_date, interface, request_id, request_method ]`, `[ start_date, end_date, interface, request_id, success ]`, `[ start_date, end_date, interface, request_id, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method ]`, `[ start_date, end_date, interface, request_ip, success ]`, `[ start_date, end_date, interface, request_ip, user_id ]`, `[ start_date, end_date, interface, request_method, success ]`, `[ start_date, end_date, interface, request_method, user_id ]`, `[ start_date, end_date, interface, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method ]`, `[ start_date, end_date, request_id, request_ip, success ]`, `[ start_date, end_date, request_id, request_ip, user_id ]`, `[ start_date, end_date, request_id, request_method, success ]`, `[ start_date, end_date, request_id, request_method, user_id ]`, `[ start_date, end_date, request_id, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_ip, success, user_id ]`, `[ start_date, end_date, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, api_key_id, interface, request_id, success ]`, `[ start_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_ip, success ]`, `[ start_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_method, success ]`, `[ start_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, api_key_id, interface, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success ]`, `[ start_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, api_key_id, request_id, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method ]`, `[ start_date, interface, request_id, request_ip, success ]`, `[ start_date, interface, request_id, request_ip, user_id ]`, `[ start_date, interface, request_id, request_method, success ]`, `[ start_date, interface, request_id, request_method, user_id ]`, `[ start_date, interface, request_id, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success ]`, `[ start_date, interface, request_ip, request_method, user_id ]`, `[ start_date, interface, request_ip, success, user_id ]`, `[ start_date, interface, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success ]`, `[ start_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, request_id, request_ip, success, user_id ]`, `[ start_date, request_id, request_method, success, user_id ]`, `[ start_date, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip ]`, `[ end_date, api_key_id, interface, request_id, request_method ]`, `[ end_date, api_key_id, interface, request_id, success ]`, `[ end_date, api_key_id, interface, request_id, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_ip, success ]`, `[ end_date, api_key_id, interface, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_method, success ]`, `[ end_date, api_key_id, interface, request_method, user_id ]`, `[ end_date, api_key_id, interface, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, request_id, request_ip, success ]`, `[ end_date, api_key_id, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success ]`, `[ end_date, api_key_id, request_id, request_method, user_id ]`, `[ end_date, api_key_id, request_id, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method ]`, `[ end_date, interface, request_id, request_ip, success ]`, `[ end_date, interface, request_id, request_ip, user_id ]`, `[ end_date, interface, request_id, request_method, success ]`, `[ end_date, interface, request_id, request_method, user_id ]`, `[ end_date, interface, request_id, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success ]`, `[ end_date, interface, request_ip, request_method, user_id ]`, `[ end_date, interface, request_ip, success, user_id ]`, `[ end_date, interface, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success ]`, `[ end_date, request_id, request_ip, request_method, user_id ]`, `[ end_date, request_id, request_ip, success, user_id ]`, `[ end_date, request_id, request_method, success, user_id ]`, `[ end_date, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method ]`, `[ api_key_id, interface, request_id, request_ip, success ]`, `[ api_key_id, interface, request_id, request_ip, user_id ]`, `[ api_key_id, interface, request_id, request_method, success ]`, `[ api_key_id, interface, request_id, request_method, user_id ]`, `[ api_key_id, interface, request_id, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success ]`, `[ api_key_id, interface, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_ip, success, user_id ]`, `[ api_key_id, interface, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success ]`, `[ api_key_id, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, request_id, request_ip, success, user_id ]`, `[ api_key_id, request_id, request_method, success, user_id ]`, `[ api_key_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success ]`, `[ interface, request_id, request_ip, request_method, user_id ]`, `[ interface, request_id, request_ip, success, user_id ]`, `[ interface, request_id, request_method, success, user_id ]`, `[ interface, request_ip, request_method, success, user_id ]`, `[ request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, interface, request_id, request_ip, success ]`, `[ start_date, end_date, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, request_id, request_method, success, user_id ]`, `[ start_date, end_date, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success ]`, `[ end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, interface, request_id, request_ip, success, user_id ]`, `[ end_date, interface, request_id, request_method, success, user_id ]`, `[ end_date, interface, request_ip, request_method, success, user_id ]`, `[ end_date, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ api_key_id, interface, request_id, request_method, success, user_id ]`, `[ api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, success ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, request_method, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_ip, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_id, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, interface, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, api_key_id, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, end_date, interface, request_id, request_ip, request_method, success, user_id ]`, `[ start_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]` or `[ end_date, api_key_id, interface, request_id, request_ip, request_method, success, user_id ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiRequestLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiRequestLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiRequestLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ApiRequestLogs objects.",
            "x-ms-summary": "A list of ApiRequestLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "api_request_logs",
          "API Request Logs"
        ],
        "description": "List API Request Logs",
        "operationId": "GetApiRequestLogs",
        "summary": "List API Request Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "api_key_id": {
              "sort": [],
              "type": "exact"
            },
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "interface": {
              "sort": [],
              "type": "pattern"
            },
            "request_id": {
              "sort": [],
              "type": "pattern"
            },
            "request_ip": {
              "sort": [],
              "type": "pattern"
            },
            "request_method": {
              "sort": [],
              "type": "pattern"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "success": {
              "sort": [],
              "type": "exact"
            },
            "user_id": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/apps": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name` and `app_type`.",
            "example": {
              "name": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name` and `app_type`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name` and `app_type`. Valid field combinations are `[ name, app_type ]`.",
            "example": {
              "name": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name` and `app_type`. Valid field combinations are `[ name, app_type ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`.",
            "example": {
              "name": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AppEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AppEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AppEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Apps objects.",
            "x-ms-summary": "A list of Apps objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "apps",
          "Apps"
        ],
        "description": "List Apps",
        "operationId": "GetApps",
        "summary": "List Apps",
        "x-authentication": [
          "none"
        ],
        "x-category": [
          "developers"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "app_type": {
              "sort": [
                "name",
                "app_type"
              ],
              "type": "exact"
            },
            "name": {
              "sort": [
                "name",
                "app_type"
              ],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "name",
                "app_type"
              ],
              "sort": [
                "name",
                "app_type"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "name",
          "app_type"
        ]
      }
    },
    "/as2_incoming_messages": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at` and `as2_partner_id`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at` and `as2_partner_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "As2 Partner ID.  If provided, will return message specific to that partner.",
            "in": "query",
            "name": "as2_partner_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Partner ID.  If provided, will return message specific to that partner."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2IncomingMessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2IncomingMessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2IncomingMessageEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of As2IncomingMessages objects.",
            "x-ms-summary": "A list of As2IncomingMessages objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_incoming_messages",
          "AS2 Incoming Messages"
        ],
        "description": "List AS2 Incoming Messages",
        "operationId": "GetAs2IncomingMessages",
        "summary": "List AS2 Incoming Messages",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "created_at",
          "as2_partner_id"
        ]
      }
    },
    "/as2_outgoing_messages": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at` and `as2_partner_id`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at` and `as2_partner_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "As2 Partner ID.  If provided, will return message specific to that partner.",
            "in": "query",
            "name": "as2_partner_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Partner ID.  If provided, will return message specific to that partner."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2OutgoingMessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2OutgoingMessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2OutgoingMessageEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of As2OutgoingMessages objects.",
            "x-ms-summary": "A list of As2OutgoingMessages objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_outgoing_messages",
          "AS2 Outgoing Messages"
        ],
        "description": "List AS2 Outgoing Messages",
        "operationId": "GetAs2OutgoingMessages",
        "summary": "List AS2 Outgoing Messages",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "created_at",
          "as2_partner_id"
        ]
      }
    },
    "/as2_partners": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2PartnerEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2PartnerEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2PartnerEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of As2Partners objects.",
            "x-ms-summary": "A list of As2Partners objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_partners",
          "AS2 Partners"
        ],
        "description": "List AS2 Partners",
        "operationId": "GetAs2Partners",
        "summary": "List AS2 Partners",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              }
            },
            "description": "The As2Partners object.",
            "x-ms-summary": "The As2Partners object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_partners",
          "AS2 Partners"
        ],
        "description": "Create AS2 Partner",
        "operationId": "PostAs2Partners",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additional_http_headers": {
                    "description": "Additional HTTP Headers for outgoing message sent to this partner.",
                    "type": "object"
                  },
                  "as2_station_id": {
                    "description": "ID of the AS2 Station associated with this partner.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "default_mime_type": {
                    "description": "Default mime type of the file attached to the encrypted message",
                    "type": "string"
                  },
                  "enable_dedicated_ips": {
                    "description": "If `true`, we will use your site's dedicated IPs for all outbound connections to this AS2 Partner.",
                    "type": "boolean"
                  },
                  "http_auth_password": {
                    "description": "Password to send to server for HTTP Authentication.",
                    "type": "string"
                  },
                  "http_auth_username": {
                    "description": "Username to send to server for HTTP Authentication.",
                    "type": "string"
                  },
                  "mdn_validation_level": {
                    "description": "How should Files.com evaluate message transfer success based on a partner's MDN response?  This setting does not affect MDN storage; all MDNs received from a partner are always stored. `none`: MDN is stored for informational purposes only, a successful HTTPS transfer is a successful AS2 transfer. `weak`: Inspect the MDN for MIC and Disposition only. `normal`: `weak` plus validate MDN signature matches body, `strict`: `normal` but do not allow signatures from self-signed or incorrectly purposed certificates.",
                    "enum": [
                      "none",
                      "weak",
                      "normal",
                      "strict"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "The partner's formal AS2 name.",
                    "type": "string"
                  },
                  "public_certificate": {
                    "description": "Public certificate for AS2 Partner.  Note: This is the certificate for AS2 message security, not a certificate used for HTTPS authentication.",
                    "type": "string"
                  },
                  "server_certificate": {
                    "description": "Should we require that the remote HTTP server have a valid SSL Certificate for HTTPS?",
                    "enum": [
                      "require_match",
                      "allow_any"
                    ],
                    "type": "string"
                  },
                  "uri": {
                    "description": "Public URI where we will send the AS2 messages (via HTTP/HTTPS).",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create AS2 Partner",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      }
    },
    "/as2_partners/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "As2 Partner ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Partner ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_partners",
          "AS2 Partners"
        ],
        "description": "Delete AS2 Partner",
        "operationId": "DeleteAs2PartnersId",
        "summary": "Delete AS2 Partner",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "As2 Partner ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Partner ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              }
            },
            "description": "The As2Partners object.",
            "x-ms-summary": "The As2Partners object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_partners",
          "AS2 Partners"
        ],
        "description": "Show AS2 Partner",
        "operationId": "GetAs2PartnersId",
        "summary": "Show AS2 Partner",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "As2 Partner ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Partner ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/As2PartnerEntity"
                }
              }
            },
            "description": "The As2Partners object.",
            "x-ms-summary": "The As2Partners object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_partners",
          "AS2 Partners"
        ],
        "description": "Update AS2 Partner",
        "operationId": "PatchAs2PartnersId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additional_http_headers": {
                    "description": "Additional HTTP Headers for outgoing message sent to this partner.",
                    "type": "object"
                  },
                  "default_mime_type": {
                    "description": "Default mime type of the file attached to the encrypted message",
                    "type": "string"
                  },
                  "enable_dedicated_ips": {
                    "description": "If `true`, we will use your site's dedicated IPs for all outbound connections to this AS2 Partner.",
                    "type": "boolean"
                  },
                  "http_auth_password": {
                    "description": "Password to send to server for HTTP Authentication.",
                    "type": "string"
                  },
                  "http_auth_username": {
                    "description": "Username to send to server for HTTP Authentication.",
                    "type": "string"
                  },
                  "mdn_validation_level": {
                    "description": "How should Files.com evaluate message transfer success based on a partner's MDN response?  This setting does not affect MDN storage; all MDNs received from a partner are always stored. `none`: MDN is stored for informational purposes only, a successful HTTPS transfer is a successful AS2 transfer. `weak`: Inspect the MDN for MIC and Disposition only. `normal`: `weak` plus validate MDN signature matches body, `strict`: `normal` but do not allow signatures from self-signed or incorrectly purposed certificates.",
                    "enum": [
                      "none",
                      "weak",
                      "normal",
                      "strict"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "The partner's formal AS2 name.",
                    "type": "string"
                  },
                  "public_certificate": {
                    "description": "Public certificate for AS2 Partner.  Note: This is the certificate for AS2 message security, not a certificate used for HTTPS authentication.",
                    "type": "string"
                  },
                  "server_certificate": {
                    "description": "Should we require that the remote HTTP server have a valid SSL Certificate for HTTPS?",
                    "enum": [
                      "require_match",
                      "allow_any"
                    ],
                    "type": "string"
                  },
                  "uri": {
                    "description": "Public URI where we will send the AS2 messages (via HTTP/HTTPS).",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update AS2 Partner",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      }
    },
    "/as2_stations": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name`.",
            "example": {
              "name": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2StationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2StationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/As2StationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of As2Stations objects.",
            "x-ms-summary": "A list of As2Stations objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_stations",
          "AS2 Stations"
        ],
        "description": "List AS2 Stations",
        "operationId": "GetAs2Stations",
        "summary": "List AS2 Stations",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ],
        "x-sortable_columns": [
          "name"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              }
            },
            "description": "The As2Stations object.",
            "x-ms-summary": "The As2Stations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_stations",
          "AS2 Stations"
        ],
        "description": "Create AS2 Station",
        "operationId": "PostAs2Stations",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "AS2 Name",
                    "type": "string"
                  },
                  "private_key": {
                    "type": "string"
                  },
                  "private_key_password": {
                    "type": "string"
                  },
                  "public_certificate": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create AS2 Station",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      }
    },
    "/as2_stations/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "As2 Station ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Station ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_stations",
          "AS2 Stations"
        ],
        "description": "Delete AS2 Station",
        "operationId": "DeleteAs2StationsId",
        "summary": "Delete AS2 Station",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "As2 Station ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Station ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              }
            },
            "description": "The As2Stations object.",
            "x-ms-summary": "The As2Stations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_stations",
          "AS2 Stations"
        ],
        "description": "Show AS2 Station",
        "operationId": "GetAs2StationsId",
        "summary": "Show AS2 Station",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "As2 Station ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "As2 Station ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/As2StationEntity"
                }
              }
            },
            "description": "The As2Stations object.",
            "x-ms-summary": "The As2Stations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "as2_stations",
          "AS2 Stations"
        ],
        "description": "Update AS2 Station",
        "operationId": "PatchAs2StationsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "AS2 Name",
                    "type": "string"
                  },
                  "private_key": {
                    "type": "string"
                  },
                  "private_key_password": {
                    "type": "string"
                  },
                  "public_certificate": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update AS2 Station",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "services",
          "as2"
        ]
      }
    },
    "/automation_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `automation_id`, `automation_run_id`, `operation`, `path` or `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ automation_id ]`, `[ automation_run_id ]`, `[ operation ]`, `[ path ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, automation_id ]`, `[ start_date, automation_run_id ]`, `[ start_date, operation ]`, `[ start_date, path ]`, `[ start_date, status ]`, `[ end_date, automation_id ]`, `[ end_date, automation_run_id ]`, `[ end_date, operation ]`, `[ end_date, path ]`, `[ end_date, status ]`, `[ automation_id, automation_run_id ]`, `[ automation_id, operation ]`, `[ automation_id, path ]`, `[ automation_id, status ]`, `[ automation_run_id, operation ]`, `[ automation_run_id, path ]`, `[ automation_run_id, status ]`, `[ operation, path ]`, `[ operation, status ]`, `[ path, status ]`, `[ start_date, end_date, automation_id ]`, `[ start_date, end_date, automation_run_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, status ]`, `[ start_date, automation_id, automation_run_id ]`, `[ start_date, automation_id, operation ]`, `[ start_date, automation_id, path ]`, `[ start_date, automation_id, status ]`, `[ start_date, automation_run_id, operation ]`, `[ start_date, automation_run_id, path ]`, `[ start_date, automation_run_id, status ]`, `[ start_date, operation, path ]`, `[ start_date, operation, status ]`, `[ start_date, path, status ]`, `[ end_date, automation_id, automation_run_id ]`, `[ end_date, automation_id, operation ]`, `[ end_date, automation_id, path ]`, `[ end_date, automation_id, status ]`, `[ end_date, automation_run_id, operation ]`, `[ end_date, automation_run_id, path ]`, `[ end_date, automation_run_id, status ]`, `[ end_date, operation, path ]`, `[ end_date, operation, status ]`, `[ end_date, path, status ]`, `[ automation_id, automation_run_id, operation ]`, `[ automation_id, automation_run_id, path ]`, `[ automation_id, automation_run_id, status ]`, `[ automation_id, operation, path ]`, `[ automation_id, operation, status ]`, `[ automation_id, path, status ]`, `[ automation_run_id, operation, path ]`, `[ automation_run_id, operation, status ]`, `[ automation_run_id, path, status ]`, `[ operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id ]`, `[ start_date, end_date, automation_id, operation ]`, `[ start_date, end_date, automation_id, path ]`, `[ start_date, end_date, automation_id, status ]`, `[ start_date, end_date, automation_run_id, operation ]`, `[ start_date, end_date, automation_run_id, path ]`, `[ start_date, end_date, automation_run_id, status ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, path, status ]`, `[ start_date, automation_id, automation_run_id, operation ]`, `[ start_date, automation_id, automation_run_id, path ]`, `[ start_date, automation_id, automation_run_id, status ]`, `[ start_date, automation_id, operation, path ]`, `[ start_date, automation_id, operation, status ]`, `[ start_date, automation_id, path, status ]`, `[ start_date, automation_run_id, operation, path ]`, `[ start_date, automation_run_id, operation, status ]`, `[ start_date, automation_run_id, path, status ]`, `[ start_date, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation ]`, `[ end_date, automation_id, automation_run_id, path ]`, `[ end_date, automation_id, automation_run_id, status ]`, `[ end_date, automation_id, operation, path ]`, `[ end_date, automation_id, operation, status ]`, `[ end_date, automation_id, path, status ]`, `[ end_date, automation_run_id, operation, path ]`, `[ end_date, automation_run_id, operation, status ]`, `[ end_date, automation_run_id, path, status ]`, `[ end_date, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path ]`, `[ automation_id, automation_run_id, operation, status ]`, `[ automation_id, automation_run_id, path, status ]`, `[ automation_id, operation, path, status ]`, `[ automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation ]`, `[ start_date, end_date, automation_id, automation_run_id, path ]`, `[ start_date, end_date, automation_id, automation_run_id, status ]`, `[ start_date, end_date, automation_id, operation, path ]`, `[ start_date, end_date, automation_id, operation, status ]`, `[ start_date, end_date, automation_id, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_run_id, path, status ]`, `[ start_date, end_date, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, automation_id, automation_run_id, path, status ]`, `[ start_date, automation_id, operation, path, status ]`, `[ start_date, automation_run_id, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation, path ]`, `[ end_date, automation_id, automation_run_id, operation, status ]`, `[ end_date, automation_id, automation_run_id, path, status ]`, `[ end_date, automation_id, operation, path, status ]`, `[ end_date, automation_run_id, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_id, automation_run_id, path, status ]`, `[ start_date, end_date, automation_id, operation, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path, status ]` or `[ end_date, automation_id, automation_run_id, operation, path, status ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `automation_id`, `automation_run_id`, `operation`, `path` or `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ automation_id ]`, `[ automation_run_id ]`, `[ operation ]`, `[ path ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, automation_id ]`, `[ start_date, automation_run_id ]`, `[ start_date, operation ]`, `[ start_date, path ]`, `[ start_date, status ]`, `[ end_date, automation_id ]`, `[ end_date, automation_run_id ]`, `[ end_date, operation ]`, `[ end_date, path ]`, `[ end_date, status ]`, `[ automation_id, automation_run_id ]`, `[ automation_id, operation ]`, `[ automation_id, path ]`, `[ automation_id, status ]`, `[ automation_run_id, operation ]`, `[ automation_run_id, path ]`, `[ automation_run_id, status ]`, `[ operation, path ]`, `[ operation, status ]`, `[ path, status ]`, `[ start_date, end_date, automation_id ]`, `[ start_date, end_date, automation_run_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, status ]`, `[ start_date, automation_id, automation_run_id ]`, `[ start_date, automation_id, operation ]`, `[ start_date, automation_id, path ]`, `[ start_date, automation_id, status ]`, `[ start_date, automation_run_id, operation ]`, `[ start_date, automation_run_id, path ]`, `[ start_date, automation_run_id, status ]`, `[ start_date, operation, path ]`, `[ start_date, operation, status ]`, `[ start_date, path, status ]`, `[ end_date, automation_id, automation_run_id ]`, `[ end_date, automation_id, operation ]`, `[ end_date, automation_id, path ]`, `[ end_date, automation_id, status ]`, `[ end_date, automation_run_id, operation ]`, `[ end_date, automation_run_id, path ]`, `[ end_date, automation_run_id, status ]`, `[ end_date, operation, path ]`, `[ end_date, operation, status ]`, `[ end_date, path, status ]`, `[ automation_id, automation_run_id, operation ]`, `[ automation_id, automation_run_id, path ]`, `[ automation_id, automation_run_id, status ]`, `[ automation_id, operation, path ]`, `[ automation_id, operation, status ]`, `[ automation_id, path, status ]`, `[ automation_run_id, operation, path ]`, `[ automation_run_id, operation, status ]`, `[ automation_run_id, path, status ]`, `[ operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id ]`, `[ start_date, end_date, automation_id, operation ]`, `[ start_date, end_date, automation_id, path ]`, `[ start_date, end_date, automation_id, status ]`, `[ start_date, end_date, automation_run_id, operation ]`, `[ start_date, end_date, automation_run_id, path ]`, `[ start_date, end_date, automation_run_id, status ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, path, status ]`, `[ start_date, automation_id, automation_run_id, operation ]`, `[ start_date, automation_id, automation_run_id, path ]`, `[ start_date, automation_id, automation_run_id, status ]`, `[ start_date, automation_id, operation, path ]`, `[ start_date, automation_id, operation, status ]`, `[ start_date, automation_id, path, status ]`, `[ start_date, automation_run_id, operation, path ]`, `[ start_date, automation_run_id, operation, status ]`, `[ start_date, automation_run_id, path, status ]`, `[ start_date, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation ]`, `[ end_date, automation_id, automation_run_id, path ]`, `[ end_date, automation_id, automation_run_id, status ]`, `[ end_date, automation_id, operation, path ]`, `[ end_date, automation_id, operation, status ]`, `[ end_date, automation_id, path, status ]`, `[ end_date, automation_run_id, operation, path ]`, `[ end_date, automation_run_id, operation, status ]`, `[ end_date, automation_run_id, path, status ]`, `[ end_date, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path ]`, `[ automation_id, automation_run_id, operation, status ]`, `[ automation_id, automation_run_id, path, status ]`, `[ automation_id, operation, path, status ]`, `[ automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation ]`, `[ start_date, end_date, automation_id, automation_run_id, path ]`, `[ start_date, end_date, automation_id, automation_run_id, status ]`, `[ start_date, end_date, automation_id, operation, path ]`, `[ start_date, end_date, automation_id, operation, status ]`, `[ start_date, end_date, automation_id, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_run_id, path, status ]`, `[ start_date, end_date, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, automation_id, automation_run_id, path, status ]`, `[ start_date, automation_id, operation, path, status ]`, `[ start_date, automation_run_id, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation, path ]`, `[ end_date, automation_id, automation_run_id, operation, status ]`, `[ end_date, automation_id, automation_run_id, path, status ]`, `[ end_date, automation_id, operation, path, status ]`, `[ end_date, automation_run_id, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_id, automation_run_id, path, status ]`, `[ start_date, end_date, automation_id, operation, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path, status ]` or `[ end_date, automation_id, automation_run_id, operation, path, status ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation`, `path` or `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ automation_id ]`, `[ automation_run_id ]`, `[ operation ]`, `[ path ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, automation_id ]`, `[ start_date, automation_run_id ]`, `[ start_date, operation ]`, `[ start_date, path ]`, `[ start_date, status ]`, `[ end_date, automation_id ]`, `[ end_date, automation_run_id ]`, `[ end_date, operation ]`, `[ end_date, path ]`, `[ end_date, status ]`, `[ automation_id, automation_run_id ]`, `[ automation_id, operation ]`, `[ automation_id, path ]`, `[ automation_id, status ]`, `[ automation_run_id, operation ]`, `[ automation_run_id, path ]`, `[ automation_run_id, status ]`, `[ operation, path ]`, `[ operation, status ]`, `[ path, status ]`, `[ start_date, end_date, automation_id ]`, `[ start_date, end_date, automation_run_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, status ]`, `[ start_date, automation_id, automation_run_id ]`, `[ start_date, automation_id, operation ]`, `[ start_date, automation_id, path ]`, `[ start_date, automation_id, status ]`, `[ start_date, automation_run_id, operation ]`, `[ start_date, automation_run_id, path ]`, `[ start_date, automation_run_id, status ]`, `[ start_date, operation, path ]`, `[ start_date, operation, status ]`, `[ start_date, path, status ]`, `[ end_date, automation_id, automation_run_id ]`, `[ end_date, automation_id, operation ]`, `[ end_date, automation_id, path ]`, `[ end_date, automation_id, status ]`, `[ end_date, automation_run_id, operation ]`, `[ end_date, automation_run_id, path ]`, `[ end_date, automation_run_id, status ]`, `[ end_date, operation, path ]`, `[ end_date, operation, status ]`, `[ end_date, path, status ]`, `[ automation_id, automation_run_id, operation ]`, `[ automation_id, automation_run_id, path ]`, `[ automation_id, automation_run_id, status ]`, `[ automation_id, operation, path ]`, `[ automation_id, operation, status ]`, `[ automation_id, path, status ]`, `[ automation_run_id, operation, path ]`, `[ automation_run_id, operation, status ]`, `[ automation_run_id, path, status ]`, `[ operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id ]`, `[ start_date, end_date, automation_id, operation ]`, `[ start_date, end_date, automation_id, path ]`, `[ start_date, end_date, automation_id, status ]`, `[ start_date, end_date, automation_run_id, operation ]`, `[ start_date, end_date, automation_run_id, path ]`, `[ start_date, end_date, automation_run_id, status ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, path, status ]`, `[ start_date, automation_id, automation_run_id, operation ]`, `[ start_date, automation_id, automation_run_id, path ]`, `[ start_date, automation_id, automation_run_id, status ]`, `[ start_date, automation_id, operation, path ]`, `[ start_date, automation_id, operation, status ]`, `[ start_date, automation_id, path, status ]`, `[ start_date, automation_run_id, operation, path ]`, `[ start_date, automation_run_id, operation, status ]`, `[ start_date, automation_run_id, path, status ]`, `[ start_date, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation ]`, `[ end_date, automation_id, automation_run_id, path ]`, `[ end_date, automation_id, automation_run_id, status ]`, `[ end_date, automation_id, operation, path ]`, `[ end_date, automation_id, operation, status ]`, `[ end_date, automation_id, path, status ]`, `[ end_date, automation_run_id, operation, path ]`, `[ end_date, automation_run_id, operation, status ]`, `[ end_date, automation_run_id, path, status ]`, `[ end_date, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path ]`, `[ automation_id, automation_run_id, operation, status ]`, `[ automation_id, automation_run_id, path, status ]`, `[ automation_id, operation, path, status ]`, `[ automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation ]`, `[ start_date, end_date, automation_id, automation_run_id, path ]`, `[ start_date, end_date, automation_id, automation_run_id, status ]`, `[ start_date, end_date, automation_id, operation, path ]`, `[ start_date, end_date, automation_id, operation, status ]`, `[ start_date, end_date, automation_id, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_run_id, path, status ]`, `[ start_date, end_date, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, automation_id, automation_run_id, path, status ]`, `[ start_date, automation_id, operation, path, status ]`, `[ start_date, automation_run_id, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation, path ]`, `[ end_date, automation_id, automation_run_id, operation, status ]`, `[ end_date, automation_id, automation_run_id, path, status ]`, `[ end_date, automation_id, operation, path, status ]`, `[ end_date, automation_run_id, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_id, automation_run_id, path, status ]`, `[ start_date, end_date, automation_id, operation, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path, status ]` or `[ end_date, automation_id, automation_run_id, operation, path, status ]`.",
            "example": {
              "operation": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation`, `path` or `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ automation_id ]`, `[ automation_run_id ]`, `[ operation ]`, `[ path ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, automation_id ]`, `[ start_date, automation_run_id ]`, `[ start_date, operation ]`, `[ start_date, path ]`, `[ start_date, status ]`, `[ end_date, automation_id ]`, `[ end_date, automation_run_id ]`, `[ end_date, operation ]`, `[ end_date, path ]`, `[ end_date, status ]`, `[ automation_id, automation_run_id ]`, `[ automation_id, operation ]`, `[ automation_id, path ]`, `[ automation_id, status ]`, `[ automation_run_id, operation ]`, `[ automation_run_id, path ]`, `[ automation_run_id, status ]`, `[ operation, path ]`, `[ operation, status ]`, `[ path, status ]`, `[ start_date, end_date, automation_id ]`, `[ start_date, end_date, automation_run_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, status ]`, `[ start_date, automation_id, automation_run_id ]`, `[ start_date, automation_id, operation ]`, `[ start_date, automation_id, path ]`, `[ start_date, automation_id, status ]`, `[ start_date, automation_run_id, operation ]`, `[ start_date, automation_run_id, path ]`, `[ start_date, automation_run_id, status ]`, `[ start_date, operation, path ]`, `[ start_date, operation, status ]`, `[ start_date, path, status ]`, `[ end_date, automation_id, automation_run_id ]`, `[ end_date, automation_id, operation ]`, `[ end_date, automation_id, path ]`, `[ end_date, automation_id, status ]`, `[ end_date, automation_run_id, operation ]`, `[ end_date, automation_run_id, path ]`, `[ end_date, automation_run_id, status ]`, `[ end_date, operation, path ]`, `[ end_date, operation, status ]`, `[ end_date, path, status ]`, `[ automation_id, automation_run_id, operation ]`, `[ automation_id, automation_run_id, path ]`, `[ automation_id, automation_run_id, status ]`, `[ automation_id, operation, path ]`, `[ automation_id, operation, status ]`, `[ automation_id, path, status ]`, `[ automation_run_id, operation, path ]`, `[ automation_run_id, operation, status ]`, `[ automation_run_id, path, status ]`, `[ operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id ]`, `[ start_date, end_date, automation_id, operation ]`, `[ start_date, end_date, automation_id, path ]`, `[ start_date, end_date, automation_id, status ]`, `[ start_date, end_date, automation_run_id, operation ]`, `[ start_date, end_date, automation_run_id, path ]`, `[ start_date, end_date, automation_run_id, status ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, path, status ]`, `[ start_date, automation_id, automation_run_id, operation ]`, `[ start_date, automation_id, automation_run_id, path ]`, `[ start_date, automation_id, automation_run_id, status ]`, `[ start_date, automation_id, operation, path ]`, `[ start_date, automation_id, operation, status ]`, `[ start_date, automation_id, path, status ]`, `[ start_date, automation_run_id, operation, path ]`, `[ start_date, automation_run_id, operation, status ]`, `[ start_date, automation_run_id, path, status ]`, `[ start_date, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation ]`, `[ end_date, automation_id, automation_run_id, path ]`, `[ end_date, automation_id, automation_run_id, status ]`, `[ end_date, automation_id, operation, path ]`, `[ end_date, automation_id, operation, status ]`, `[ end_date, automation_id, path, status ]`, `[ end_date, automation_run_id, operation, path ]`, `[ end_date, automation_run_id, operation, status ]`, `[ end_date, automation_run_id, path, status ]`, `[ end_date, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path ]`, `[ automation_id, automation_run_id, operation, status ]`, `[ automation_id, automation_run_id, path, status ]`, `[ automation_id, operation, path, status ]`, `[ automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation ]`, `[ start_date, end_date, automation_id, automation_run_id, path ]`, `[ start_date, end_date, automation_id, automation_run_id, status ]`, `[ start_date, end_date, automation_id, operation, path ]`, `[ start_date, end_date, automation_id, operation, status ]`, `[ start_date, end_date, automation_id, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_run_id, path, status ]`, `[ start_date, end_date, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, automation_id, automation_run_id, path, status ]`, `[ start_date, automation_id, operation, path, status ]`, `[ start_date, automation_run_id, operation, path, status ]`, `[ end_date, automation_id, automation_run_id, operation, path ]`, `[ end_date, automation_id, automation_run_id, operation, status ]`, `[ end_date, automation_id, automation_run_id, path, status ]`, `[ end_date, automation_id, operation, path, status ]`, `[ end_date, automation_run_id, operation, path, status ]`, `[ automation_id, automation_run_id, operation, path, status ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, path ]`, `[ start_date, end_date, automation_id, automation_run_id, operation, status ]`, `[ start_date, end_date, automation_id, automation_run_id, path, status ]`, `[ start_date, end_date, automation_id, operation, path, status ]`, `[ start_date, end_date, automation_run_id, operation, path, status ]`, `[ start_date, automation_id, automation_run_id, operation, path, status ]` or `[ end_date, automation_id, automation_run_id, operation, path, status ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of AutomationLogs objects.",
            "x-ms-summary": "A list of AutomationLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automation_logs",
          "Automation Logs"
        ],
        "description": "List Automation Logs",
        "operationId": "GetAutomationLogs",
        "summary": "List Automation Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "automation_id": {
              "sort": [],
              "type": "exact"
            },
            "automation_run_id": {
              "sort": [],
              "type": "exact"
            },
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "operation": {
              "sort": [],
              "type": "pattern"
            },
            "path": {
              "sort": [],
              "type": "pattern"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/automation_runs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `automation_id`, `created_at` or `status`.",
            "example": {
              "automation_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `automation_id`, `created_at` or `status`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `status` and `automation_id`. Valid field combinations are `[ automation_id, status ]`.",
            "example": {
              "status": "1"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `status` and `automation_id`. Valid field combinations are `[ automation_id, status ]`."
          },
          {
            "description": "ID of the associated Automation.",
            "example": 1,
            "in": "query",
            "name": "automation_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "ID of the associated Automation."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationRunEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationRunEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationRunEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of AutomationRuns objects.",
            "x-ms-summary": "A list of AutomationRuns objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automation_runs",
          "Automation Runs"
        ],
        "description": "List Automation Runs",
        "operationId": "GetAutomationRuns",
        "summary": "List Automation Runs",
        "x-authentication": [],
        "x-category": [
          "automations"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "automation_id": {
              "sort": [
                "automation_id",
                "created_at",
                "status"
              ],
              "type": "exact"
            },
            "status": {
              "sort": [
                "created_at",
                "status"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "automation_id",
                "status"
              ],
              "sort": [
                "created_at",
                "status"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "automation_id",
          "created_at",
          "status"
        ]
      }
    },
    "/automation_runs/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Automation Run ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Automation Run ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRunEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRunEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRunEntity"
                }
              }
            },
            "description": "The AutomationRuns object.",
            "x-ms-summary": "The AutomationRuns object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automation_runs",
          "Automation Runs"
        ],
        "description": "Show Automation Run",
        "operationId": "GetAutomationRunsId",
        "summary": "Show Automation Run",
        "x-authentication": [],
        "x-category": [
          "automations"
        ]
      }
    },
    "/automations": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `automation`, `disabled`, `last_modified_at` or `name`.",
            "example": {
              "automation": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `automation`, `disabled`, `last_modified_at` or `name`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `disabled`, `last_modified_at` or `automation`. Valid field combinations are `[ disabled, last_modified_at ]`, `[ automation, disabled ]`, `[ automation, last_modified_at ]` or `[ automation, disabled, last_modified_at ]`.",
            "example": {
              "disabled": "true"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `disabled`, `last_modified_at` or `automation`. Valid field combinations are `[ disabled, last_modified_at ]`, `[ automation, disabled ]`, `[ automation, last_modified_at ]` or `[ automation, disabled, last_modified_at ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `last_modified_at`.",
            "example": {
              "last_modified_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `last_modified_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `last_modified_at`.",
            "example": {
              "last_modified_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `last_modified_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `last_modified_at`.",
            "example": {
              "last_modified_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `last_modified_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `last_modified_at`.",
            "example": {
              "last_modified_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `last_modified_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AutomationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Automations objects.",
            "x-ms-summary": "A list of Automations objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automations",
          "Automations"
        ],
        "description": "List Automations",
        "operationId": "GetAutomations",
        "summary": "List Automations",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "automations"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "automation": {
              "sort": [
                "automation",
                "disabled",
                "last_modified_at"
              ],
              "type": "exact"
            },
            "disabled": {
              "sort": [
                "automation",
                "disabled",
                "last_modified_at"
              ],
              "type": "exact"
            },
            "last_modified_at": {
              "sort": [
                "last_modified_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "disabled",
                "last_modified_at"
              ],
              "sort": [
                "last_modified_at"
              ]
            },
            {
              "filter": [
                "automation",
                "disabled"
              ],
              "sort": [
                "automation",
                "disabled",
                "last_modified_at"
              ]
            },
            {
              "filter": [
                "automation",
                "last_modified_at"
              ],
              "sort": [
                "last_modified_at"
              ]
            },
            {
              "filter": [
                "automation",
                "disabled",
                "last_modified_at"
              ],
              "sort": [
                "last_modified_at"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "automation",
          "disabled",
          "last_modified_at",
          "name"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              }
            },
            "description": "The Automations object.",
            "x-ms-summary": "The Automations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automations",
          "Automations"
        ],
        "description": "Create Automation",
        "operationId": "PostAutomations",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchAutomationsId"
        },
        "summary": "Create Automation",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "automations"
        ]
      }
    },
    "/automations/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Automation ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Automation ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automations",
          "Automations"
        ],
        "description": "Delete Automation",
        "operationId": "DeleteAutomationsId",
        "summary": "Delete Automation",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "automations"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Automation ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Automation ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              }
            },
            "description": "The Automations object.",
            "x-ms-summary": "The Automations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automations",
          "Automations"
        ],
        "description": "Show Automation",
        "operationId": "GetAutomationsId",
        "summary": "Show Automation",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "automations"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Automation ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Automation ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationEntity"
                }
              }
            },
            "description": "The Automations object.",
            "x-ms-summary": "The Automations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automations",
          "Automations"
        ],
        "description": "Update Automation",
        "operationId": "PatchAutomationsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "always_overwrite_size_matching_files": {
                    "description": "Ordinarily, files with identical size in the source and destination will be skipped from copy operations to prevent wasted transfer.  If this flag is `true` we will overwrite the destination file always.  Note that this may cause large amounts of wasted transfer usage.  This setting has no effect unless `overwrite_files` is also set to `true`.",
                    "type": "boolean"
                  },
                  "automation": {
                    "description": "Automation type",
                    "enum": [
                      "create_folder",
                      "delete_file",
                      "copy_file",
                      "move_file",
                      "as2_send",
                      "run_sync",
                      "import_file"
                    ],
                    "type": "string"
                  },
                  "description": {
                    "description": "Description for the this Automation.",
                    "type": "string"
                  },
                  "destination_replace_from": {
                    "description": "If set, this string in the destination path will be replaced with the value in `destination_replace_to`.",
                    "type": "string"
                  },
                  "destination_replace_to": {
                    "description": "If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.",
                    "type": "string"
                  },
                  "destinations": {
                    "description": "A list of String destination paths or Hash of folder_path and optional file_path.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "disabled": {
                    "description": "If true, this automation will not run.",
                    "type": "boolean"
                  },
                  "exclude_pattern": {
                    "description": "If set, this glob pattern will exclude files from the automation. Supports globs, except on remote mounts.",
                    "type": "string"
                  },
                  "flatten_destination_structure": {
                    "description": "Normally copy and move automations that use globs will implicitly preserve the source folder structure in the destination.  If this flag is `true`, the source folder structure will be flattened in the destination.  This is useful for copying or moving files from multiple folders into a single destination folder.",
                    "type": "boolean"
                  },
                  "group_ids": {
                    "description": "A list of group IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
                    "type": "string"
                  },
                  "ignore_locked_folders": {
                    "description": "If true, the Lock Folders behavior will be disregarded for automated actions.",
                    "type": "boolean"
                  },
                  "import_urls": {
                    "description": "List of URLs to be imported and names to be used.",
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "interval": {
                    "description": "How often to run this automation? One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`",
                    "type": "string"
                  },
                  "legacy_folder_matching": {
                    "description": "DEPRECATED: If `true`, use the legacy behavior for this automation, where it can operate on folders in addition to just files.  This behavior no longer works and should not be used.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name for this automation.",
                    "type": "string"
                  },
                  "overwrite_files": {
                    "description": "If true, existing files will be overwritten with new files on Move/Copy automations.  Note: by default files will not be overwritten if they appear to be the same file size as the newly incoming file.  Use the `always_overwrite_size_matching_files` option in conjunction with `overwrite_files` to override this behavior and overwrite files no matter what.",
                    "type": "boolean"
                  },
                  "path": {
                    "description": "Path on which this Automation runs.  Supports globs, except on remote mounts.",
                    "type": "string"
                  },
                  "path_time_zone": {
                    "description": "Timezone to use when rendering timestamps in paths.",
                    "type": "string"
                  },
                  "recurring_day": {
                    "description": "If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "retry_on_failure_interval_in_minutes": {
                    "description": "If the Automation fails, retry at this interval (in minutes).  Acceptable values are 5 through 1440 (one day).  Set to null to disable.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "retry_on_failure_number_of_attempts": {
                    "description": "If the Automation fails, retry at most this many times.  Maximum allowed value: 10.  Set to null to disable.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "schedule_days_of_week": {
                    "description": "If trigger is `custom_schedule`. A list of days of the week to run this automation. 0 is Sunday, 1 is Monday, etc.",
                    "items": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "schedule_time_zone": {
                    "description": "If trigger is `custom_schedule`. Time zone for the schedule.",
                    "type": "string"
                  },
                  "schedule_times_of_day": {
                    "description": "If trigger is `custom_schedule`. A list of times of day to run this automation. 24-hour time format.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "source": {
                    "description": "Source path/glob.  See Automation docs for exact description, but this is used to filter for files in the `path` to find files to operate on. Supports globs, except on remote mounts.",
                    "type": "string"
                  },
                  "sync_ids": {
                    "description": "A list of sync IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "How this automation is triggered to run.",
                    "enum": [
                      "daily",
                      "custom_schedule",
                      "webhook",
                      "email",
                      "action"
                    ],
                    "type": "string"
                  },
                  "trigger_actions": {
                    "description": "If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "user_ids": {
                    "description": "A list of user IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
                    "type": "string"
                  },
                  "value": {
                    "description": "A Hash of attributes specific to the automation type.",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Automation",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "automations"
        ]
      }
    },
    "/automations/{id}/manual_run": {
      "post": {
        "parameters": [
          {
            "description": "Automation ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Automation ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "automations",
          "Automations"
        ],
        "description": "Manually Run Automation",
        "operationId": "AutomationManualRun",
        "summary": "Manually Run Automation",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "automations"
        ]
      }
    },
    "/bandwidth_snapshots": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `logged_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BandwidthSnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BandwidthSnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BandwidthSnapshotEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of BandwidthSnapshots objects.",
            "x-ms-summary": "A list of BandwidthSnapshots objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bandwidth_snapshots",
          "Bandwidth Snapshots"
        ],
        "description": "List Bandwidth Snapshots",
        "operationId": "GetBandwidthSnapshots",
        "summary": "List Bandwidth Snapshots",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "usage"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "logged_at": {
              "sort": [
                "logged_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "logged_at"
        ]
      }
    },
    "/behaviors": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `behavior`.",
            "example": {
              "behavior": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `behavior`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `impacts_ui` and `behavior`.",
            "example": {
              "impacts_ui": "true"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `impacts_ui` and `behavior`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `behavior`.",
            "example": {
              "behavior": "1"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `behavior`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Behaviors objects.",
            "x-ms-summary": "A list of Behaviors objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Behaviors"
        ],
        "description": "List Behaviors",
        "operationId": "GetBehaviors",
        "summary": "List Behaviors",
        "x-authentication": [],
        "x-category": [
          "settings"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "behavior": {
              "sort": [
                "behavior"
              ],
              "type": "pattern"
            },
            "impacts_ui": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "behavior"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              }
            },
            "description": "The Behaviors object.",
            "x-ms-summary": "The Behaviors object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Behaviors"
        ],
        "description": "Create Behavior",
        "operationId": "PostBehaviors",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "behavior": {
                    "description": "Behavior type.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description for this behavior.",
                    "type": "string"
                  },
                  "disable_parent_folder_behavior": {
                    "description": "If `true`, the parent folder's behavior will be disabled for this folder and its children. This is the main mechanism for canceling out a `recursive` behavior higher in the folder tree.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name for this behavior.",
                    "type": "string"
                  },
                  "path": {
                    "description": "Path where this behavior should apply.",
                    "type": "string"
                  },
                  "recursive": {
                    "description": "If `true`, behavior is treated as recursive, meaning that it impacts child folders as well.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Behavior",
        "x-authentication": [],
        "x-category": [
          "settings"
        ]
      }
    },
    "/behaviors/folders/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `behavior`.",
            "example": {
              "behavior": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `behavior`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `impacts_ui` and `behavior`.",
            "example": {
              "impacts_ui": "true"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `impacts_ui` and `behavior`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `behavior`.",
            "example": {
              "behavior": "1"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `behavior`."
          },
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          },
          {
            "description": "If `true`, behaviors above this path are shown.",
            "in": "query",
            "name": "ancestor_behaviors",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "If `true`, behaviors above this path are shown."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BehaviorEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Behaviors objects.",
            "x-ms-summary": "A list of Behaviors objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Behaviors"
        ],
        "description": "List Behaviors by Path",
        "operationId": "BehaviorListForPath",
        "summary": "List Behaviors by Path",
        "x-authentication": [],
        "x-category": [
          "settings"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "behavior": {
              "sort": [
                "behavior"
              ],
              "type": "pattern"
            },
            "impacts_ui": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "behavior"
        ]
      }
    },
    "/behaviors/webhook/test": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StatusEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusEntity"
                }
              }
            },
            "description": "The Behaviors object.",
            "x-ms-summary": "The Behaviors object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Statuses"
        ],
        "description": "Test Webhook",
        "operationId": "PostBehaviorsWebhookTest",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostSiteTestWebhook"
        },
        "summary": "Test Webhook",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "settings"
        ],
        "x-path_aliases": [
          "site/test-webhook"
        ]
      }
    },
    "/behaviors/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Behavior ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Behavior ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Behaviors"
        ],
        "description": "Delete Behavior",
        "operationId": "DeleteBehaviorsId",
        "summary": "Delete Behavior",
        "x-authentication": [],
        "x-category": [
          "settings"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Behavior ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Behavior ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              }
            },
            "description": "The Behaviors object.",
            "x-ms-summary": "The Behaviors object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Behaviors"
        ],
        "description": "Show Behavior",
        "operationId": "GetBehaviorsId",
        "summary": "Show Behavior",
        "x-authentication": [],
        "x-category": [
          "settings"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Behavior ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Behavior ID.",
            "x-types": [
              {
                "type": "string"
              },
              {
                "format": "int32",
                "type": "integer"
              },
              {
                "type": "object"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BehaviorEntity"
                }
              }
            },
            "description": "The Behaviors object.",
            "x-ms-summary": "The Behaviors object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "behaviors",
          "Behaviors"
        ],
        "description": "Update Behavior",
        "operationId": "PatchBehaviorsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "attachment_delete": {
                    "description": "If `true`, delete the file stored in `attachment`.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description for this behavior.",
                    "type": "string"
                  },
                  "disable_parent_folder_behavior": {
                    "description": "If `true`, the parent folder's behavior will be disabled for this folder and its children. This is the main mechanism for canceling out a `recursive` behavior higher in the folder tree.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name for this behavior.",
                    "type": "string"
                  },
                  "recursive": {
                    "description": "If `true`, behavior is treated as recursive, meaning that it impacts child folders as well.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Behavior",
        "x-authentication": [],
        "x-category": [
          "settings"
        ]
      }
    },
    "/bundle_actions": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `bundle_id` or `bundle_registration_id`. Valid field combinations are `[ bundle_id, created_at ]`, `[ bundle_registration_id, created_at ]`, `[ bundle_id, bundle_registration_id ]` or `[ bundle_id, bundle_registration_id, created_at ]`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `bundle_id` or `bundle_registration_id`. Valid field combinations are `[ bundle_id, created_at ]`, `[ bundle_registration_id, created_at ]`, `[ bundle_id, bundle_registration_id ]` or `[ bundle_id, bundle_registration_id, created_at ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleActionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of BundleActions objects.",
            "x-ms-summary": "A list of BundleActions objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_actions",
          "Bundle Actions"
        ],
        "description": "List Bundle Actions",
        "operationId": "GetBundleActions",
        "summary": "List Bundle Actions",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "bundle_id": {
              "sort": [
                "created_at"
              ],
              "type": "exact"
            },
            "bundle_registration_id": {
              "sort": [
                "created_at"
              ],
              "type": "exact"
            },
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "bundle_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "bundle_registration_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "bundle_id",
                "bundle_registration_id"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "bundle_id",
                "bundle_registration_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/bundle_downloads": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "Bundle ID",
            "in": "query",
            "name": "bundle_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-included-in-ipaas": true,
            "x-ms-summary": "Bundle ID"
          },
          {
            "description": "BundleRegistration ID",
            "in": "query",
            "name": "bundle_registration_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "BundleRegistration ID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleDownloadEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleDownloadEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleDownloadEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of BundleDownloads objects.",
            "x-ms-summary": "A list of BundleDownloads objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_downloads",
          "Bundle Downloads"
        ],
        "description": "List Bundle Downloads",
        "operationId": "GetBundleDownloads",
        "summary": "List Bundle Downloads",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-included-in-ipaas": true,
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/bundle_notifications": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `bundle_id`.",
            "example": {
              "bundle_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `bundle_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `bundle_id`.",
            "example": {
              "bundle_id": "1"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `bundle_id`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleNotificationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleNotificationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleNotificationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of BundleNotifications objects.",
            "x-ms-summary": "A list of BundleNotifications objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_notifications",
          "Bundle Notifications"
        ],
        "description": "List Bundle Notifications",
        "operationId": "GetBundleNotifications",
        "summary": "List Bundle Notifications",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "bundle_id": {
              "sort": [
                "bundle_id",
                "user_id"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-included-in-ipaas": true,
        "x-sortable_columns": [
          "bundle_id"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              }
            },
            "description": "The BundleNotifications object.",
            "x-ms-summary": "The BundleNotifications object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_notifications",
          "Bundle Notifications"
        ],
        "description": "Create Bundle Notification",
        "operationId": "PostBundleNotifications",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "bundle_id": {
                    "description": "Bundle ID to notify on",
                    "format": "int32",
                    "type": "integer"
                  },
                  "notify_on_registration": {
                    "description": "Triggers bundle notification when a registration action occurs for it.",
                    "type": "boolean"
                  },
                  "notify_on_upload": {
                    "description": "Triggers bundle notification when a upload action occurs for it.",
                    "type": "boolean"
                  },
                  "user_id": {
                    "description": "The id of the user to notify.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "bundle_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Bundle Notification",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/bundle_notifications/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Bundle Notification ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle Notification ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_notifications",
          "Bundle Notifications"
        ],
        "description": "Delete Bundle Notification",
        "operationId": "DeleteBundleNotificationsId",
        "summary": "Delete Bundle Notification",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      },
      "get": {
        "parameters": [
          {
            "description": "Bundle Notification ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle Notification ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              }
            },
            "description": "The BundleNotifications object.",
            "x-ms-summary": "The BundleNotifications object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_notifications",
          "Bundle Notifications"
        ],
        "description": "Show Bundle Notification",
        "operationId": "GetBundleNotificationsId",
        "summary": "Show Bundle Notification",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      },
      "patch": {
        "parameters": [
          {
            "description": "Bundle Notification ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle Notification ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNotificationEntity"
                }
              }
            },
            "description": "The BundleNotifications object.",
            "x-ms-summary": "The BundleNotifications object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_notifications",
          "Bundle Notifications"
        ],
        "description": "Update Bundle Notification",
        "operationId": "PatchBundleNotificationsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "notify_on_registration": {
                    "description": "Triggers bundle notification when a registration action occurs for it.",
                    "type": "boolean"
                  },
                  "notify_on_upload": {
                    "description": "Triggers bundle notification when a upload action occurs for it.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Bundle Notification",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/bundle_recipients": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `has_registrations`.",
            "example": {
              "has_registrations": "true"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `has_registrations`."
          },
          {
            "description": "List recipients for the bundle with this ID.",
            "in": "query",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "List recipients for the bundle with this ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleRecipientEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleRecipientEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleRecipientEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of BundleRecipients objects.",
            "x-ms-summary": "A list of BundleRecipients objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_recipients",
          "Bundle Recipients"
        ],
        "description": "List Bundle Recipients",
        "operationId": "GetBundleRecipients",
        "summary": "List Bundle Recipients",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "has_registrations": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-included-in-ipaas": true,
        "x-sortable_columns": []
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRecipientEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRecipientEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleRecipientEntity"
                }
              }
            },
            "description": "The BundleRecipients object.",
            "x-ms-summary": "The BundleRecipients object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_recipients",
          "Bundle Recipients"
        ],
        "description": "Create Bundle Recipient",
        "operationId": "PostBundleRecipients",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "bundle_id": {
                    "description": "Bundle to share.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "company": {
                    "description": "Company of recipient.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of recipient.",
                    "type": "string"
                  },
                  "note": {
                    "description": "Note to include in email.",
                    "type": "string"
                  },
                  "recipient": {
                    "description": "Email addresses to share this bundle with.",
                    "type": "string"
                  },
                  "share_after_create": {
                    "description": "Set to true to share the link with the recipient upon creation.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "bundle_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Bundle Recipient",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/bundle_registrations": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `bundle_id`.",
            "example": {
              "bundle_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `bundle_id`."
          },
          {
            "description": "ID of the associated Bundle",
            "in": "query",
            "name": "bundle_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-included-in-ipaas": true,
            "x-ms-summary": "ID of the associated Bundle"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleRegistrationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleRegistrationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleRegistrationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of BundleRegistrations objects.",
            "x-ms-summary": "A list of BundleRegistrations objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundle_registrations",
          "Bundle Registrations"
        ],
        "description": "List Bundle Registrations",
        "operationId": "GetBundleRegistrations",
        "summary": "List Bundle Registrations",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true,
        "x-sortable_columns": [
          "bundle_id"
        ]
      }
    },
    "/bundles": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BundleEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Bundles objects.",
            "x-ms-summary": "A list of Bundles objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundles",
          "Bundles"
        ],
        "description": "List Bundles",
        "operationId": "GetBundles",
        "summary": "List Bundles",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true,
        "x-sortable_columns": [
          "expires_at"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              }
            },
            "description": "The Bundles object.",
            "x-ms-summary": "The Bundles object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundles",
          "Bundles"
        ],
        "description": "Create Bundle",
        "operationId": "PostBundles",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchBundlesId"
        },
        "summary": "Create Bundle",
        "x-authentication": [
          "native_app"
        ],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/bundles/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Bundle ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundles",
          "Bundles"
        ],
        "description": "Delete Bundle",
        "operationId": "DeleteBundlesId",
        "summary": "Delete Bundle",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      },
      "get": {
        "parameters": [
          {
            "description": "Bundle ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              }
            },
            "description": "The Bundles object.",
            "x-ms-summary": "The Bundles object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundles",
          "Bundles"
        ],
        "description": "Show Bundle",
        "operationId": "GetBundlesId",
        "summary": "Show Bundle",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      },
      "patch": {
        "parameters": [
          {
            "description": "Bundle ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BundleEntity"
                }
              }
            },
            "description": "The Bundles object.",
            "x-ms-summary": "The Bundles object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundles",
          "Bundles"
        ],
        "description": "Update Bundle",
        "operationId": "PatchBundlesId",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "summary": "Update Bundle",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/bundles/{id}/share": {
      "post": {
        "parameters": [
          {
            "description": "Bundle ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Bundle ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "bundles",
          "Bundles"
        ],
        "description": "Send email(s) with a link to bundle",
        "operationId": "PostBundlesIdShare",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "note": {
                    "description": "Note to include in email.",
                    "type": "string"
                  },
                  "recipients": {
                    "description": "A list of recipients to share this bundle with. Required unless `to` is used.",
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "to": {
                    "description": "A list of email addresses to share this bundle with. Required unless `recipients` is used.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Send email(s) with a link to bundle",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "share_links"
        ]
      }
    },
    "/clickwraps": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClickwrapEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClickwrapEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClickwrapEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Clickwraps objects.",
            "x-ms-summary": "A list of Clickwraps objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "clickwraps",
          "Clickwraps"
        ],
        "description": "List Clickwraps",
        "operationId": "GetClickwraps",
        "summary": "List Clickwraps",
        "x-authentication": [],
        "x-category": [
          "sharing"
        ],
        "x-sortable_columns": []
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              }
            },
            "description": "The Clickwraps object.",
            "x-ms-summary": "The Clickwraps object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "clickwraps",
          "Clickwraps"
        ],
        "description": "Create Clickwrap",
        "operationId": "PostClickwraps",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostClickwraps"
        },
        "summary": "Create Clickwrap",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "sharing"
        ]
      }
    },
    "/clickwraps/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Clickwrap ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Clickwrap ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "clickwraps",
          "Clickwraps"
        ],
        "description": "Delete Clickwrap",
        "operationId": "DeleteClickwrapsId",
        "summary": "Delete Clickwrap",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "sharing"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Clickwrap ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Clickwrap ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              }
            },
            "description": "The Clickwraps object.",
            "x-ms-summary": "The Clickwraps object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "clickwraps",
          "Clickwraps"
        ],
        "description": "Show Clickwrap",
        "operationId": "GetClickwrapsId",
        "summary": "Show Clickwrap",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "sharing"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Clickwrap ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Clickwrap ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClickwrapEntity"
                }
              }
            },
            "description": "The Clickwraps object.",
            "x-ms-summary": "The Clickwraps object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "clickwraps",
          "Clickwraps"
        ],
        "description": "Update Clickwrap",
        "operationId": "PatchClickwrapsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Body text of Clickwrap (supports Markdown formatting).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the Clickwrap agreement (used when selecting from multiple Clickwrap agreements.)",
                    "type": "string"
                  },
                  "use_with_bundles": {
                    "description": "Use this Clickwrap for Bundles?",
                    "enum": [
                      "none",
                      "available",
                      "require",
                      "available_to_all_users"
                    ],
                    "type": "string"
                  },
                  "use_with_inboxes": {
                    "description": "Use this Clickwrap for Inboxes?",
                    "enum": [
                      "none",
                      "available",
                      "require",
                      "available_to_all_users"
                    ],
                    "type": "string"
                  },
                  "use_with_users": {
                    "description": "Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.",
                    "enum": [
                      "none",
                      "require"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Clickwrap",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "sharing"
        ]
      }
    },
    "/dns_records": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of DnsRecords objects.",
            "x-ms-summary": "A list of DnsRecords objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "dns_records",
          "DNS Records"
        ],
        "description": "Show Site DNS Configuration",
        "operationId": "GetDnsRecords",
        "summary": "Show Site DNS Configuration",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "security"
        ],
        "x-path_aliases": [
          "site/dns_records"
        ]
      }
    },
    "/email_incoming_messages": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`, `sender`, `status` or `inbox_id`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`, `sender`, `status` or `inbox_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `inbox_id`, `sender` or `status`. Valid field combinations are `[ inbox_id, created_at ]`, `[ sender, created_at ]`, `[ status, created_at ]`, `[ inbox_id, status ]`, `[ status, sender ]`, `[ inbox_id, status, created_at ]`, `[ status, sender, created_at ]`, `[ inbox_id, status, sender ]` or `[ inbox_id, status, sender, created_at ]`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `inbox_id`, `sender` or `status`. Valid field combinations are `[ inbox_id, created_at ]`, `[ sender, created_at ]`, `[ status, created_at ]`, `[ inbox_id, status ]`, `[ status, sender ]`, `[ inbox_id, status, created_at ]`, `[ status, sender, created_at ]`, `[ inbox_id, status, sender ]` or `[ inbox_id, status, sender, created_at ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `sender`.",
            "example": {
              "sender": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `sender`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailIncomingMessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailIncomingMessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailIncomingMessageEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of EmailIncomingMessages objects.",
            "x-ms-summary": "A list of EmailIncomingMessages objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "email_incoming_messages",
          "Email Incoming Messages"
        ],
        "description": "List Email Incoming Messages",
        "operationId": "GetEmailIncomingMessages",
        "summary": "List Email Incoming Messages",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "sharing",
          "inboxes"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            },
            "inbox_id": {
              "sort": [
                "created_at",
                "status",
                "inbox_id"
              ],
              "type": "exact"
            },
            "sender": {
              "sort": [
                "created_at",
                "sender"
              ],
              "type": "pattern"
            },
            "status": {
              "sort": [
                "created_at",
                "sender",
                "status"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "inbox_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "sender",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "status",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "inbox_id",
                "status"
              ],
              "sort": [
                "created_at",
                "sender",
                "status"
              ]
            },
            {
              "filter": [
                "status",
                "sender"
              ],
              "sort": [
                "created_at",
                "sender"
              ]
            },
            {
              "filter": [
                "inbox_id",
                "status",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "status",
                "sender",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "inbox_id",
                "status",
                "sender"
              ],
              "sort": [
                "created_at",
                "sender"
              ]
            },
            {
              "filter": [
                "inbox_id",
                "status",
                "sender",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "created_at",
          "sender",
          "status",
          "inbox_id"
        ]
      }
    },
    "/email_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date` or `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, status ]` or `[ end_date, status ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date` or `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, status ]` or `[ end_date, status ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, status ]` or `[ end_date, status ]`.",
            "example": {
              "status": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ status ]`, `[ start_date, end_date ]`, `[ start_date, status ]` or `[ end_date, status ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EmailLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of EmailLogs objects.",
            "x-ms-summary": "A list of EmailLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "email_logs",
          "Email Logs"
        ],
        "description": "List Email Logs",
        "operationId": "GetEmailLogs",
        "summary": "List Email Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/exavault_api_request_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `request_ip`, `request_method` or `success`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_method, success ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_method, success ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_method, success ]`, `[ request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, request_ip, request_method, success ]` or `[ end_date, request_ip, request_method, success ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `request_ip`, `request_method` or `success`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_method, success ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_method, success ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_method, success ]`, `[ request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, request_ip, request_method, success ]` or `[ end_date, request_ip, request_method, success ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `request_ip` and `request_method`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_method, success ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_method, success ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_method, success ]`, `[ request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, request_ip, request_method, success ]` or `[ end_date, request_ip, request_method, success ]`.",
            "example": {
              "request_ip": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `request_ip` and `request_method`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ request_ip ]`, `[ request_method ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, request_ip ]`, `[ start_date, request_method ]`, `[ start_date, success ]`, `[ end_date, request_ip ]`, `[ end_date, request_method ]`, `[ end_date, success ]`, `[ request_ip, request_method ]`, `[ request_ip, success ]`, `[ request_method, success ]`, `[ start_date, end_date, request_ip ]`, `[ start_date, end_date, request_method ]`, `[ start_date, end_date, success ]`, `[ start_date, request_ip, request_method ]`, `[ start_date, request_ip, success ]`, `[ start_date, request_method, success ]`, `[ end_date, request_ip, request_method ]`, `[ end_date, request_ip, success ]`, `[ end_date, request_method, success ]`, `[ request_ip, request_method, success ]`, `[ start_date, end_date, request_ip, request_method ]`, `[ start_date, end_date, request_ip, success ]`, `[ start_date, end_date, request_method, success ]`, `[ start_date, request_ip, request_method, success ]` or `[ end_date, request_ip, request_method, success ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExavaultApiRequestLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExavaultApiRequestLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExavaultApiRequestLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ExavaultApiRequestLogs objects.",
            "x-ms-summary": "A list of ExavaultApiRequestLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "exavault_api_request_logs",
          "Exavault API Request Logs"
        ],
        "description": "List Exavault API Request Logs",
        "operationId": "GetExavaultApiRequestLogs",
        "summary": "List Exavault API Request Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "request_ip": {
              "sort": [],
              "type": "pattern"
            },
            "request_method": {
              "sort": [],
              "type": "pattern"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "success": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/external_events": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `siem_http_destination_id`, `created_at`, `event_type`, `status` or `folder_behavior_id`.",
            "example": {
              "siem_http_destination_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `siem_http_destination_id`, `created_at`, `event_type`, `status` or `folder_behavior_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status`, `folder_behavior_id` or `siem_http_destination_id`. Valid field combinations are `[ event_type, created_at ]`, `[ remote_server_type, created_at ]`, `[ status, created_at ]`, `[ folder_behavior_id, created_at ]`, `[ event_type, status ]`, `[ remote_server_type, status ]`, `[ folder_behavior_id, status ]`, `[ event_type, status, created_at ]`, `[ remote_server_type, status, created_at ]` or `[ folder_behavior_id, status, created_at ]`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status`, `folder_behavior_id` or `siem_http_destination_id`. Valid field combinations are `[ event_type, created_at ]`, `[ remote_server_type, created_at ]`, `[ status, created_at ]`, `[ folder_behavior_id, created_at ]`, `[ event_type, status ]`, `[ remote_server_type, status ]`, `[ folder_behavior_id, status ]`, `[ event_type, status, created_at ]`, `[ remote_server_type, status, created_at ]` or `[ folder_behavior_id, status, created_at ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExternalEventEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExternalEventEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ExternalEventEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ExternalEvents objects.",
            "x-ms-summary": "A list of ExternalEvents objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "external_events",
          "External Events"
        ],
        "description": "List External Events",
        "operationId": "GetExternalEvents",
        "summary": "List External Events",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            },
            "event_type": {
              "sort": [
                "created_at",
                "event_type",
                "status"
              ],
              "type": "exact"
            },
            "folder_behavior_id": {
              "sort": [
                "created_at",
                "status",
                "folder_behavior_id"
              ],
              "type": "exact"
            },
            "remote_server_type": {
              "sort": [
                "created_at",
                "status"
              ],
              "type": "exact"
            },
            "siem_http_destination_id": {
              "sort": [
                "siem_http_destination_id"
              ],
              "type": "exact"
            },
            "status": {
              "sort": [
                "created_at",
                "status"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "event_type",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "remote_server_type",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "status",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "folder_behavior_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "event_type",
                "status"
              ],
              "sort": [
                "created_at",
                "status"
              ]
            },
            {
              "filter": [
                "remote_server_type",
                "status"
              ],
              "sort": [
                "created_at",
                "status"
              ]
            },
            {
              "filter": [
                "folder_behavior_id",
                "status"
              ],
              "sort": [
                "created_at",
                "status"
              ]
            },
            {
              "filter": [
                "event_type",
                "status",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "remote_server_type",
                "status",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "folder_behavior_id",
                "status",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "siem_http_destination_id",
          "created_at",
          "event_type",
          "status",
          "folder_behavior_id"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalEventEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalEventEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalEventEntity"
                }
              }
            },
            "description": "The ExternalEvents object.",
            "x-ms-summary": "The ExternalEvents object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "external_events",
          "External Events"
        ],
        "description": "Create External Event",
        "operationId": "PostExternalEvents",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Event body",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of event.",
                    "enum": [
                      "success",
                      "failure",
                      "partial_failure",
                      "in_progress",
                      "skipped"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create External Event",
        "x-authentication": [],
        "x-category": [
          "logging"
        ]
      }
    },
    "/external_events/{id}": {
      "get": {
        "parameters": [
          {
            "description": "External Event ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "External Event ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalEventEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalEventEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalEventEntity"
                }
              }
            },
            "description": "The ExternalEvents object.",
            "x-ms-summary": "The ExternalEvents object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "external_events",
          "External Events"
        ],
        "description": "Show External Event",
        "operationId": "GetExternalEventsId",
        "summary": "Show External Event",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/file_actions/begin_upload/{path}": {
      "post": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileUploadPartEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileUploadPartEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileUploadPartEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The FileActions object.",
            "x-ms-summary": "The FileActions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_actions",
          "File Upload Parts"
        ],
        "description": "Begin File Upload",
        "operationId": "FileActionBeginUpload",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "mkdir_parents": {
                    "description": "Create parent directories if they do not exist?",
                    "type": "boolean"
                  },
                  "part": {
                    "description": "Part if uploading a part.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "parts": {
                    "description": "How many parts to fetch?",
                    "format": "int32",
                    "type": "integer"
                  },
                  "ref": {
                    "type": "string"
                  },
                  "restart": {
                    "description": "File byte offset to restart from.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "size": {
                    "description": "Total bytes of file being uploaded (include bytes being retained if appending/restarting).",
                    "format": "int32",
                    "type": "integer"
                  },
                  "with_rename": {
                    "description": "Allow file rename instead of overwrite?",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Begin File Upload",
        "x-authentication": [
          "native_app",
          "office_integration",
          "inbox",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/file_actions/copy/{path}": {
      "post": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileActionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileActionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileActionEntity"
                }
              }
            },
            "description": "The FileActions object.",
            "x-ms-summary": "The FileActions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_actions",
          "File Actions"
        ],
        "description": "Copy File/Folder",
        "operationId": "FileActionCopy",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "destination": {
                    "description": "Copy destination path.",
                    "type": "string"
                  },
                  "overwrite": {
                    "description": "Overwrite existing file(s) in the destination?",
                    "type": "boolean"
                  },
                  "structure": {
                    "description": "Copy structure only?",
                    "type": "boolean"
                  }
                },
                "required": [
                  "destination"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Copy File/Folder",
        "x-authentication": [
          "native_app",
          "office_integration",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/file_actions/metadata/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          },
          {
            "description": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`.",
            "in": "query",
            "name": "preview_size",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."
          },
          {
            "description": "Include file preview information?",
            "in": "query",
            "name": "with_previews",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include file preview information?"
          },
          {
            "description": "Include file priority color information?",
            "in": "query",
            "name": "with_priority_color",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include file priority color information?"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              }
            },
            "description": "The FileActions object.",
            "x-ms-summary": "The FileActions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_actions",
          "Files"
        ],
        "description": "Find File/Folder by Path",
        "operationId": "FileActionFind",
        "summary": "Find File/Folder by Path",
        "x-authentication": [
          "native_app",
          "bundle_through_trusted_relay",
          "office_integration"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/file_actions/move/{path}": {
      "post": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileActionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileActionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileActionEntity"
                }
              }
            },
            "description": "The FileActions object.",
            "x-ms-summary": "The FileActions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_actions",
          "File Actions"
        ],
        "description": "Move File/Folder",
        "operationId": "FileActionMove",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "destination": {
                    "description": "Move destination path.",
                    "type": "string"
                  },
                  "overwrite": {
                    "description": "Overwrite existing file(s) in the destination?",
                    "type": "boolean"
                  }
                },
                "required": [
                  "destination"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Move File/Folder",
        "x-authentication": [
          "native_app",
          "office_integration",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/file_comment_reactions": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentReactionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentReactionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentReactionEntity"
                }
              }
            },
            "description": "The FileCommentReactions object.",
            "x-ms-summary": "The FileCommentReactions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_comment_reactions",
          "File Comment Reactions"
        ],
        "description": "Create File Comment Reaction",
        "operationId": "PostFileCommentReactions",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "emoji": {
                    "description": "Emoji to react with.",
                    "type": "string"
                  },
                  "file_comment_id": {
                    "description": "ID of file comment to attach reaction to.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create File Comment Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/file_comment_reactions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "File Comment Reaction ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "File Comment Reaction ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_comment_reactions",
          "File Comment Reactions"
        ],
        "description": "Delete File Comment Reaction",
        "operationId": "DeleteFileCommentReactionsId",
        "summary": "Delete File Comment Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/file_comments": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentEntity"
                }
              }
            },
            "description": "The FileComments object.",
            "x-ms-summary": "The FileComments object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_comments",
          "File Comments"
        ],
        "description": "Create File Comment",
        "operationId": "PostFileComments",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Comment body.",
                    "type": "string"
                  },
                  "path": {
                    "description": "File path.",
                    "type": "string"
                  }
                },
                "required": [
                  "body"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create File Comment",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/file_comments/files/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileCommentEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileCommentEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileCommentEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of FileComments objects.",
            "x-ms-summary": "A list of FileComments objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_comments",
          "File Comments"
        ],
        "description": "List File Comments by Path",
        "operationId": "FileCommentListForPath",
        "summary": "List File Comments by Path",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/file_comments/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "File Comment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "File Comment ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_comments",
          "File Comments"
        ],
        "description": "Delete File Comment",
        "operationId": "DeleteFileCommentsId",
        "summary": "Delete File Comment",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "File Comment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "File Comment ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileCommentEntity"
                }
              }
            },
            "description": "The FileComments object.",
            "x-ms-summary": "The FileComments object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_comments",
          "File Comments"
        ],
        "description": "Update File Comment",
        "operationId": "PatchFileCommentsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Comment body.",
                    "type": "string"
                  }
                },
                "required": [
                  "body"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update File Comment",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/file_migration_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `file_migration_id`, `operation`, `status` or `type`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ file_migration_id ]`, `[ operation ]`, `[ status ]`, `[ type ]`, `[ start_date, end_date ]`, `[ start_date, file_migration_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, type ]`, `[ end_date, file_migration_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, type ]`, `[ file_migration_id, operation ]`, `[ file_migration_id, status ]`, `[ file_migration_id, type ]`, `[ operation, status ]`, `[ operation, type ]`, `[ status, type ]`, `[ start_date, end_date, file_migration_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, type ]`, `[ start_date, file_migration_id, operation ]`, `[ start_date, file_migration_id, status ]`, `[ start_date, file_migration_id, type ]`, `[ start_date, operation, status ]`, `[ start_date, operation, type ]`, `[ start_date, status, type ]`, `[ end_date, file_migration_id, operation ]`, `[ end_date, file_migration_id, status ]`, `[ end_date, file_migration_id, type ]`, `[ end_date, operation, status ]`, `[ end_date, operation, type ]`, `[ end_date, status, type ]`, `[ file_migration_id, operation, status ]`, `[ file_migration_id, operation, type ]`, `[ file_migration_id, status, type ]`, `[ operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation ]`, `[ start_date, end_date, file_migration_id, status ]`, `[ start_date, end_date, file_migration_id, type ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, type ]`, `[ start_date, end_date, status, type ]`, `[ start_date, file_migration_id, operation, status ]`, `[ start_date, file_migration_id, operation, type ]`, `[ start_date, file_migration_id, status, type ]`, `[ start_date, operation, status, type ]`, `[ end_date, file_migration_id, operation, status ]`, `[ end_date, file_migration_id, operation, type ]`, `[ end_date, file_migration_id, status, type ]`, `[ end_date, operation, status, type ]`, `[ file_migration_id, operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation, status ]`, `[ start_date, end_date, file_migration_id, operation, type ]`, `[ start_date, end_date, file_migration_id, status, type ]`, `[ start_date, end_date, operation, status, type ]`, `[ start_date, file_migration_id, operation, status, type ]` or `[ end_date, file_migration_id, operation, status, type ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `file_migration_id`, `operation`, `status` or `type`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ file_migration_id ]`, `[ operation ]`, `[ status ]`, `[ type ]`, `[ start_date, end_date ]`, `[ start_date, file_migration_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, type ]`, `[ end_date, file_migration_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, type ]`, `[ file_migration_id, operation ]`, `[ file_migration_id, status ]`, `[ file_migration_id, type ]`, `[ operation, status ]`, `[ operation, type ]`, `[ status, type ]`, `[ start_date, end_date, file_migration_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, type ]`, `[ start_date, file_migration_id, operation ]`, `[ start_date, file_migration_id, status ]`, `[ start_date, file_migration_id, type ]`, `[ start_date, operation, status ]`, `[ start_date, operation, type ]`, `[ start_date, status, type ]`, `[ end_date, file_migration_id, operation ]`, `[ end_date, file_migration_id, status ]`, `[ end_date, file_migration_id, type ]`, `[ end_date, operation, status ]`, `[ end_date, operation, type ]`, `[ end_date, status, type ]`, `[ file_migration_id, operation, status ]`, `[ file_migration_id, operation, type ]`, `[ file_migration_id, status, type ]`, `[ operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation ]`, `[ start_date, end_date, file_migration_id, status ]`, `[ start_date, end_date, file_migration_id, type ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, type ]`, `[ start_date, end_date, status, type ]`, `[ start_date, file_migration_id, operation, status ]`, `[ start_date, file_migration_id, operation, type ]`, `[ start_date, file_migration_id, status, type ]`, `[ start_date, operation, status, type ]`, `[ end_date, file_migration_id, operation, status ]`, `[ end_date, file_migration_id, operation, type ]`, `[ end_date, file_migration_id, status, type ]`, `[ end_date, operation, status, type ]`, `[ file_migration_id, operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation, status ]`, `[ start_date, end_date, file_migration_id, operation, type ]`, `[ start_date, end_date, file_migration_id, status, type ]`, `[ start_date, end_date, operation, status, type ]`, `[ start_date, file_migration_id, operation, status, type ]` or `[ end_date, file_migration_id, operation, status, type ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation` and `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ file_migration_id ]`, `[ operation ]`, `[ status ]`, `[ type ]`, `[ start_date, end_date ]`, `[ start_date, file_migration_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, type ]`, `[ end_date, file_migration_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, type ]`, `[ file_migration_id, operation ]`, `[ file_migration_id, status ]`, `[ file_migration_id, type ]`, `[ operation, status ]`, `[ operation, type ]`, `[ status, type ]`, `[ start_date, end_date, file_migration_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, type ]`, `[ start_date, file_migration_id, operation ]`, `[ start_date, file_migration_id, status ]`, `[ start_date, file_migration_id, type ]`, `[ start_date, operation, status ]`, `[ start_date, operation, type ]`, `[ start_date, status, type ]`, `[ end_date, file_migration_id, operation ]`, `[ end_date, file_migration_id, status ]`, `[ end_date, file_migration_id, type ]`, `[ end_date, operation, status ]`, `[ end_date, operation, type ]`, `[ end_date, status, type ]`, `[ file_migration_id, operation, status ]`, `[ file_migration_id, operation, type ]`, `[ file_migration_id, status, type ]`, `[ operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation ]`, `[ start_date, end_date, file_migration_id, status ]`, `[ start_date, end_date, file_migration_id, type ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, type ]`, `[ start_date, end_date, status, type ]`, `[ start_date, file_migration_id, operation, status ]`, `[ start_date, file_migration_id, operation, type ]`, `[ start_date, file_migration_id, status, type ]`, `[ start_date, operation, status, type ]`, `[ end_date, file_migration_id, operation, status ]`, `[ end_date, file_migration_id, operation, type ]`, `[ end_date, file_migration_id, status, type ]`, `[ end_date, operation, status, type ]`, `[ file_migration_id, operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation, status ]`, `[ start_date, end_date, file_migration_id, operation, type ]`, `[ start_date, end_date, file_migration_id, status, type ]`, `[ start_date, end_date, operation, status, type ]`, `[ start_date, file_migration_id, operation, status, type ]` or `[ end_date, file_migration_id, operation, status, type ]`.",
            "example": {
              "operation": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation` and `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ file_migration_id ]`, `[ operation ]`, `[ status ]`, `[ type ]`, `[ start_date, end_date ]`, `[ start_date, file_migration_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, type ]`, `[ end_date, file_migration_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, type ]`, `[ file_migration_id, operation ]`, `[ file_migration_id, status ]`, `[ file_migration_id, type ]`, `[ operation, status ]`, `[ operation, type ]`, `[ status, type ]`, `[ start_date, end_date, file_migration_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, type ]`, `[ start_date, file_migration_id, operation ]`, `[ start_date, file_migration_id, status ]`, `[ start_date, file_migration_id, type ]`, `[ start_date, operation, status ]`, `[ start_date, operation, type ]`, `[ start_date, status, type ]`, `[ end_date, file_migration_id, operation ]`, `[ end_date, file_migration_id, status ]`, `[ end_date, file_migration_id, type ]`, `[ end_date, operation, status ]`, `[ end_date, operation, type ]`, `[ end_date, status, type ]`, `[ file_migration_id, operation, status ]`, `[ file_migration_id, operation, type ]`, `[ file_migration_id, status, type ]`, `[ operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation ]`, `[ start_date, end_date, file_migration_id, status ]`, `[ start_date, end_date, file_migration_id, type ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, type ]`, `[ start_date, end_date, status, type ]`, `[ start_date, file_migration_id, operation, status ]`, `[ start_date, file_migration_id, operation, type ]`, `[ start_date, file_migration_id, status, type ]`, `[ start_date, operation, status, type ]`, `[ end_date, file_migration_id, operation, status ]`, `[ end_date, file_migration_id, operation, type ]`, `[ end_date, file_migration_id, status, type ]`, `[ end_date, operation, status, type ]`, `[ file_migration_id, operation, status, type ]`, `[ start_date, end_date, file_migration_id, operation, status ]`, `[ start_date, end_date, file_migration_id, operation, type ]`, `[ start_date, end_date, file_migration_id, status, type ]`, `[ start_date, end_date, operation, status, type ]`, `[ start_date, file_migration_id, operation, status, type ]` or `[ end_date, file_migration_id, operation, status, type ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileMigrationLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileMigrationLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileMigrationLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of FileMigrationLogs objects.",
            "x-ms-summary": "A list of FileMigrationLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_migration_logs",
          "File Migration Logs"
        ],
        "description": "List File Migration Logs",
        "operationId": "GetFileMigrationLogs",
        "summary": "List File Migration Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "file_migration_id": {
              "sort": [],
              "type": "exact"
            },
            "operation": {
              "sort": [],
              "type": "pattern"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            },
            "type": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/file_migrations/{id}": {
      "get": {
        "parameters": [
          {
            "description": "File Migration ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "File Migration ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMigrationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileMigrationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileMigrationEntity"
                }
              }
            },
            "description": "The FileMigrations object.",
            "x-ms-summary": "The FileMigrations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "file_migrations",
          "File Migrations"
        ],
        "description": "Show File Migration",
        "operationId": "GetFileMigrationsId",
        "summary": "Show File Migration",
        "x-authentication": [
          "native_app"
        ],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/files/{path}": {
      "delete": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          },
          {
            "description": "If true, will recursively delete folders.  Otherwise, will error on non-empty folders.",
            "in": "query",
            "name": "recursive",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "If true, will recursively delete folders.  Otherwise, will error on non-empty folders."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "files",
          "Files"
        ],
        "description": "Delete File/Folder",
        "operationId": "DeleteFilesPath",
        "summary": "Delete File/Folder",
        "x-authentication": [
          "native_app",
          "office_integration",
          "no_readonly",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      },
      "get": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          },
          {
            "description": "Can be blank, `redirect` or `stat`.  If set to `stat`, we will return file information but without a download URL, and without logging a download.  If set to `redirect` we will serve a 302 redirect directly to the file.  This is used for integrations with Zapier, and is not recommended for most integrations.",
            "in": "query",
            "name": "action",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Can be blank, `redirect` or `stat`.  If set to `stat`, we will return file information but without a download URL, and without logging a download.  If set to `redirect` we will serve a 302 redirect directly to the file.  This is used for integrations with Zapier, and is not recommended for most integrations."
          },
          {
            "description": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`.",
            "in": "query",
            "name": "preview_size",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."
          },
          {
            "description": "Include file preview information?",
            "in": "query",
            "name": "with_previews",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include file preview information?"
          },
          {
            "description": "Include file priority color information?",
            "in": "query",
            "name": "with_priority_color",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include file priority color information?"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              }
            },
            "description": "The Files object.",
            "x-ms-summary": "The Files object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "files",
          "Files"
        ],
        "description": "Download File",
        "operationId": "FileDownload",
        "summary": "Download File",
        "x-authentication": [
          "native_app",
          "office_integration",
          "no_readonly",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      },
      "patch": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              }
            },
            "description": "The Files object.",
            "x-ms-summary": "The Files object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "files",
          "Files"
        ],
        "description": "Update File/Folder Metadata",
        "operationId": "PatchFilesPath",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "custom_metadata": {
                    "description": "Custom metadata map of keys and values. Limited to 32 keys, 256 characters per key and 1024 characters per value.",
                    "type": "object"
                  },
                  "priority_color": {
                    "description": "Priority/Bookmark color of file.",
                    "type": "string"
                  },
                  "provided_mtime": {
                    "description": "Modified time of file.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update File/Folder Metadata",
        "x-authentication": [
          "native_app",
          "office_integration",
          "no_readonly"
        ],
        "x-category": [
          "file_system"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              }
            },
            "description": "The Files object.",
            "x-ms-summary": "The Files object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "files",
          "Files"
        ],
        "description": "Upload File",
        "operationId": "PostFilesPath",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "The action to perform.  Can be `append`, `attachment`, `end`, `upload`, `put`, or may not exist",
                    "type": "string"
                  },
                  "etags[etag]": {
                    "description": "etag identifier.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "etags[part]": {
                    "description": "Part number.",
                    "items": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "length": {
                    "description": "Length of file.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "mkdir_parents": {
                    "description": "Create parent directories if they do not exist?",
                    "type": "boolean"
                  },
                  "part": {
                    "description": "Part if uploading a part.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "parts": {
                    "description": "How many parts to fetch?",
                    "format": "int32",
                    "type": "integer"
                  },
                  "provided_mtime": {
                    "description": "User provided modification time.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "ref": {
                    "type": "string"
                  },
                  "restart": {
                    "description": "File byte offset to restart from.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "size": {
                    "description": "Size of file.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "structure": {
                    "description": "If copying folder, copy just the structure?",
                    "type": "string"
                  },
                  "with_rename": {
                    "description": "Allow file rename instead of overwrite?",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Upload File",
        "x-authentication": [
          "native_app",
          "office_integration",
          "inbox",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/folders/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Send cursor to resume an existing list from the point at which you left off.  Get a cursor from an existing list via the X-Files-Cursor-Next header or the X-Files-Cursor-Prev header.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Send cursor to resume an existing list from the point at which you left off.  Get a cursor from an existing list via the X-Files-Cursor-Next header or the X-Files-Cursor-Prev header."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          },
          {
            "description": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`.",
            "in": "query",
            "name": "preview_size",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."
          },
          {
            "description": "Search by field and direction. Valid fields are `path`, `size`, `modified_at_datetime`, `provided_modified_at`.  Valid directions are `asc` and `desc`.  Defaults to `{\"path\":\"asc\"}`.",
            "example": {
              "path": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "Search by field and direction. Valid fields are `path`, `size`, `modified_at_datetime`, `provided_modified_at`.  Valid directions are `asc` and `desc`.  Defaults to `{\"path\":\"asc\"}`."
          },
          {
            "description": "If specified, will search the folders/files list by name. Ignores text before last `/`. This is the same API used by the search bar in the web UI when running 'Search This Folder'.  Search results are a best effort, not real time, and not guaranteed to perfectly match the latest folder listing.  Results may be truncated if more than 1,000 possible matches exist.  This field should only be used for ad-hoc (human) searching, and not as part of an automated process.",
            "example": "some-partial-filename",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "If specified, will search the folders/files list by name. Ignores text before last `/`. This is the same API used by the search bar in the web UI when running 'Search This Folder'.  Search results are a best effort, not real time, and not guaranteed to perfectly match the latest folder listing.  Results may be truncated if more than 1,000 possible matches exist.  This field should only be used for ad-hoc (human) searching, and not as part of an automated process."
          },
          {
            "description": "If provided, the search string in `search` will search for files where this custom metadata key matches the value sent in `search`.  Set this to `*` to allow any metadata key to match the value sent in `search`.",
            "example": "some-metadata-key",
            "in": "query",
            "name": "search_custom_metadata_key",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "If provided, the search string in `search` will search for files where this custom metadata key matches the value sent in `search`.  Set this to `*` to allow any metadata key to match the value sent in `search`."
          },
          {
            "description": "Search entire site?  If set, we will ignore the folder path provided and search the entire site.  This is the same API used by the search bar in the web UI when running 'Search All Files'.  Search results are a best effort, not real time, and not guaranteed to match every file.  This field should only be used for ad-hoc (human) searching, and not as part of an automated process.",
            "in": "query",
            "name": "search_all",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Search entire site?  If set, we will ignore the folder path provided and search the entire site.  This is the same API used by the search bar in the web UI when running 'Search All Files'.  Search results are a best effort, not real time, and not guaranteed to match every file.  This field should only be used for ad-hoc (human) searching, and not as part of an automated process."
          },
          {
            "description": "Include file previews?",
            "in": "query",
            "name": "with_previews",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include file previews?"
          },
          {
            "description": "Include file priority color information?",
            "in": "query",
            "name": "with_priority_color",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include file priority color information?"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Folders objects.",
            "x-ms-summary": "A list of Folders objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "folders",
          "Files"
        ],
        "description": "List Folders by Path",
        "operationId": "FolderListForPath",
        "summary": "List Folders by Path",
        "x-authentication": [
          "native_app",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      },
      "post": {
        "parameters": [
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileEntity"
                }
              }
            },
            "description": "The Folders object.",
            "x-ms-summary": "The Folders object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "folders",
          "Files"
        ],
        "description": "Create Folder",
        "operationId": "PostFoldersPath",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "mkdir_parents": {
                    "description": "Create parent directories if they do not exist?",
                    "type": "boolean"
                  },
                  "provided_mtime": {
                    "description": "User provided modification time.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Folder",
        "x-authentication": [
          "native_app",
          "bundle_allowed"
        ],
        "x-category": [
          "file_system"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/form_field_sets": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormFieldSetEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormFieldSetEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FormFieldSetEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of FormFieldSets objects.",
            "x-ms-summary": "A list of FormFieldSets objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "form_field_sets",
          "Form Field Sets"
        ],
        "description": "List Form Field Sets",
        "operationId": "GetFormFieldSets",
        "summary": "List Form Field Sets",
        "x-authentication": [],
        "x-category": [
          "sharing"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              }
            },
            "description": "The FormFieldSets object.",
            "x-ms-summary": "The FormFieldSets object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "form_field_sets",
          "Form Field Sets"
        ],
        "description": "Create Form Field Set",
        "operationId": "PostFormFieldSets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postFormFieldSets"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/postFormFieldSets"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/postFormFieldSets"
              }
            }
          },
          "required": true
        },
        "summary": "Create Form Field Set",
        "x-authentication": [],
        "x-category": [
          "sharing"
        ]
      }
    },
    "/form_field_sets/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Form Field Set ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Form Field Set ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "form_field_sets",
          "Form Field Sets"
        ],
        "description": "Delete Form Field Set",
        "operationId": "DeleteFormFieldSetsId",
        "summary": "Delete Form Field Set",
        "x-authentication": [],
        "x-category": [
          "sharing"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Form Field Set ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Form Field Set ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              }
            },
            "description": "The FormFieldSets object.",
            "x-ms-summary": "The FormFieldSets object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "form_field_sets",
          "Form Field Sets"
        ],
        "description": "Show Form Field Set",
        "operationId": "GetFormFieldSetsId",
        "summary": "Show Form Field Set",
        "x-authentication": [],
        "x-category": [
          "sharing"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Form Field Set ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Form Field Set ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FormFieldSetEntity"
                }
              }
            },
            "description": "The FormFieldSets object.",
            "x-ms-summary": "The FormFieldSets object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "form_field_sets",
          "Form Field Sets"
        ],
        "description": "Update Form Field Set",
        "operationId": "PatchFormFieldSetsId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchFormFieldSets"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/patchFormFieldSets"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/patchFormFieldSets"
              }
            }
          },
          "required": true
        },
        "summary": "Update Form Field Set",
        "x-authentication": [],
        "x-category": [
          "sharing"
        ]
      }
    },
    "/ftp_action_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `true_path`, `remote_ip`, `session_uuid`, `success`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `true_path`, `remote_ip`, `session_uuid`, `success`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`, `true_path`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`.",
            "example": {
              "path": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`, `true_path`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FtpActionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FtpActionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FtpActionLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of FtpActionLogs objects.",
            "x-ms-summary": "A list of FtpActionLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "ftp_action_logs",
          "FTP Action Logs"
        ],
        "description": "List FTP Action Logs",
        "operationId": "GetFtpActionLogs",
        "summary": "List FTP Action Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "action_type": {
              "sort": [],
              "type": "pattern"
            },
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "path": {
              "sort": [],
              "type": "pattern"
            },
            "remote_ip": {
              "sort": [],
              "type": "exact"
            },
            "session_uuid": {
              "sort": [],
              "type": "exact"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            },
            "success": {
              "sort": [],
              "type": "exact"
            },
            "true_path": {
              "sort": [],
              "type": "pattern"
            },
            "username": {
              "sort": [],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/gpg_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name` and `expires_at`.",
            "example": {
              "name": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name` and `expires_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GpgKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GpgKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GpgKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of GpgKeys objects.",
            "x-ms-summary": "A list of GpgKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "gpg_keys",
          "GPG Keys"
        ],
        "description": "List GPG Keys",
        "operationId": "GetGpgKeys",
        "summary": "List GPG Keys",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "encryption"
        ],
        "x-sortable_columns": [
          "name",
          "expires_at"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              }
            },
            "description": "The GpgKeys object.",
            "x-ms-summary": "The GpgKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "gpg_keys",
          "GPG Keys"
        ],
        "description": "Create GPG Key",
        "operationId": "PostGpgKeys",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Your GPG key name.",
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Your GPG private key.",
                    "type": "string"
                  },
                  "private_key_password": {
                    "description": "Your GPG private key password. Only required for password protected keys.",
                    "type": "string"
                  },
                  "public_key": {
                    "description": "Your GPG public key",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create GPG Key",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "encryption"
        ]
      }
    },
    "/gpg_keys/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Gpg Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Gpg Key ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "gpg_keys",
          "GPG Keys"
        ],
        "description": "Delete GPG Key",
        "operationId": "DeleteGpgKeysId",
        "summary": "Delete GPG Key",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Gpg Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Gpg Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              }
            },
            "description": "The GpgKeys object.",
            "x-ms-summary": "The GpgKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "gpg_keys",
          "GPG Keys"
        ],
        "description": "Show GPG Key",
        "operationId": "GetGpgKeysId",
        "summary": "Show GPG Key",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Gpg Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Gpg Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GpgKeyEntity"
                }
              }
            },
            "description": "The GpgKeys object.",
            "x-ms-summary": "The GpgKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "gpg_keys",
          "GPG Keys"
        ],
        "description": "Update GPG Key",
        "operationId": "PatchGpgKeysId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Your GPG key name.",
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Your GPG private key.",
                    "type": "string"
                  },
                  "private_key_password": {
                    "description": "Your GPG private key password. Only required for password protected keys.",
                    "type": "string"
                  },
                  "public_key": {
                    "description": "Your GPG public key",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update GPG Key",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "encryption"
        ]
      }
    },
    "/group_users": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  If provided, will return group_users of this user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  If provided, will return group_users of this user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Group ID.  If provided, will return group_users of this group.",
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID.  If provided, will return group_users of this group."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of GroupUsers objects.",
            "x-ms-summary": "A list of GroupUsers objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "group_users",
          "Group Users"
        ],
        "description": "List Group Users",
        "operationId": "GetGroupUsers",
        "summary": "List Group Users",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "user/groups",
          "users/:user_id/groups",
          "groups/:group_id/users"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              }
            },
            "description": "The GroupUsers object.",
            "x-ms-summary": "The GroupUsers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "group_users",
          "Group Users"
        ],
        "description": "Create Group User",
        "operationId": "PostGroupUsers",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchGroupUsersId"
        },
        "summary": "Create Group User",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/group_users/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Group User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group User ID."
          },
          {
            "description": "Group ID from which to remove user.",
            "in": "query",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID from which to remove user."
          },
          {
            "description": "User ID to remove from group.",
            "in": "query",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID to remove from group."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "group_users",
          "Group Users"
        ],
        "description": "Delete Group User",
        "operationId": "DeleteGroupUsersId",
        "summary": "Delete Group User",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "groups/:group_id/memberships/:user_id"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Group User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group User ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              }
            },
            "description": "The GroupUsers object.",
            "x-ms-summary": "The GroupUsers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "group_users",
          "Group Users"
        ],
        "description": "Update Group User",
        "operationId": "PatchGroupUsersId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "admin": {
                    "description": "Is the user a group administrator?",
                    "type": "boolean"
                  },
                  "group_id": {
                    "description": "Group ID to add user to.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User ID to add to group.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "group_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Group User",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "groups/:group_id/memberships/:user_id"
        ]
      }
    },
    "/groups": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id` and `name`.",
            "example": {
              "site_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id` and `name`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name`.",
            "example": {
              "name": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`.",
            "example": {
              "name": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`."
          },
          {
            "description": "Comma-separated list of group ids to include in results.",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Comma-separated list of group ids to include in results."
          },
          {
            "description": "Include groups from the parent site.",
            "in": "query",
            "name": "include_parent_site_groups",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include groups from the parent site."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Groups objects.",
            "x-ms-summary": "A list of Groups objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Groups"
        ],
        "description": "List Groups",
        "operationId": "GetGroups",
        "summary": "List Groups",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "name": {
              "sort": [
                "name"
              ],
              "type": "pattern"
            }
          },
          "filter_combinations": []
        },
        "x-included-in-ipaas": true,
        "x-sortable_columns": [
          "site_id",
          "name"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              }
            },
            "description": "The Groups object.",
            "x-ms-summary": "The Groups object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Groups"
        ],
        "description": "Create Group",
        "operationId": "PostGroups",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchGroupsId"
        },
        "summary": "Create Group",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/groups/{group_id}/memberships/{user_id}": {
      "delete": {
        "parameters": [
          {
            "description": "Group ID from which to remove user.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID from which to remove user."
          },
          {
            "description": "User ID to remove from group.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID to remove from group."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Groups"
        ],
        "description": "Delete Group User",
        "operationId": "DeleteGroupsGroupIdMembershipsUserId",
        "summary": "Delete Group User",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "groups/:group_id/memberships/:user_id"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Group ID to add user to.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID to add user to."
          },
          {
            "description": "User ID to add to group.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID to add to group."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUserEntity"
                }
              }
            },
            "description": "The GroupUsers object.",
            "x-ms-summary": "The GroupUsers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Group Users"
        ],
        "description": "Update Group User",
        "operationId": "PatchGroupsGroupIdMembershipsUserId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "admin": {
                    "description": "Is the user a group administrator?",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Group User",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "groups/:group_id/memberships/:user_id"
        ]
      }
    },
    "/groups/{group_id}/permissions": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `group_id`, `path` or `user_id`.",
            "example": {
              "site_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `group_id`, `path` or `user_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `group_id` or `user_id`. Valid field combinations are `[ group_id, path ]`, `[ user_id, path ]` or `[ user_id, group_id ]`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `group_id` or `user_id`. Valid field combinations are `[ group_id, path ]`, `[ user_id, path ]` or `[ user_id, group_id ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
          },
          {
            "description": "Permission path.  If provided, will scope all permissions(including upward) to this path.",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Permission path.  If provided, will scope all permissions(including upward) to this path."
          },
          {
            "description": "If searching by user or group, also include user's permissions that are inherited from its groups?",
            "in": "query",
            "name": "include_groups",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "If searching by user or group, also include user's permissions that are inherited from its groups?"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          },
          {
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Permissions objects.",
            "x-ms-summary": "A list of Permissions objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Permissions"
        ],
        "description": "List Permissions",
        "operationId": "GetGroupsGroupIdPermissions",
        "summary": "List Permissions",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "group_id": {
              "sort": [
                "group_id",
                "path",
                "permission"
              ],
              "type": "exact"
            },
            "path": {
              "sort": [
                "path"
              ],
              "type": "pattern"
            },
            "user_id": {
              "sort": [
                "group_id",
                "path",
                "user_id",
                "permission"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "group_id",
                "path"
              ],
              "sort": [
                "path"
              ]
            },
            {
              "filter": [
                "user_id",
                "path"
              ],
              "sort": [
                "path"
              ]
            },
            {
              "filter": [
                "user_id",
                "group_id"
              ],
              "sort": [
                "group_id",
                "permission"
              ]
            }
          ]
        },
        "x-path_aliases": [
          "groups/:group_id/permissions",
          "users/:user_id/permissions"
        ],
        "x-sortable_columns": [
          "site_id",
          "group_id",
          "path",
          "user_id"
        ]
      }
    },
    "/groups/{group_id}/users": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  If provided, will return group_users of this user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  If provided, will return group_users of this user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Group ID.  If provided, will return group_users of this group.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID.  If provided, will return group_users of this group."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of GroupUsers objects.",
            "x-ms-summary": "A list of GroupUsers objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Group Users"
        ],
        "description": "List Group Users",
        "operationId": "GetGroupsGroupIdUsers",
        "summary": "List Group Users",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "user/groups",
          "users/:user_id/groups",
          "groups/:group_id/users"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "Group ID to associate this user with.",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID to associate this user with."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            },
            "description": "The Users object.",
            "x-ms-summary": "The Users object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Users"
        ],
        "description": "Create User",
        "operationId": "PostGroupsGroupIdUsers",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "allowed_ips": {
                    "description": "A list of allowed IPs if applicable.  Newline delimited",
                    "type": "string"
                  },
                  "announcements_read": {
                    "description": "Signifies that the user has read all the announcements in the UI.",
                    "type": "boolean"
                  },
                  "attachments_permission": {
                    "description": "DEPRECATED: If `true`, the user can user create Bundles (aka Share Links). Use the bundle permission instead.",
                    "type": "boolean"
                  },
                  "authenticate_until": {
                    "description": "Scheduled Date/Time at which user will be deactivated",
                    "format": "date-time",
                    "type": "string"
                  },
                  "authentication_method": {
                    "description": "How is this user authenticated?",
                    "enum": [
                      "password",
                      "sso",
                      "none",
                      "email_signup",
                      "password_with_imported_hash",
                      "password_and_ssh_key"
                    ],
                    "type": "string"
                  },
                  "avatar_delete": {
                    "description": "If true, the avatar will be deleted.",
                    "type": "boolean"
                  },
                  "billing_permission": {
                    "description": "Allow this user to perform operations on the account, payments, and invoices?",
                    "type": "boolean"
                  },
                  "bypass_inactive_disable": {
                    "description": "Exempt this user from being disabled based on inactivity?",
                    "type": "boolean"
                  },
                  "bypass_site_allowed_ips": {
                    "description": "Allow this user to skip site-wide IP blacklists?",
                    "type": "boolean"
                  },
                  "change_password": {
                    "description": "Used for changing a password on an existing user.",
                    "type": "string"
                  },
                  "change_password_confirmation": {
                    "description": "Optional, but if provided, we will ensure that it matches the value sent in `change_password`.",
                    "type": "string"
                  },
                  "company": {
                    "description": "User's company",
                    "type": "string"
                  },
                  "dav_permission": {
                    "description": "Can the user connect with WebDAV?",
                    "type": "boolean"
                  },
                  "disabled": {
                    "description": "Is user disabled? Disabled users cannot log in, and do not count for billing purposes. Users can be automatically disabled after an inactivity period via a Site setting or schedule to be deactivated after specific date.",
                    "type": "boolean"
                  },
                  "email": {
                    "description": "User's email.",
                    "type": "string"
                  },
                  "ftp_permission": {
                    "description": "Can the user access with FTP/FTPS?",
                    "type": "boolean"
                  },
                  "grant_permission": {
                    "description": "Permission to grant on the user root.  Can be blank or `full`, `read`, `write`, `list`, `read+write`, or `list+write`",
                    "type": "string"
                  },
                  "group_ids": {
                    "description": "A list of group ids to associate this user with.  Comma delimited.",
                    "type": "string"
                  },
                  "header_text": {
                    "description": "Text to display to the user in the header of the UI",
                    "type": "string"
                  },
                  "imported_password_hash": {
                    "description": "Pre-calculated hash of the user's password. If supplied, this will be used to authenticate the user on first login. Supported hash methods are MD5, SHA1, and SHA256.",
                    "type": "string"
                  },
                  "language": {
                    "description": "Preferred language",
                    "type": "string"
                  },
                  "name": {
                    "description": "User's full name",
                    "type": "string"
                  },
                  "notes": {
                    "description": "Any internal notes on the user",
                    "type": "string"
                  },
                  "notification_daily_send_time": {
                    "description": "Hour of the day at which daily notifications should be sent. Can be in range 0 to 23",
                    "format": "int32",
                    "type": "integer"
                  },
                  "office_integration_enabled": {
                    "description": "Enable integration with Office for the web?",
                    "type": "boolean"
                  },
                  "password": {
                    "description": "User password.",
                    "type": "string"
                  },
                  "password_confirmation": {
                    "description": "Optional, but if provided, we will ensure that it matches the value sent in `password`.",
                    "type": "string"
                  },
                  "password_validity_days": {
                    "description": "Number of days to allow user to use the same password",
                    "format": "int32",
                    "type": "integer"
                  },
                  "readonly_site_admin": {
                    "description": "Is the user an allowed to view all (non-billing) site configuration for this site?",
                    "type": "boolean"
                  },
                  "receive_admin_alerts": {
                    "description": "Should the user receive admin alerts such a certificate expiration notifications and overages?",
                    "type": "boolean"
                  },
                  "require_2fa": {
                    "description": "2FA required setting",
                    "enum": [
                      "use_system_setting",
                      "always_require",
                      "never_require"
                    ],
                    "type": "string"
                  },
                  "require_login_by": {
                    "description": "Require user to login by specified date otherwise it will be disabled.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "require_password_change": {
                    "description": "Is a password change required upon next user login?",
                    "type": "boolean"
                  },
                  "restapi_permission": {
                    "description": "Can this user access the Web app, Desktop app, SDKs, or REST API?  (All of these tools use the API internally, so this is one unified permission set.)",
                    "type": "boolean"
                  },
                  "self_managed": {
                    "description": "Does this user manage it's own credentials or is it a shared/bot user?",
                    "type": "boolean"
                  },
                  "sftp_permission": {
                    "description": "Can the user access with SFTP?",
                    "type": "boolean"
                  },
                  "site_admin": {
                    "description": "Is the user an administrator for this site?",
                    "type": "boolean"
                  },
                  "skip_welcome_screen": {
                    "description": "Skip Welcome page in the UI?",
                    "type": "boolean"
                  },
                  "ssl_required": {
                    "description": "SSL required setting",
                    "enum": [
                      "use_system_setting",
                      "always_require",
                      "never_require"
                    ],
                    "type": "string"
                  },
                  "sso_strategy_id": {
                    "description": "SSO (Single Sign On) strategy ID for the user, if applicable.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "subscribe_to_newsletter": {
                    "description": "Is the user subscribed to the newsletter?",
                    "type": "boolean"
                  },
                  "time_zone": {
                    "description": "User time zone",
                    "type": "string"
                  },
                  "user_home": {
                    "description": "Home folder for FTP/SFTP.  Note that this is not used for API, Desktop, or Web interface.",
                    "type": "string"
                  },
                  "user_root": {
                    "description": "Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set).  Note that this is not used for API, Desktop, or Web interface.",
                    "type": "string"
                  },
                  "username": {
                    "description": "User's username",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create User",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true,
        "x-path_aliases": [
          "groups/:group_id/users"
        ]
      }
    },
    "/groups/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Group ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Groups"
        ],
        "description": "Delete Group",
        "operationId": "DeleteGroupsId",
        "summary": "Delete Group",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true
      },
      "get": {
        "parameters": [
          {
            "description": "Group ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              }
            },
            "description": "The Groups object.",
            "x-ms-summary": "The Groups object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Groups"
        ],
        "description": "Show Group",
        "operationId": "GetGroupsId",
        "summary": "Show Group",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true
      },
      "patch": {
        "parameters": [
          {
            "description": "Group ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntity"
                }
              }
            },
            "description": "The Groups object.",
            "x-ms-summary": "The Groups object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "groups",
          "Groups"
        ],
        "description": "Update Group",
        "operationId": "PatchGroupsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "admin_ids": {
                    "description": "A list of group admin user ids. If sent as a string, should be comma-delimited.",
                    "type": "string"
                  },
                  "allowed_ips": {
                    "description": "A list of allowed IPs if applicable.  Newline delimited",
                    "type": "string"
                  },
                  "dav_permission": {
                    "description": "If true, users in this group can use WebDAV to login.  This will override a false value of `dav_permission` on the user level.",
                    "type": "boolean"
                  },
                  "ftp_permission": {
                    "description": "If true, users in this group can use FTP to login.  This will override a false value of `ftp_permission` on the user level.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Group name.",
                    "type": "string"
                  },
                  "notes": {
                    "description": "Group notes.",
                    "type": "string"
                  },
                  "restapi_permission": {
                    "description": "If true, users in this group can use the REST API to login.  This will override a false value of `restapi_permission` on the user level.",
                    "type": "boolean"
                  },
                  "sftp_permission": {
                    "description": "If true, users in this group can use SFTP to login.  This will override a false value of `sftp_permission` on the user level.",
                    "type": "boolean"
                  },
                  "user_ids": {
                    "description": "A list of user ids. If sent as a string, should be comma-delimited.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Group",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true
      }
    },
    "/history": {
      "get": {
        "parameters": [
          {
            "description": "Leave blank or set to a date/time to filter earlier entries.",
            "in": "query",
            "name": "start_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter earlier entries."
          },
          {
            "description": "Leave blank or set to a date/time to filter later entries.",
            "in": "query",
            "name": "end_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter later entries."
          },
          {
            "description": "Display format. Leave blank or set to `full` or `parent`.",
            "in": "query",
            "name": "display",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Display format. Leave blank or set to `full` or `parent`."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `user_id`, `folder` or `path`. Valid field combinations are `[  ]`, `[ path ]`, `[ path ]` or `[ path ]`.",
            "example": {
              "user_id": "1"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `user_id`, `folder` or `path`. Valid field combinations are `[  ]`, `[ path ]`, `[ path ]` or `[ path ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of History objects.",
            "x-ms-summary": "A list of History objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history",
          "Actions"
        ],
        "description": "List site full action history.",
        "operationId": "HistoryList",
        "summary": "List site full action history.",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "folder": {
              "sort": [
                "created_at"
              ],
              "type": "exact"
            },
            "path": {
              "sort": [
                "created_at"
              ],
              "type": "pattern"
            },
            "user_id": {
              "sort": [
                "created_at"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "path"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "path"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "path"
              ],
              "sort": [
                "created_at"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/history/files/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Leave blank or set to a date/time to filter earlier entries.",
            "in": "query",
            "name": "start_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter earlier entries."
          },
          {
            "description": "Leave blank or set to a date/time to filter later entries.",
            "in": "query",
            "name": "end_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter later entries."
          },
          {
            "description": "Display format. Leave blank or set to `full` or `parent`.",
            "in": "query",
            "name": "display",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Display format. Leave blank or set to `full` or `parent`."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of History objects.",
            "x-ms-summary": "A list of History objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history",
          "Actions"
        ],
        "description": "List history for specific file.",
        "operationId": "HistoryListForFile",
        "summary": "List history for specific file.",
        "x-authentication": [],
        "x-category": [
          "logging"
        ],
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/history/folders/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Leave blank or set to a date/time to filter earlier entries.",
            "in": "query",
            "name": "start_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter earlier entries."
          },
          {
            "description": "Leave blank or set to a date/time to filter later entries.",
            "in": "query",
            "name": "end_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter later entries."
          },
          {
            "description": "Display format. Leave blank or set to `full` or `parent`.",
            "in": "query",
            "name": "display",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Display format. Leave blank or set to `full` or `parent`."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of History objects.",
            "x-ms-summary": "A list of History objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history",
          "Actions"
        ],
        "description": "List history for specific folder.",
        "operationId": "HistoryListForFolder",
        "summary": "List history for specific folder.",
        "x-authentication": [],
        "x-category": [
          "logging"
        ],
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/history/login": {
      "get": {
        "parameters": [
          {
            "description": "Leave blank or set to a date/time to filter earlier entries.",
            "in": "query",
            "name": "start_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter earlier entries."
          },
          {
            "description": "Leave blank or set to a date/time to filter later entries.",
            "in": "query",
            "name": "end_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter later entries."
          },
          {
            "description": "Display format. Leave blank or set to `full` or `parent`.",
            "in": "query",
            "name": "display",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Display format. Leave blank or set to `full` or `parent`."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of History objects.",
            "x-ms-summary": "A list of History objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history",
          "Actions"
        ],
        "description": "List site login history.",
        "operationId": "HistoryListLogins",
        "summary": "List site login history.",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/history/users/{user_id}": {
      "get": {
        "parameters": [
          {
            "description": "Leave blank or set to a date/time to filter earlier entries.",
            "in": "query",
            "name": "start_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter earlier entries."
          },
          {
            "description": "Leave blank or set to a date/time to filter later entries.",
            "in": "query",
            "name": "end_at",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-ms-summary": "Leave blank or set to a date/time to filter later entries."
          },
          {
            "description": "Display format. Leave blank or set to `full` or `parent`.",
            "in": "query",
            "name": "display",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Display format. Leave blank or set to `full` or `parent`."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "User ID.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of History objects.",
            "x-ms-summary": "A list of History objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history",
          "Actions"
        ],
        "description": "List history for specific user.",
        "operationId": "HistoryListForUser",
        "summary": "List history for specific user.",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/history_export_results": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "ID of the associated history export.",
            "in": "query",
            "name": "history_export_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "ID of the associated history export."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HistoryExportResultEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HistoryExportResultEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HistoryExportResultEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of HistoryExportResults objects.",
            "x-ms-summary": "A list of HistoryExportResults objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history_export_results",
          "History Export Results"
        ],
        "description": "List History Export Results",
        "operationId": "GetHistoryExportResults",
        "summary": "List History Export Results",
        "x-authentication": [],
        "x-category": [
          "logging"
        ]
      }
    },
    "/history_exports": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryExportEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryExportEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryExportEntity"
                }
              }
            },
            "description": "The HistoryExports object.",
            "x-ms-summary": "The HistoryExports object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history_exports",
          "History Exports"
        ],
        "description": "Create History Export",
        "operationId": "PostHistoryExports",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "end_at": {
                    "description": "End date/time of export range.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "query_action": {
                    "description": "Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`",
                    "type": "string"
                  },
                  "query_destination": {
                    "description": "Return results that are file moves with paths matching this pattern as destination.",
                    "type": "string"
                  },
                  "query_failure_type": {
                    "description": "If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`, `insecure_ftp`, `insecure_cipher`, `rate_limited`",
                    "type": "string"
                  },
                  "query_file_id": {
                    "description": "Return results that are file actions related to the file indicated by this File ID",
                    "type": "string"
                  },
                  "query_folder": {
                    "description": "Return results that are file actions related to files or folders inside folder paths matching this pattern.",
                    "type": "string"
                  },
                  "query_interface": {
                    "description": "Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`",
                    "type": "string"
                  },
                  "query_ip": {
                    "description": "Filter results by this IP address.",
                    "type": "string"
                  },
                  "query_parent_id": {
                    "description": "Return results that are file actions inside the parent folder specified by this folder ID",
                    "type": "string"
                  },
                  "query_path": {
                    "description": "Return results that are file actions related to paths matching this pattern.",
                    "type": "string"
                  },
                  "query_src": {
                    "description": "Return results that are file moves originating from paths matching this pattern.",
                    "type": "string"
                  },
                  "query_target_id": {
                    "description": "If searching for Histories about specific objects (such as Users, or API Keys), this parameter restricts results to objects that match this ID.",
                    "type": "string"
                  },
                  "query_target_name": {
                    "description": "If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.",
                    "type": "string"
                  },
                  "query_target_permission": {
                    "description": "If searching for Histories about Permissions, this parameter restricts results to permissions of this level.",
                    "type": "string"
                  },
                  "query_target_permission_set": {
                    "description": "If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.",
                    "type": "string"
                  },
                  "query_target_platform": {
                    "description": "If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.",
                    "type": "string"
                  },
                  "query_target_user_id": {
                    "description": "If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.",
                    "type": "string"
                  },
                  "query_target_username": {
                    "description": "If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.",
                    "type": "string"
                  },
                  "query_user_id": {
                    "description": "Return results that are actions performed by the user indicated by this User ID",
                    "type": "string"
                  },
                  "query_username": {
                    "description": "Filter results by this username.",
                    "type": "string"
                  },
                  "start_at": {
                    "description": "Start date/time of export range.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create History Export",
        "x-authentication": [
          "readonly_ok"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/history_exports/{id}": {
      "get": {
        "parameters": [
          {
            "description": "History Export ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "History Export ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryExportEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryExportEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryExportEntity"
                }
              }
            },
            "description": "The HistoryExports object.",
            "x-ms-summary": "The HistoryExports object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "history_exports",
          "History Exports"
        ],
        "description": "Show History Export",
        "operationId": "GetHistoryExportsId",
        "summary": "Show History Export",
        "x-authentication": [
          "readonly_ok"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/inbox_recipients": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `has_registrations`.",
            "example": {
              "has_registrations": "true"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `has_registrations`."
          },
          {
            "description": "List recipients for the inbox with this ID.",
            "in": "query",
            "name": "inbox_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "List recipients for the inbox with this ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxRecipientEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxRecipientEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxRecipientEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of InboxRecipients objects.",
            "x-ms-summary": "A list of InboxRecipients objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "inbox_recipients",
          "Inbox Recipients"
        ],
        "description": "List Inbox Recipients",
        "operationId": "GetInboxRecipients",
        "summary": "List Inbox Recipients",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "inboxes"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "has_registrations": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": []
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxRecipientEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/InboxRecipientEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InboxRecipientEntity"
                }
              }
            },
            "description": "The InboxRecipients object.",
            "x-ms-summary": "The InboxRecipients object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "inbox_recipients",
          "Inbox Recipients"
        ],
        "description": "Create Inbox Recipient",
        "operationId": "PostInboxRecipients",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "company": {
                    "description": "Company of recipient.",
                    "type": "string"
                  },
                  "inbox_id": {
                    "description": "Inbox to share.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of recipient.",
                    "type": "string"
                  },
                  "note": {
                    "description": "Note to include in email.",
                    "type": "string"
                  },
                  "recipient": {
                    "description": "Email address to share this inbox with.",
                    "type": "string"
                  },
                  "share_after_create": {
                    "description": "Set to true to share the link with the recipient upon creation.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "inbox_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Inbox Recipient",
        "x-authentication": [],
        "x-category": [
          "sharing",
          "inboxes"
        ]
      }
    },
    "/inbox_registrations": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "ID of the associated Inbox.",
            "in": "query",
            "name": "folder_behavior_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "ID of the associated Inbox."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxRegistrationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxRegistrationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxRegistrationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of InboxRegistrations objects.",
            "x-ms-summary": "A list of InboxRegistrations objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "inbox_registrations",
          "Inbox Registrations"
        ],
        "description": "List Inbox Registrations",
        "operationId": "GetInboxRegistrations",
        "summary": "List Inbox Registrations",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "sharing",
          "inboxes"
        ]
      }
    },
    "/inbox_uploads": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `folder_behavior_id` or `inbox_registration_id`. Valid field combinations are `[ folder_behavior_id, created_at ]`, `[ inbox_registration_id, created_at ]`, `[ folder_behavior_id, inbox_registration_id ]` or `[ folder_behavior_id, inbox_registration_id, created_at ]`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `folder_behavior_id` or `inbox_registration_id`. Valid field combinations are `[ folder_behavior_id, created_at ]`, `[ inbox_registration_id, created_at ]`, `[ folder_behavior_id, inbox_registration_id ]` or `[ folder_behavior_id, inbox_registration_id, created_at ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`.",
            "example": {
              "created_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxUploadEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxUploadEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InboxUploadEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of InboxUploads objects.",
            "x-ms-summary": "A list of InboxUploads objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "inbox_uploads",
          "Inbox Uploads"
        ],
        "description": "List Inbox Uploads",
        "operationId": "GetInboxUploads",
        "summary": "List Inbox Uploads",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "sharing",
          "inboxes"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "created_at": {
              "sort": [
                "created_at"
              ],
              "type": "range"
            },
            "folder_behavior_id": {
              "sort": [
                "created_at"
              ],
              "type": "exact"
            },
            "inbox_registration_id": {
              "sort": [
                "created_at"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "folder_behavior_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "inbox_registration_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "folder_behavior_id",
                "inbox_registration_id"
              ],
              "sort": [
                "created_at"
              ]
            },
            {
              "filter": [
                "folder_behavior_id",
                "inbox_registration_id",
                "created_at"
              ],
              "sort": [
                "created_at"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "created_at"
        ]
      }
    },
    "/invoices": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountLineItemEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountLineItemEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountLineItemEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Invoices objects.",
            "x-ms-summary": "A list of Invoices objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "invoices",
          "Account Line Items"
        ],
        "description": "List Invoices",
        "operationId": "GetInvoices",
        "summary": "List Invoices",
        "x-authentication": [
          "overdue_ok",
          "billing"
        ],
        "x-category": [
          "billing"
        ]
      }
    },
    "/invoices/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Invoice ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Invoice ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLineItemEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLineItemEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLineItemEntity"
                }
              }
            },
            "description": "The Invoices object.",
            "x-ms-summary": "The Invoices object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "invoices",
          "Account Line Items"
        ],
        "description": "Show Invoice",
        "operationId": "GetInvoicesId",
        "summary": "Show Invoice",
        "x-authentication": [
          "overdue_ok",
          "billing"
        ],
        "x-category": [
          "billing"
        ]
      }
    },
    "/ip_addresses": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IpAddressEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of IpAddresses objects.",
            "x-ms-summary": "A list of IpAddresses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "ip_addresses",
          "IP Addresses"
        ],
        "description": "List IP Addresses associated with the current site",
        "operationId": "GetIpAddresses",
        "summary": "List IP Addresses associated with the current site",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "security"
        ],
        "x-path_aliases": [
          "site/ip_addresses"
        ]
      }
    },
    "/ip_addresses/exavault-reserved": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of IpAddresses objects.",
            "x-ms-summary": "A list of IpAddresses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "ip_addresses",
          "Public IP Addresses"
        ],
        "description": "List all possible public ExaVault IP addresses",
        "operationId": "GetIpAddressesExavaultReserved",
        "summary": "List all possible public ExaVault IP addresses",
        "x-authentication": [
          "none"
        ],
        "x-category": [
          "security"
        ]
      }
    },
    "/ip_addresses/reserved": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of IpAddresses objects.",
            "x-ms-summary": "A list of IpAddresses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "ip_addresses",
          "Public IP Addresses"
        ],
        "description": "List all possible public IP addresses",
        "operationId": "GetIpAddressesReserved",
        "summary": "List all possible public IP addresses",
        "x-authentication": [
          "none"
        ],
        "x-category": [
          "security"
        ]
      }
    },
    "/ip_addresses/smartfile-reserved": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicIpAddressEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of IpAddresses objects.",
            "x-ms-summary": "A list of IpAddresses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "ip_addresses",
          "Public IP Addresses"
        ],
        "description": "List all possible public SmartFile IP addresses",
        "operationId": "GetIpAddressesSmartfileReserved",
        "summary": "List all possible public SmartFile IP addresses",
        "x-authentication": [
          "none"
        ],
        "x-category": [
          "security"
        ]
      }
    },
    "/locks/{path}": {
      "delete": {
        "parameters": [
          {
            "description": "Path",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path"
          },
          {
            "description": "Lock token",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Lock token"
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "locks",
          "Locks"
        ],
        "description": "Delete Lock",
        "operationId": "DeleteLocksPath",
        "summary": "Delete Lock",
        "x-authentication": [
          "native_app",
          "bundle_through_trusted_relay",
          "office_integration"
        ],
        "x-category": [
          "file_system"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Path to operate on.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to operate on."
          },
          {
            "description": "Include locks from children objects?",
            "in": "query",
            "name": "include_children",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include locks from children objects?"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LockEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LockEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LockEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Locks objects.",
            "x-ms-summary": "A list of Locks objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "locks",
          "Locks"
        ],
        "description": "List Locks by Path",
        "operationId": "LockListForPath",
        "summary": "List Locks by Path",
        "x-authentication": [
          "native_app",
          "bundle_through_trusted_relay",
          "office_integration"
        ],
        "x-category": [
          "file_system"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "Path",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/LockEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LockEntity"
                }
              }
            },
            "description": "The Locks object.",
            "x-ms-summary": "The Locks object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "locks",
          "Locks"
        ],
        "description": "Create Lock",
        "operationId": "PostLocksPath",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "allow_access_by_any_user": {
                    "description": "Can lock be modified by users other than its creator?",
                    "type": "boolean"
                  },
                  "exclusive": {
                    "description": "Is lock exclusive?",
                    "type": "boolean"
                  },
                  "recursive": {
                    "description": "Does lock apply to subfolders?",
                    "type": "boolean"
                  },
                  "timeout": {
                    "description": "Lock timeout in seconds",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Lock",
        "x-authentication": [
          "native_app",
          "bundle_through_trusted_relay",
          "office_integration"
        ],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/message_comment_reactions": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          },
          {
            "description": "Message comment to return reactions for.",
            "in": "query",
            "name": "message_comment_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message comment to return reactions for."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageCommentReactionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageCommentReactionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageCommentReactionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of MessageCommentReactions objects.",
            "x-ms-summary": "A list of MessageCommentReactions objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comment_reactions",
          "Message Comment Reactions"
        ],
        "description": "List Message Comment Reactions",
        "operationId": "GetMessageCommentReactions",
        "summary": "List Message Comment Reactions",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ],
        "x-sortable_columns": []
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentReactionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentReactionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentReactionEntity"
                }
              }
            },
            "description": "The MessageCommentReactions object.",
            "x-ms-summary": "The MessageCommentReactions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comment_reactions",
          "Message Comment Reactions"
        ],
        "description": "Create Message Comment Reaction",
        "operationId": "PostMessageCommentReactions",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostMessageCommentReactions"
        },
        "summary": "Create Message Comment Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/message_comment_reactions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Message Comment Reaction ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Comment Reaction ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comment_reactions",
          "Message Comment Reactions"
        ],
        "description": "Delete Message Comment Reaction",
        "operationId": "DeleteMessageCommentReactionsId",
        "summary": "Delete Message Comment Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Message Comment Reaction ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Comment Reaction ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentReactionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentReactionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentReactionEntity"
                }
              }
            },
            "description": "The MessageCommentReactions object.",
            "x-ms-summary": "The MessageCommentReactions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comment_reactions",
          "Message Comment Reactions"
        ],
        "description": "Show Message Comment Reaction",
        "operationId": "GetMessageCommentReactionsId",
        "summary": "Show Message Comment Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/message_comments": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          },
          {
            "description": "Message comment to return comments for.",
            "in": "query",
            "name": "message_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message comment to return comments for."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageCommentEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageCommentEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageCommentEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of MessageComments objects.",
            "x-ms-summary": "A list of MessageComments objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comments",
          "Message Comments"
        ],
        "description": "List Message Comments",
        "operationId": "GetMessageComments",
        "summary": "List Message Comments",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ],
        "x-sortable_columns": []
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              }
            },
            "description": "The MessageComments object.",
            "x-ms-summary": "The MessageComments object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comments",
          "Message Comments"
        ],
        "description": "Create Message Comment",
        "operationId": "PostMessageComments",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Comment body.",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Message Comment",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/message_comments/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Message Comment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Comment ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comments",
          "Message Comments"
        ],
        "description": "Delete Message Comment",
        "operationId": "DeleteMessageCommentsId",
        "summary": "Delete Message Comment",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Message Comment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Comment ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              }
            },
            "description": "The MessageComments object.",
            "x-ms-summary": "The MessageComments object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comments",
          "Message Comments"
        ],
        "description": "Show Message Comment",
        "operationId": "GetMessageCommentsId",
        "summary": "Show Message Comment",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Message Comment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Comment ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCommentEntity"
                }
              }
            },
            "description": "The MessageComments object.",
            "x-ms-summary": "The MessageComments object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_comments",
          "Message Comments"
        ],
        "description": "Update Message Comment",
        "operationId": "PatchMessageCommentsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Comment body.",
                    "type": "string"
                  }
                },
                "required": [
                  "body"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Message Comment",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/message_reactions": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Message to return reactions for.",
            "in": "query",
            "name": "message_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message to return reactions for."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageReactionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageReactionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageReactionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of MessageReactions objects.",
            "x-ms-summary": "A list of MessageReactions objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_reactions",
          "Message Reactions"
        ],
        "description": "List Message Reactions",
        "operationId": "GetMessageReactions",
        "summary": "List Message Reactions",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReactionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReactionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReactionEntity"
                }
              }
            },
            "description": "The MessageReactions object.",
            "x-ms-summary": "The MessageReactions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_reactions",
          "Message Reactions"
        ],
        "description": "Create Message Reaction",
        "operationId": "PostMessageReactions",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostMessageCommentReactions"
        },
        "summary": "Create Message Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/message_reactions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Message Reaction ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Reaction ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_reactions",
          "Message Reactions"
        ],
        "description": "Delete Message Reaction",
        "operationId": "DeleteMessageReactionsId",
        "summary": "Delete Message Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Message Reaction ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message Reaction ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReactionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReactionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageReactionEntity"
                }
              }
            },
            "description": "The MessageReactions object.",
            "x-ms-summary": "The MessageReactions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "message_reactions",
          "Message Reactions"
        ],
        "description": "Show Message Reaction",
        "operationId": "GetMessageReactionsId",
        "summary": "Show Message Reaction",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/messages": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Project for which to return messages.",
            "in": "query",
            "name": "project_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Project for which to return messages."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MessageEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Messages objects.",
            "x-ms-summary": "A list of Messages objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "messages",
          "Messages"
        ],
        "description": "List Messages",
        "operationId": "GetMessages",
        "summary": "List Messages",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              }
            },
            "description": "The Messages object.",
            "x-ms-summary": "The Messages object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "messages",
          "Messages"
        ],
        "description": "Create Message",
        "operationId": "PostMessages",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Message body.",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project to which the message should be attached.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "subject": {
                    "description": "Message subject.",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Message",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/messages/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Message ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "messages",
          "Messages"
        ],
        "description": "Delete Message",
        "operationId": "DeleteMessagesId",
        "summary": "Delete Message",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Message ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              }
            },
            "description": "The Messages object.",
            "x-ms-summary": "The Messages object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "messages",
          "Messages"
        ],
        "description": "Show Message",
        "operationId": "GetMessagesId",
        "summary": "Show Message",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Message ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Message ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEntity"
                }
              }
            },
            "description": "The Messages object.",
            "x-ms-summary": "The Messages object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "messages",
          "Messages"
        ],
        "description": "Update Message",
        "operationId": "PatchMessagesId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "Message body.",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "Project to which the message should be attached.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "subject": {
                    "description": "Message subject.",
                    "type": "string"
                  }
                },
                "required": [
                  "project_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Message",
        "x-authentication": [],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/notifications": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `path`, `user_id` or `group_id`.",
            "example": {
              "path": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `path`, `user_id` or `group_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `user_id` or `group_id`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `user_id` or `group_id`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
          },
          {
            "description": "Show notifications for this Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Show notifications for this Path."
          },
          {
            "description": "If `include_ancestors` is `true` and `path` is specified, include notifications for any parent paths. Ignored if `path` is not specified.",
            "in": "query",
            "name": "include_ancestors",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "If `include_ancestors` is `true` and `path` is specified, include notifications for any parent paths. Ignored if `path` is not specified."
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Notifications objects.",
            "x-ms-summary": "A list of Notifications objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "notifications",
          "Notifications"
        ],
        "description": "List Notifications",
        "operationId": "GetNotifications",
        "summary": "List Notifications",
        "x-authentication": [],
        "x-category": [
          "notifications"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "group_id": {
              "sort": [
                "group_id"
              ],
              "type": "exact"
            },
            "path": {
              "sort": [
                "path"
              ],
              "type": "pattern"
            },
            "user_id": {
              "sort": [
                "user_id"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "path",
          "user_id",
          "group_id"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              }
            },
            "description": "The Notifications object.",
            "x-ms-summary": "The Notifications object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "notifications",
          "Notifications"
        ],
        "description": "Create Notification",
        "operationId": "PostNotifications",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "group_id": {
                    "description": "The ID of the group to notify.  Provide `user_id`, `username` or `group_id`.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "message": {
                    "description": "Custom message to include in notification emails",
                    "type": "string"
                  },
                  "notify_on_copy": {
                    "description": "If `true`, copying or moving resources into this path will trigger a notification, in addition to just uploads.",
                    "type": "boolean"
                  },
                  "notify_on_delete": {
                    "description": "Trigger on files deleted in this path?",
                    "type": "boolean"
                  },
                  "notify_on_download": {
                    "description": "Trigger on files downloaded in this path?",
                    "type": "boolean"
                  },
                  "notify_on_move": {
                    "description": "Trigger on files moved to this path?",
                    "type": "boolean"
                  },
                  "notify_on_upload": {
                    "description": "Trigger on files created/uploaded/updated/changed in this path?",
                    "type": "boolean"
                  },
                  "notify_user_actions": {
                    "description": "If `true` actions initiated by the user will still result in a notification",
                    "type": "boolean"
                  },
                  "path": {
                    "description": "Path",
                    "type": "string"
                  },
                  "recursive": {
                    "description": "If `true`, enable notifications for each subfolder in this path",
                    "type": "boolean"
                  },
                  "send_interval": {
                    "description": "The time interval that notifications are aggregated by.  Can be `five_minutes`, `fifteen_minutes`, `hourly`, or `daily`.",
                    "type": "string"
                  },
                  "trigger_by_share_recipients": {
                    "description": "Notify when actions are performed by a share recipient?",
                    "type": "boolean"
                  },
                  "triggering_filenames": {
                    "description": "Array of filenames (possibly with wildcards) to scope trigger",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "triggering_group_ids": {
                    "description": "If set, will only notify on actions made by a member of one of the specified groups",
                    "items": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "triggering_user_ids": {
                    "description": "If set, will only notify on actions made one of the specified users",
                    "items": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "user_id": {
                    "description": "The id of the user to notify. Provide `user_id`, `username` or `group_id`.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "username": {
                    "description": "The username of the user to notify.  Provide `user_id`, `username` or `group_id`.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Notification",
        "x-authentication": [],
        "x-category": [
          "notifications"
        ]
      }
    },
    "/notifications/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Notification ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Notification ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "notifications",
          "Notifications"
        ],
        "description": "Delete Notification",
        "operationId": "DeleteNotificationsId",
        "summary": "Delete Notification",
        "x-authentication": [],
        "x-category": [
          "notifications"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Notification ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Notification ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              }
            },
            "description": "The Notifications object.",
            "x-ms-summary": "The Notifications object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "notifications",
          "Notifications"
        ],
        "description": "Show Notification",
        "operationId": "GetNotificationsId",
        "summary": "Show Notification",
        "x-authentication": [],
        "x-category": [
          "notifications"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Notification ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Notification ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationEntity"
                }
              }
            },
            "description": "The Notifications object.",
            "x-ms-summary": "The Notifications object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "notifications",
          "Notifications"
        ],
        "description": "Update Notification",
        "operationId": "PatchNotificationsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "message": {
                    "description": "Custom message to include in notification emails",
                    "type": "string"
                  },
                  "notify_on_copy": {
                    "description": "If `true`, copying or moving resources into this path will trigger a notification, in addition to just uploads.",
                    "type": "boolean"
                  },
                  "notify_on_delete": {
                    "description": "Trigger on files deleted in this path?",
                    "type": "boolean"
                  },
                  "notify_on_download": {
                    "description": "Trigger on files downloaded in this path?",
                    "type": "boolean"
                  },
                  "notify_on_move": {
                    "description": "Trigger on files moved to this path?",
                    "type": "boolean"
                  },
                  "notify_on_upload": {
                    "description": "Trigger on files created/uploaded/updated/changed in this path?",
                    "type": "boolean"
                  },
                  "notify_user_actions": {
                    "description": "If `true` actions initiated by the user will still result in a notification",
                    "type": "boolean"
                  },
                  "recursive": {
                    "description": "If `true`, enable notifications for each subfolder in this path",
                    "type": "boolean"
                  },
                  "send_interval": {
                    "description": "The time interval that notifications are aggregated by.  Can be `five_minutes`, `fifteen_minutes`, `hourly`, or `daily`.",
                    "type": "string"
                  },
                  "trigger_by_share_recipients": {
                    "description": "Notify when actions are performed by a share recipient?",
                    "type": "boolean"
                  },
                  "triggering_filenames": {
                    "description": "Array of filenames (possibly with wildcards) to scope trigger",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "triggering_group_ids": {
                    "description": "If set, will only notify on actions made by a member of one of the specified groups",
                    "items": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "triggering_user_ids": {
                    "description": "If set, will only notify on actions made one of the specified users",
                    "items": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Notification",
        "x-authentication": [],
        "x-category": [
          "notifications"
        ]
      }
    },
    "/outbound_connection_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `operation`, `status`, `src_remote_server_id`, `dest_remote_server_id`, `path` or `client_ip`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ operation ]`, `[ status ]`, `[ src_remote_server_id ]`, `[ dest_remote_server_id ]`, `[ path ]`, `[ client_ip ]`, `[ start_date, end_date ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, src_remote_server_id ]`, `[ start_date, dest_remote_server_id ]`, `[ start_date, path ]`, `[ start_date, client_ip ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, src_remote_server_id ]`, `[ end_date, dest_remote_server_id ]`, `[ end_date, path ]`, `[ end_date, client_ip ]`, `[ operation, status ]`, `[ operation, src_remote_server_id ]`, `[ operation, dest_remote_server_id ]`, `[ operation, path ]`, `[ operation, client_ip ]`, `[ status, src_remote_server_id ]`, `[ status, dest_remote_server_id ]`, `[ status, path ]`, `[ status, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id ]`, `[ src_remote_server_id, path ]`, `[ src_remote_server_id, client_ip ]`, `[ dest_remote_server_id, path ]`, `[ dest_remote_server_id, client_ip ]`, `[ path, client_ip ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, src_remote_server_id ]`, `[ start_date, end_date, dest_remote_server_id ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, client_ip ]`, `[ start_date, operation, status ]`, `[ start_date, operation, src_remote_server_id ]`, `[ start_date, operation, dest_remote_server_id ]`, `[ start_date, operation, path ]`, `[ start_date, operation, client_ip ]`, `[ start_date, status, src_remote_server_id ]`, `[ start_date, status, dest_remote_server_id ]`, `[ start_date, status, path ]`, `[ start_date, status, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, src_remote_server_id, path ]`, `[ start_date, src_remote_server_id, client_ip ]`, `[ start_date, dest_remote_server_id, path ]`, `[ start_date, dest_remote_server_id, client_ip ]`, `[ start_date, path, client_ip ]`, `[ end_date, operation, status ]`, `[ end_date, operation, src_remote_server_id ]`, `[ end_date, operation, dest_remote_server_id ]`, `[ end_date, operation, path ]`, `[ end_date, operation, client_ip ]`, `[ end_date, status, src_remote_server_id ]`, `[ end_date, status, dest_remote_server_id ]`, `[ end_date, status, path ]`, `[ end_date, status, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, src_remote_server_id, path ]`, `[ end_date, src_remote_server_id, client_ip ]`, `[ end_date, dest_remote_server_id, path ]`, `[ end_date, dest_remote_server_id, client_ip ]`, `[ end_date, path, client_ip ]`, `[ operation, status, src_remote_server_id ]`, `[ operation, status, dest_remote_server_id ]`, `[ operation, status, path ]`, `[ operation, status, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id ]`, `[ operation, src_remote_server_id, path ]`, `[ operation, src_remote_server_id, client_ip ]`, `[ operation, dest_remote_server_id, path ]`, `[ operation, dest_remote_server_id, client_ip ]`, `[ operation, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id ]`, `[ status, src_remote_server_id, path ]`, `[ status, src_remote_server_id, client_ip ]`, `[ status, dest_remote_server_id, path ]`, `[ status, dest_remote_server_id, client_ip ]`, `[ status, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path ]`, `[ src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ src_remote_server_id, path, client_ip ]`, `[ dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, src_remote_server_id ]`, `[ start_date, end_date, operation, dest_remote_server_id ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id ]`, `[ start_date, end_date, status, dest_remote_server_id ]`, `[ start_date, end_date, status, path ]`, `[ start_date, end_date, status, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, src_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path ]`, `[ start_date, end_date, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id ]`, `[ start_date, operation, status, dest_remote_server_id ]`, `[ start_date, operation, status, path ]`, `[ start_date, operation, status, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, src_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path ]`, `[ start_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, operation, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, status, src_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, client_ip ]`, `[ start_date, status, dest_remote_server_id, path ]`, `[ start_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, status, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, src_remote_server_id, path, client_ip ]`, `[ start_date, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id ]`, `[ end_date, operation, status, dest_remote_server_id ]`, `[ end_date, operation, status, path ]`, `[ end_date, operation, status, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, src_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path ]`, `[ end_date, operation, dest_remote_server_id, client_ip ]`, `[ end_date, operation, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, status, src_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, client_ip ]`, `[ end_date, status, dest_remote_server_id, path ]`, `[ end_date, status, dest_remote_server_id, client_ip ]`, `[ end_date, status, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, src_remote_server_id, path, client_ip ]`, `[ end_date, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ operation, status, src_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, client_ip ]`, `[ operation, status, dest_remote_server_id, path ]`, `[ operation, status, dest_remote_server_id, client_ip ]`, `[ operation, status, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, src_remote_server_id, path, client_ip ]`, `[ operation, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path ]`, `[ status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ status, src_remote_server_id, path, client_ip ]`, `[ status, dest_remote_server_id, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id ]`, `[ start_date, end_date, operation, status, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, path ]`, `[ start_date, end_date, operation, status, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, src_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, status, src_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path ]`, `[ start_date, end_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, status, src_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, status, src_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path ]`, `[ end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, status, src_remote_server_id, path, client_ip ]`, `[ end_date, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, status, src_remote_server_id, path, client_ip ]`, `[ operation, status, dest_remote_server_id, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]` or `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `operation`, `status`, `src_remote_server_id`, `dest_remote_server_id`, `path` or `client_ip`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ operation ]`, `[ status ]`, `[ src_remote_server_id ]`, `[ dest_remote_server_id ]`, `[ path ]`, `[ client_ip ]`, `[ start_date, end_date ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, src_remote_server_id ]`, `[ start_date, dest_remote_server_id ]`, `[ start_date, path ]`, `[ start_date, client_ip ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, src_remote_server_id ]`, `[ end_date, dest_remote_server_id ]`, `[ end_date, path ]`, `[ end_date, client_ip ]`, `[ operation, status ]`, `[ operation, src_remote_server_id ]`, `[ operation, dest_remote_server_id ]`, `[ operation, path ]`, `[ operation, client_ip ]`, `[ status, src_remote_server_id ]`, `[ status, dest_remote_server_id ]`, `[ status, path ]`, `[ status, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id ]`, `[ src_remote_server_id, path ]`, `[ src_remote_server_id, client_ip ]`, `[ dest_remote_server_id, path ]`, `[ dest_remote_server_id, client_ip ]`, `[ path, client_ip ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, src_remote_server_id ]`, `[ start_date, end_date, dest_remote_server_id ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, client_ip ]`, `[ start_date, operation, status ]`, `[ start_date, operation, src_remote_server_id ]`, `[ start_date, operation, dest_remote_server_id ]`, `[ start_date, operation, path ]`, `[ start_date, operation, client_ip ]`, `[ start_date, status, src_remote_server_id ]`, `[ start_date, status, dest_remote_server_id ]`, `[ start_date, status, path ]`, `[ start_date, status, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, src_remote_server_id, path ]`, `[ start_date, src_remote_server_id, client_ip ]`, `[ start_date, dest_remote_server_id, path ]`, `[ start_date, dest_remote_server_id, client_ip ]`, `[ start_date, path, client_ip ]`, `[ end_date, operation, status ]`, `[ end_date, operation, src_remote_server_id ]`, `[ end_date, operation, dest_remote_server_id ]`, `[ end_date, operation, path ]`, `[ end_date, operation, client_ip ]`, `[ end_date, status, src_remote_server_id ]`, `[ end_date, status, dest_remote_server_id ]`, `[ end_date, status, path ]`, `[ end_date, status, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, src_remote_server_id, path ]`, `[ end_date, src_remote_server_id, client_ip ]`, `[ end_date, dest_remote_server_id, path ]`, `[ end_date, dest_remote_server_id, client_ip ]`, `[ end_date, path, client_ip ]`, `[ operation, status, src_remote_server_id ]`, `[ operation, status, dest_remote_server_id ]`, `[ operation, status, path ]`, `[ operation, status, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id ]`, `[ operation, src_remote_server_id, path ]`, `[ operation, src_remote_server_id, client_ip ]`, `[ operation, dest_remote_server_id, path ]`, `[ operation, dest_remote_server_id, client_ip ]`, `[ operation, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id ]`, `[ status, src_remote_server_id, path ]`, `[ status, src_remote_server_id, client_ip ]`, `[ status, dest_remote_server_id, path ]`, `[ status, dest_remote_server_id, client_ip ]`, `[ status, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path ]`, `[ src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ src_remote_server_id, path, client_ip ]`, `[ dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, src_remote_server_id ]`, `[ start_date, end_date, operation, dest_remote_server_id ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id ]`, `[ start_date, end_date, status, dest_remote_server_id ]`, `[ start_date, end_date, status, path ]`, `[ start_date, end_date, status, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, src_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path ]`, `[ start_date, end_date, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id ]`, `[ start_date, operation, status, dest_remote_server_id ]`, `[ start_date, operation, status, path ]`, `[ start_date, operation, status, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, src_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path ]`, `[ start_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, operation, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, status, src_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, client_ip ]`, `[ start_date, status, dest_remote_server_id, path ]`, `[ start_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, status, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, src_remote_server_id, path, client_ip ]`, `[ start_date, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id ]`, `[ end_date, operation, status, dest_remote_server_id ]`, `[ end_date, operation, status, path ]`, `[ end_date, operation, status, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, src_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path ]`, `[ end_date, operation, dest_remote_server_id, client_ip ]`, `[ end_date, operation, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, status, src_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, client_ip ]`, `[ end_date, status, dest_remote_server_id, path ]`, `[ end_date, status, dest_remote_server_id, client_ip ]`, `[ end_date, status, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, src_remote_server_id, path, client_ip ]`, `[ end_date, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ operation, status, src_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, client_ip ]`, `[ operation, status, dest_remote_server_id, path ]`, `[ operation, status, dest_remote_server_id, client_ip ]`, `[ operation, status, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, src_remote_server_id, path, client_ip ]`, `[ operation, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path ]`, `[ status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ status, src_remote_server_id, path, client_ip ]`, `[ status, dest_remote_server_id, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id ]`, `[ start_date, end_date, operation, status, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, path ]`, `[ start_date, end_date, operation, status, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, src_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, status, src_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path ]`, `[ start_date, end_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, status, src_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, status, src_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path ]`, `[ end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, status, src_remote_server_id, path, client_ip ]`, `[ end_date, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, status, src_remote_server_id, path, client_ip ]`, `[ operation, status, dest_remote_server_id, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]` or `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation`, `status`, `src_remote_server_id`, `dest_remote_server_id` or `path`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ operation ]`, `[ status ]`, `[ src_remote_server_id ]`, `[ dest_remote_server_id ]`, `[ path ]`, `[ client_ip ]`, `[ start_date, end_date ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, src_remote_server_id ]`, `[ start_date, dest_remote_server_id ]`, `[ start_date, path ]`, `[ start_date, client_ip ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, src_remote_server_id ]`, `[ end_date, dest_remote_server_id ]`, `[ end_date, path ]`, `[ end_date, client_ip ]`, `[ operation, status ]`, `[ operation, src_remote_server_id ]`, `[ operation, dest_remote_server_id ]`, `[ operation, path ]`, `[ operation, client_ip ]`, `[ status, src_remote_server_id ]`, `[ status, dest_remote_server_id ]`, `[ status, path ]`, `[ status, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id ]`, `[ src_remote_server_id, path ]`, `[ src_remote_server_id, client_ip ]`, `[ dest_remote_server_id, path ]`, `[ dest_remote_server_id, client_ip ]`, `[ path, client_ip ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, src_remote_server_id ]`, `[ start_date, end_date, dest_remote_server_id ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, client_ip ]`, `[ start_date, operation, status ]`, `[ start_date, operation, src_remote_server_id ]`, `[ start_date, operation, dest_remote_server_id ]`, `[ start_date, operation, path ]`, `[ start_date, operation, client_ip ]`, `[ start_date, status, src_remote_server_id ]`, `[ start_date, status, dest_remote_server_id ]`, `[ start_date, status, path ]`, `[ start_date, status, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, src_remote_server_id, path ]`, `[ start_date, src_remote_server_id, client_ip ]`, `[ start_date, dest_remote_server_id, path ]`, `[ start_date, dest_remote_server_id, client_ip ]`, `[ start_date, path, client_ip ]`, `[ end_date, operation, status ]`, `[ end_date, operation, src_remote_server_id ]`, `[ end_date, operation, dest_remote_server_id ]`, `[ end_date, operation, path ]`, `[ end_date, operation, client_ip ]`, `[ end_date, status, src_remote_server_id ]`, `[ end_date, status, dest_remote_server_id ]`, `[ end_date, status, path ]`, `[ end_date, status, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, src_remote_server_id, path ]`, `[ end_date, src_remote_server_id, client_ip ]`, `[ end_date, dest_remote_server_id, path ]`, `[ end_date, dest_remote_server_id, client_ip ]`, `[ end_date, path, client_ip ]`, `[ operation, status, src_remote_server_id ]`, `[ operation, status, dest_remote_server_id ]`, `[ operation, status, path ]`, `[ operation, status, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id ]`, `[ operation, src_remote_server_id, path ]`, `[ operation, src_remote_server_id, client_ip ]`, `[ operation, dest_remote_server_id, path ]`, `[ operation, dest_remote_server_id, client_ip ]`, `[ operation, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id ]`, `[ status, src_remote_server_id, path ]`, `[ status, src_remote_server_id, client_ip ]`, `[ status, dest_remote_server_id, path ]`, `[ status, dest_remote_server_id, client_ip ]`, `[ status, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path ]`, `[ src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ src_remote_server_id, path, client_ip ]`, `[ dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, src_remote_server_id ]`, `[ start_date, end_date, operation, dest_remote_server_id ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id ]`, `[ start_date, end_date, status, dest_remote_server_id ]`, `[ start_date, end_date, status, path ]`, `[ start_date, end_date, status, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, src_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path ]`, `[ start_date, end_date, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id ]`, `[ start_date, operation, status, dest_remote_server_id ]`, `[ start_date, operation, status, path ]`, `[ start_date, operation, status, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, src_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path ]`, `[ start_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, operation, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, status, src_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, client_ip ]`, `[ start_date, status, dest_remote_server_id, path ]`, `[ start_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, status, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, src_remote_server_id, path, client_ip ]`, `[ start_date, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id ]`, `[ end_date, operation, status, dest_remote_server_id ]`, `[ end_date, operation, status, path ]`, `[ end_date, operation, status, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, src_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path ]`, `[ end_date, operation, dest_remote_server_id, client_ip ]`, `[ end_date, operation, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, status, src_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, client_ip ]`, `[ end_date, status, dest_remote_server_id, path ]`, `[ end_date, status, dest_remote_server_id, client_ip ]`, `[ end_date, status, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, src_remote_server_id, path, client_ip ]`, `[ end_date, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ operation, status, src_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, client_ip ]`, `[ operation, status, dest_remote_server_id, path ]`, `[ operation, status, dest_remote_server_id, client_ip ]`, `[ operation, status, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, src_remote_server_id, path, client_ip ]`, `[ operation, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path ]`, `[ status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ status, src_remote_server_id, path, client_ip ]`, `[ status, dest_remote_server_id, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id ]`, `[ start_date, end_date, operation, status, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, path ]`, `[ start_date, end_date, operation, status, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, src_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, status, src_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path ]`, `[ start_date, end_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, status, src_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, status, src_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path ]`, `[ end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, status, src_remote_server_id, path, client_ip ]`, `[ end_date, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, status, src_remote_server_id, path, client_ip ]`, `[ operation, status, dest_remote_server_id, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]` or `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`.",
            "example": {
              "operation": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation`, `status`, `src_remote_server_id`, `dest_remote_server_id` or `path`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ operation ]`, `[ status ]`, `[ src_remote_server_id ]`, `[ dest_remote_server_id ]`, `[ path ]`, `[ client_ip ]`, `[ start_date, end_date ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, src_remote_server_id ]`, `[ start_date, dest_remote_server_id ]`, `[ start_date, path ]`, `[ start_date, client_ip ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, src_remote_server_id ]`, `[ end_date, dest_remote_server_id ]`, `[ end_date, path ]`, `[ end_date, client_ip ]`, `[ operation, status ]`, `[ operation, src_remote_server_id ]`, `[ operation, dest_remote_server_id ]`, `[ operation, path ]`, `[ operation, client_ip ]`, `[ status, src_remote_server_id ]`, `[ status, dest_remote_server_id ]`, `[ status, path ]`, `[ status, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id ]`, `[ src_remote_server_id, path ]`, `[ src_remote_server_id, client_ip ]`, `[ dest_remote_server_id, path ]`, `[ dest_remote_server_id, client_ip ]`, `[ path, client_ip ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, src_remote_server_id ]`, `[ start_date, end_date, dest_remote_server_id ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, client_ip ]`, `[ start_date, operation, status ]`, `[ start_date, operation, src_remote_server_id ]`, `[ start_date, operation, dest_remote_server_id ]`, `[ start_date, operation, path ]`, `[ start_date, operation, client_ip ]`, `[ start_date, status, src_remote_server_id ]`, `[ start_date, status, dest_remote_server_id ]`, `[ start_date, status, path ]`, `[ start_date, status, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, src_remote_server_id, path ]`, `[ start_date, src_remote_server_id, client_ip ]`, `[ start_date, dest_remote_server_id, path ]`, `[ start_date, dest_remote_server_id, client_ip ]`, `[ start_date, path, client_ip ]`, `[ end_date, operation, status ]`, `[ end_date, operation, src_remote_server_id ]`, `[ end_date, operation, dest_remote_server_id ]`, `[ end_date, operation, path ]`, `[ end_date, operation, client_ip ]`, `[ end_date, status, src_remote_server_id ]`, `[ end_date, status, dest_remote_server_id ]`, `[ end_date, status, path ]`, `[ end_date, status, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, src_remote_server_id, path ]`, `[ end_date, src_remote_server_id, client_ip ]`, `[ end_date, dest_remote_server_id, path ]`, `[ end_date, dest_remote_server_id, client_ip ]`, `[ end_date, path, client_ip ]`, `[ operation, status, src_remote_server_id ]`, `[ operation, status, dest_remote_server_id ]`, `[ operation, status, path ]`, `[ operation, status, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id ]`, `[ operation, src_remote_server_id, path ]`, `[ operation, src_remote_server_id, client_ip ]`, `[ operation, dest_remote_server_id, path ]`, `[ operation, dest_remote_server_id, client_ip ]`, `[ operation, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id ]`, `[ status, src_remote_server_id, path ]`, `[ status, src_remote_server_id, client_ip ]`, `[ status, dest_remote_server_id, path ]`, `[ status, dest_remote_server_id, client_ip ]`, `[ status, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path ]`, `[ src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ src_remote_server_id, path, client_ip ]`, `[ dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, src_remote_server_id ]`, `[ start_date, end_date, operation, dest_remote_server_id ]`, `[ start_date, end_date, operation, path ]`, `[ start_date, end_date, operation, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id ]`, `[ start_date, end_date, status, dest_remote_server_id ]`, `[ start_date, end_date, status, path ]`, `[ start_date, end_date, status, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, src_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path ]`, `[ start_date, end_date, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id ]`, `[ start_date, operation, status, dest_remote_server_id ]`, `[ start_date, operation, status, path ]`, `[ start_date, operation, status, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, src_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path ]`, `[ start_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, operation, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, status, src_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, client_ip ]`, `[ start_date, status, dest_remote_server_id, path ]`, `[ start_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, status, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, src_remote_server_id, path, client_ip ]`, `[ start_date, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id ]`, `[ end_date, operation, status, dest_remote_server_id ]`, `[ end_date, operation, status, path ]`, `[ end_date, operation, status, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, src_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path ]`, `[ end_date, operation, dest_remote_server_id, client_ip ]`, `[ end_date, operation, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, status, src_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, client_ip ]`, `[ end_date, status, dest_remote_server_id, path ]`, `[ end_date, status, dest_remote_server_id, client_ip ]`, `[ end_date, status, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, src_remote_server_id, path, client_ip ]`, `[ end_date, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ operation, status, src_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, client_ip ]`, `[ operation, status, dest_remote_server_id, path ]`, `[ operation, status, dest_remote_server_id, client_ip ]`, `[ operation, status, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, src_remote_server_id, path, client_ip ]`, `[ operation, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path ]`, `[ status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ status, src_remote_server_id, path, client_ip ]`, `[ status, dest_remote_server_id, path, client_ip ]`, `[ src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id ]`, `[ start_date, end_date, operation, status, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, path ]`, `[ start_date, end_date, operation, status, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, src_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, status, src_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path ]`, `[ start_date, end_date, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, operation, status, src_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ end_date, operation, status, src_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path ]`, `[ end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, status, src_remote_server_id, path, client_ip ]`, `[ end_date, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ operation, status, src_remote_server_id, path, client_ip ]`, `[ operation, status, dest_remote_server_id, path, client_ip ]`, `[ operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, path ]`, `[ start_date, end_date, operation, status, src_remote_server_id, dest_remote_server_id, client_ip ]`, `[ start_date, end_date, operation, status, src_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, status, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, operation, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, end_date, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`, `[ start_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]` or `[ end_date, operation, status, src_remote_server_id, dest_remote_server_id, path, client_ip ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OutboundConnectionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OutboundConnectionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OutboundConnectionLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of OutboundConnectionLogs objects.",
            "x-ms-summary": "A list of OutboundConnectionLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "outbound_connection_logs",
          "Outbound Connection Logs"
        ],
        "description": "List Outbound Connection Logs",
        "operationId": "GetOutboundConnectionLogs",
        "summary": "List Outbound Connection Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "client_ip": {
              "sort": [],
              "type": "exact"
            },
            "dest_remote_server_id": {
              "sort": [],
              "type": "pattern"
            },
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "operation": {
              "sort": [],
              "type": "pattern"
            },
            "path": {
              "sort": [],
              "type": "pattern"
            },
            "src_remote_server_id": {
              "sort": [],
              "type": "pattern"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/payments": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountLineItemEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountLineItemEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccountLineItemEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Payments objects.",
            "x-ms-summary": "A list of Payments objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "payments",
          "Account Line Items"
        ],
        "description": "List Payments",
        "operationId": "GetPayments",
        "summary": "List Payments",
        "x-authentication": [
          "overdue_ok",
          "billing"
        ],
        "x-category": [
          "billing"
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Payment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Payment ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLineItemEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLineItemEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLineItemEntity"
                }
              }
            },
            "description": "The Payments object.",
            "x-ms-summary": "The Payments object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "payments",
          "Account Line Items"
        ],
        "description": "Show Payment",
        "operationId": "GetPaymentsId",
        "summary": "Show Payment",
        "x-authentication": [
          "overdue_ok",
          "billing"
        ],
        "x-category": [
          "billing"
        ]
      }
    },
    "/permissions": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `group_id`, `path` or `user_id`.",
            "example": {
              "site_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `group_id`, `path` or `user_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `group_id` or `user_id`. Valid field combinations are `[ group_id, path ]`, `[ user_id, path ]` or `[ user_id, group_id ]`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `group_id` or `user_id`. Valid field combinations are `[ group_id, path ]`, `[ user_id, path ]` or `[ user_id, group_id ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
          },
          {
            "description": "Permission path.  If provided, will scope all permissions(including upward) to this path.",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Permission path.  If provided, will scope all permissions(including upward) to this path."
          },
          {
            "description": "If searching by user or group, also include user's permissions that are inherited from its groups?",
            "in": "query",
            "name": "include_groups",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "If searching by user or group, also include user's permissions that are inherited from its groups?"
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          },
          {
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Permissions objects.",
            "x-ms-summary": "A list of Permissions objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "permissions",
          "Permissions"
        ],
        "description": "List Permissions",
        "operationId": "GetPermissions",
        "summary": "List Permissions",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "group_id": {
              "sort": [
                "group_id",
                "path",
                "permission"
              ],
              "type": "exact"
            },
            "path": {
              "sort": [
                "path"
              ],
              "type": "pattern"
            },
            "user_id": {
              "sort": [
                "group_id",
                "path",
                "user_id",
                "permission"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "group_id",
                "path"
              ],
              "sort": [
                "path"
              ]
            },
            {
              "filter": [
                "user_id",
                "path"
              ],
              "sort": [
                "path"
              ]
            },
            {
              "filter": [
                "user_id",
                "group_id"
              ],
              "sort": [
                "group_id",
                "permission"
              ]
            }
          ]
        },
        "x-path_aliases": [
          "groups/:group_id/permissions",
          "users/:user_id/permissions"
        ],
        "x-sortable_columns": [
          "site_id",
          "group_id",
          "path",
          "user_id"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionEntity"
                }
              }
            },
            "description": "The Permissions object.",
            "x-ms-summary": "The Permissions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "permissions",
          "Permissions"
        ],
        "description": "Create Permission",
        "operationId": "PostPermissions",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "group_id": {
                    "description": "Group ID. Provide `group_name` or `group_id`",
                    "format": "int32",
                    "type": "integer"
                  },
                  "group_name": {
                    "description": "Group name.  Provide `group_name` or `group_id`",
                    "type": "string"
                  },
                  "path": {
                    "description": "Folder path",
                    "type": "string"
                  },
                  "permission": {
                    "description": "Permission type.  Can be `admin`, `full`, `readonly`, `writeonly`, `list`, or `history`",
                    "type": "string"
                  },
                  "recursive": {
                    "description": "Apply to subfolders recursively?",
                    "type": "boolean"
                  },
                  "site_id": {
                    "description": "Site ID. If not provided, will default to current site. Used when creating a permission for a child site.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "user_id": {
                    "description": "User ID.  Provide `username` or `user_id`",
                    "format": "int32",
                    "type": "integer"
                  },
                  "username": {
                    "description": "User username.  Provide `username` or `user_id`",
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Permission",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/permissions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Permission ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Permission ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "permissions",
          "Permissions"
        ],
        "description": "Delete Permission",
        "operationId": "DeletePermissionsId",
        "summary": "Delete Permission",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/priorities": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "The path to query for priorities",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "The path to query for priorities"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PriorityEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PriorityEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PriorityEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Priorities objects.",
            "x-ms-summary": "A list of Priorities objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "priorities",
          "Priorities"
        ],
        "description": "List Priorities",
        "operationId": "GetPriorities",
        "summary": "List Priorities",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/projects": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProjectEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProjectEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProjectEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Projects objects.",
            "x-ms-summary": "A list of Projects objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "projects",
          "Projects"
        ],
        "description": "List Projects",
        "operationId": "GetProjects",
        "summary": "List Projects",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              }
            },
            "description": "The Projects object.",
            "x-ms-summary": "The Projects object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "projects",
          "Projects"
        ],
        "description": "Create Project",
        "operationId": "PostProjects",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchProjectsId"
        },
        "summary": "Create Project",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/projects/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Project ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Project ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "projects",
          "Projects"
        ],
        "description": "Delete Project",
        "operationId": "DeleteProjectsId",
        "summary": "Delete Project",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Project ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Project ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              }
            },
            "description": "The Projects object.",
            "x-ms-summary": "The Projects object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "projects",
          "Projects"
        ],
        "description": "Show Project",
        "operationId": "GetProjectsId",
        "summary": "Show Project",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system",
          "project_management"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Project ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Project ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              }
            },
            "description": "The Projects object.",
            "x-ms-summary": "The Projects object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "projects",
          "Projects"
        ],
        "description": "Update Project",
        "operationId": "PatchProjectsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "global_access": {
                    "description": "Global permissions.  Can be: `none`, `anyone_with_read`, `anyone_with_full`.",
                    "type": "string"
                  }
                },
                "required": [
                  "global_access"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Project",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system",
          "project_management"
        ]
      }
    },
    "/public_hosting_request_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `remote_ip` or `success`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ remote_ip ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ end_date, path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ remote_ip, success ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, remote_ip, success ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, remote_ip, success ]`, `[ path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, path, remote_ip, success ]` or `[ end_date, path, remote_ip, success ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `remote_ip` or `success`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ remote_ip ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ end_date, path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ remote_ip, success ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, remote_ip, success ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, remote_ip, success ]`, `[ path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, path, remote_ip, success ]` or `[ end_date, path, remote_ip, success ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ remote_ip ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ end_date, path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ remote_ip, success ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, remote_ip, success ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, remote_ip, success ]`, `[ path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, path, remote_ip, success ]` or `[ end_date, path, remote_ip, success ]`.",
            "example": {
              "path": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ remote_ip ]`, `[ success ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ end_date, path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ remote_ip, success ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, remote_ip, success ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, remote_ip, success ]`, `[ path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, path, remote_ip, success ]` or `[ end_date, path, remote_ip, success ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicHostingRequestLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicHostingRequestLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicHostingRequestLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of PublicHostingRequestLogs objects.",
            "x-ms-summary": "A list of PublicHostingRequestLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "public_hosting_request_logs",
          "Public Hosting Request Logs"
        ],
        "description": "List Public Hosting Request Logs",
        "operationId": "GetPublicHostingRequestLogs",
        "summary": "List Public Hosting Request Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "path": {
              "sort": [],
              "type": "pattern"
            },
            "remote_ip": {
              "sort": [],
              "type": "exact"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "success": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/public_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of PublicKeys objects.",
            "x-ms-summary": "A list of PublicKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "public_keys",
          "Public Keys"
        ],
        "description": "List Public Keys",
        "operationId": "GetPublicKeys",
        "summary": "List Public Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ],
        "x-path_aliases": [
          "user/public_keys",
          "users/:user_id/public_keys"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              }
            },
            "description": "The PublicKeys object.",
            "x-ms-summary": "The PublicKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "public_keys",
          "Public Keys"
        ],
        "description": "Create Public Key",
        "operationId": "PostPublicKeys",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostUserPublicKeys"
        },
        "summary": "Create Public Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ],
        "x-path_aliases": [
          "user/public_keys",
          "users/:user_id/public_keys"
        ]
      }
    },
    "/public_keys/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Public Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Public Key ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "public_keys",
          "Public Keys"
        ],
        "description": "Delete Public Key",
        "operationId": "DeletePublicKeysId",
        "summary": "Delete Public Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Public Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Public Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              }
            },
            "description": "The PublicKeys object.",
            "x-ms-summary": "The PublicKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "public_keys",
          "Public Keys"
        ],
        "description": "Show Public Key",
        "operationId": "GetPublicKeysId",
        "summary": "Show Public Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Public Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Public Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              }
            },
            "description": "The PublicKeys object.",
            "x-ms-summary": "The PublicKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "public_keys",
          "Public Keys"
        ],
        "description": "Update Public Key",
        "operationId": "PatchPublicKeysId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "title": {
                    "description": "Internal reference for key.",
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Public Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ]
      }
    },
    "/remote_bandwidth_snapshots": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `logged_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `logged_at`.",
            "example": {
              "logged_at": "test"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `logged_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RemoteBandwidthSnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RemoteBandwidthSnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RemoteBandwidthSnapshotEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of RemoteBandwidthSnapshots objects.",
            "x-ms-summary": "A list of RemoteBandwidthSnapshots objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_bandwidth_snapshots",
          "Remote Bandwidth Snapshots"
        ],
        "description": "List Remote Bandwidth Snapshots",
        "operationId": "GetRemoteBandwidthSnapshots",
        "summary": "List Remote Bandwidth Snapshots",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "usage"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "logged_at": {
              "sort": [
                "logged_at",
                "remote_server_id"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "logged_at"
        ]
      }
    },
    "/remote_servers": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name`, `server_type`, `backblaze_b2_bucket`, `google_cloud_storage_bucket`, `wasabi_bucket`, `s3_bucket`, `rackspace_container`, `azure_blob_storage_container`, `azure_files_storage_share_name`, `s3_compatible_bucket`, `filebase_bucket`, `cloudflare_bucket` or `linode_bucket`.",
            "example": {
              "name": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `name`, `server_type`, `backblaze_b2_bucket`, `google_cloud_storage_bucket`, `wasabi_bucket`, `s3_bucket`, `rackspace_container`, `azure_blob_storage_container`, `azure_files_storage_share_name`, `s3_compatible_bucket`, `filebase_bucket`, `cloudflare_bucket` or `linode_bucket`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name`, `server_type`, `backblaze_b2_bucket`, `google_cloud_storage_bucket`, `wasabi_bucket`, `s3_bucket`, `rackspace_container`, `azure_blob_storage_container`, `azure_files_storage_share_name`, `s3_compatible_bucket`, `filebase_bucket`, `cloudflare_bucket` or `linode_bucket`. Valid field combinations are `[ server_type, name ]`, `[ backblaze_b2_bucket, name ]`, `[ google_cloud_storage_bucket, name ]`, `[ wasabi_bucket, name ]`, `[ s3_bucket, name ]`, `[ rackspace_container, name ]`, `[ azure_blob_storage_container, name ]`, `[ azure_files_storage_share_name, name ]`, `[ s3_compatible_bucket, name ]`, `[ filebase_bucket, name ]`, `[ cloudflare_bucket, name ]` or `[ linode_bucket, name ]`.",
            "example": {
              "name": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `name`, `server_type`, `backblaze_b2_bucket`, `google_cloud_storage_bucket`, `wasabi_bucket`, `s3_bucket`, `rackspace_container`, `azure_blob_storage_container`, `azure_files_storage_share_name`, `s3_compatible_bucket`, `filebase_bucket`, `cloudflare_bucket` or `linode_bucket`. Valid field combinations are `[ server_type, name ]`, `[ backblaze_b2_bucket, name ]`, `[ google_cloud_storage_bucket, name ]`, `[ wasabi_bucket, name ]`, `[ s3_bucket, name ]`, `[ rackspace_container, name ]`, `[ azure_blob_storage_container, name ]`, `[ azure_files_storage_share_name, name ]`, `[ s3_compatible_bucket, name ]`, `[ filebase_bucket, name ]`, `[ cloudflare_bucket, name ]` or `[ linode_bucket, name ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`, `backblaze_b2_bucket`, `google_cloud_storage_bucket`, `wasabi_bucket`, `s3_bucket`, `rackspace_container`, `azure_blob_storage_container`, `azure_files_storage_share_name`, `s3_compatible_bucket`, `filebase_bucket`, `cloudflare_bucket` or `linode_bucket`. Valid field combinations are `[ backblaze_b2_bucket, name ]`, `[ google_cloud_storage_bucket, name ]`, `[ wasabi_bucket, name ]`, `[ s3_bucket, name ]`, `[ rackspace_container, name ]`, `[ azure_blob_storage_container, name ]`, `[ azure_files_storage_share_name, name ]`, `[ s3_compatible_bucket, name ]`, `[ filebase_bucket, name ]`, `[ cloudflare_bucket, name ]` or `[ linode_bucket, name ]`.",
            "example": {
              "name": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `name`, `backblaze_b2_bucket`, `google_cloud_storage_bucket`, `wasabi_bucket`, `s3_bucket`, `rackspace_container`, `azure_blob_storage_container`, `azure_files_storage_share_name`, `s3_compatible_bucket`, `filebase_bucket`, `cloudflare_bucket` or `linode_bucket`. Valid field combinations are `[ backblaze_b2_bucket, name ]`, `[ google_cloud_storage_bucket, name ]`, `[ wasabi_bucket, name ]`, `[ s3_bucket, name ]`, `[ rackspace_container, name ]`, `[ azure_blob_storage_container, name ]`, `[ azure_files_storage_share_name, name ]`, `[ s3_compatible_bucket, name ]`, `[ filebase_bucket, name ]`, `[ cloudflare_bucket, name ]` or `[ linode_bucket, name ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RemoteServerEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RemoteServerEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RemoteServerEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of RemoteServers objects.",
            "x-ms-summary": "A list of RemoteServers objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Servers"
        ],
        "description": "List Remote Servers",
        "operationId": "GetRemoteServers",
        "summary": "List Remote Servers",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "integrations"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "azure_blob_storage_container": {
              "sort": [
                "name",
                "azure_blob_storage_container"
              ],
              "type": "pattern"
            },
            "azure_files_storage_share_name": {
              "sort": [
                "name",
                "azure_files_storage_share_name"
              ],
              "type": "pattern"
            },
            "backblaze_b2_bucket": {
              "sort": [
                "name",
                "backblaze_b2_bucket"
              ],
              "type": "pattern"
            },
            "cloudflare_bucket": {
              "sort": [
                "name",
                "cloudflare_bucket"
              ],
              "type": "pattern"
            },
            "filebase_bucket": {
              "sort": [
                "name",
                "filebase_bucket"
              ],
              "type": "pattern"
            },
            "google_cloud_storage_bucket": {
              "sort": [
                "name",
                "google_cloud_storage_bucket"
              ],
              "type": "pattern"
            },
            "linode_bucket": {
              "sort": [
                "name",
                "linode_bucket"
              ],
              "type": "pattern"
            },
            "name": {
              "sort": [
                "name"
              ],
              "type": "pattern"
            },
            "rackspace_container": {
              "sort": [
                "name",
                "rackspace_container"
              ],
              "type": "pattern"
            },
            "s3_bucket": {
              "sort": [
                "name",
                "s3_bucket"
              ],
              "type": "pattern"
            },
            "s3_compatible_bucket": {
              "sort": [
                "name",
                "s3_compatible_bucket"
              ],
              "type": "pattern"
            },
            "server_type": {
              "sort": [
                "name",
                "server_type"
              ],
              "type": "exact"
            },
            "wasabi_bucket": {
              "sort": [
                "name",
                "wasabi_bucket"
              ],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "server_type",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "backblaze_b2_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "google_cloud_storage_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "wasabi_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "s3_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "rackspace_container",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "azure_blob_storage_container",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "azure_files_storage_share_name",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "s3_compatible_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "filebase_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "cloudflare_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            },
            {
              "filter": [
                "linode_bucket",
                "name"
              ],
              "sort": [
                "name"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "name",
          "server_type",
          "backblaze_b2_bucket",
          "google_cloud_storage_bucket",
          "wasabi_bucket",
          "s3_bucket",
          "rackspace_container",
          "azure_blob_storage_container",
          "azure_files_storage_share_name",
          "s3_compatible_bucket",
          "filebase_bucket",
          "cloudflare_bucket",
          "linode_bucket"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              }
            },
            "description": "The RemoteServers object.",
            "x-ms-summary": "The RemoteServers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Servers"
        ],
        "description": "Create Remote Server",
        "operationId": "PostRemoteServers",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostRemoteServers"
        },
        "summary": "Create Remote Server",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "integrations"
        ]
      }
    },
    "/remote_servers/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Remote Server ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Remote Server ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Servers"
        ],
        "description": "Delete Remote Server",
        "operationId": "DeleteRemoteServersId",
        "summary": "Delete Remote Server",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "integrations"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Remote Server ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Remote Server ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              }
            },
            "description": "The RemoteServers object.",
            "x-ms-summary": "The RemoteServers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Servers"
        ],
        "description": "Show Remote Server",
        "operationId": "GetRemoteServersId",
        "summary": "Show Remote Server",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "integrations"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Remote Server ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Remote Server ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerEntity"
                }
              }
            },
            "description": "The RemoteServers object.",
            "x-ms-summary": "The RemoteServers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Servers"
        ],
        "description": "Update Remote Server",
        "operationId": "PatchRemoteServersId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "aws_access_key": {
                    "description": "AWS Access Key.",
                    "type": "string"
                  },
                  "aws_secret_key": {
                    "description": "AWS secret key.",
                    "type": "string"
                  },
                  "azure_blob_storage_access_key": {
                    "description": "Azure Blob Storage secret key.",
                    "type": "string"
                  },
                  "azure_blob_storage_account": {
                    "description": "Azure Blob Storage Account name",
                    "type": "string"
                  },
                  "azure_blob_storage_container": {
                    "description": "Azure Blob Storage Container name",
                    "type": "string"
                  },
                  "azure_blob_storage_hierarchical_namespace": {
                    "description": "Enable when storage account has hierarchical namespace feature enabled",
                    "type": "boolean"
                  },
                  "azure_blob_storage_sas_token": {
                    "description": "Shared Access Signature (SAS) token",
                    "type": "string"
                  },
                  "azure_files_storage_access_key": {
                    "description": "Azure File Storage access key.",
                    "type": "string"
                  },
                  "azure_files_storage_account": {
                    "description": "Azure File Storage Account name",
                    "type": "string"
                  },
                  "azure_files_storage_dns_suffix": {
                    "description": "Custom DNS suffix",
                    "type": "string"
                  },
                  "azure_files_storage_sas_token": {
                    "description": "Shared Access Signature (SAS) token",
                    "type": "string"
                  },
                  "azure_files_storage_share_name": {
                    "description": "Azure File Storage Share name",
                    "type": "string"
                  },
                  "backblaze_b2_application_key": {
                    "description": "Backblaze B2 Cloud Storage applicationKey.",
                    "type": "string"
                  },
                  "backblaze_b2_bucket": {
                    "description": "Backblaze B2 Cloud Storage Bucket name",
                    "type": "string"
                  },
                  "backblaze_b2_key_id": {
                    "description": "Backblaze B2 Cloud Storage keyID.",
                    "type": "string"
                  },
                  "backblaze_b2_s3_endpoint": {
                    "description": "Backblaze B2 Cloud Storage S3 Endpoint",
                    "type": "string"
                  },
                  "cloudflare_access_key": {
                    "description": "Cloudflare Access Key.",
                    "type": "string"
                  },
                  "cloudflare_bucket": {
                    "description": "Cloudflare Bucket name",
                    "type": "string"
                  },
                  "cloudflare_endpoint": {
                    "description": "Cloudflare endpoint",
                    "type": "string"
                  },
                  "cloudflare_secret_key": {
                    "description": "Cloudflare secret key",
                    "type": "string"
                  },
                  "dropbox_teams": {
                    "description": "List Team folders in root",
                    "type": "boolean"
                  },
                  "enable_dedicated_ips": {
                    "description": "`true` if remote server only accepts connections from dedicated IPs",
                    "type": "boolean"
                  },
                  "filebase_access_key": {
                    "description": "Filebase Access Key.",
                    "type": "string"
                  },
                  "filebase_bucket": {
                    "description": "Filebase Bucket name",
                    "type": "string"
                  },
                  "filebase_secret_key": {
                    "description": "Filebase secret key",
                    "type": "string"
                  },
                  "files_agent_permission_set": {
                    "description": "Local permissions for files agent. read_only, write_only, or read_write",
                    "enum": [
                      "read_write",
                      "read_only",
                      "write_only"
                    ],
                    "type": "string"
                  },
                  "files_agent_root": {
                    "description": "Agent local root path",
                    "type": "string"
                  },
                  "files_agent_version": {
                    "description": "Files Agent version",
                    "type": "string"
                  },
                  "google_cloud_storage_bucket": {
                    "description": "Google Cloud Storage bucket name",
                    "type": "string"
                  },
                  "google_cloud_storage_credentials_json": {
                    "description": "A JSON file that contains the private key. To generate see https://cloud.google.com/storage/docs/json_api/v1/how-tos/authorizing#APIKey",
                    "type": "string"
                  },
                  "google_cloud_storage_project_id": {
                    "description": "Google Cloud Project ID",
                    "type": "string"
                  },
                  "hostname": {
                    "description": "Hostname or IP address",
                    "type": "string"
                  },
                  "linode_access_key": {
                    "description": "Linode Access Key.",
                    "type": "string"
                  },
                  "linode_bucket": {
                    "description": "Linode Bucket name",
                    "type": "string"
                  },
                  "linode_region": {
                    "description": "Linode region",
                    "type": "string"
                  },
                  "linode_secret_key": {
                    "description": "Linode secret key",
                    "type": "string"
                  },
                  "max_connections": {
                    "description": "Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).",
                    "format": "int32",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Internal name for your reference",
                    "type": "string"
                  },
                  "one_drive_account_type": {
                    "description": "Either personal or business_other account types",
                    "enum": [
                      "personal",
                      "business_other"
                    ],
                    "type": "string"
                  },
                  "password": {
                    "description": "Password if needed.",
                    "type": "string"
                  },
                  "pin_to_site_region": {
                    "description": "If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a site-wide setting which will force it to true.",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "Port for remote server.  Not needed for S3.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "private_key": {
                    "description": "Private key if needed.",
                    "type": "string"
                  },
                  "private_key_passphrase": {
                    "description": "Passphrase for private key if needed.",
                    "type": "string"
                  },
                  "rackspace_api_key": {
                    "description": "Rackspace API key from the Rackspace Cloud Control Panel.",
                    "type": "string"
                  },
                  "rackspace_container": {
                    "description": "The name of the container (top level directory) where files will sync.",
                    "type": "string"
                  },
                  "rackspace_region": {
                    "description": "Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/",
                    "type": "string"
                  },
                  "rackspace_username": {
                    "description": "Rackspace username used to login to the Rackspace Cloud Control Panel.",
                    "type": "string"
                  },
                  "reset_authentication": {
                    "description": "Reset authenticated account",
                    "type": "boolean"
                  },
                  "s3_bucket": {
                    "description": "S3 bucket name",
                    "type": "string"
                  },
                  "s3_compatible_access_key": {
                    "description": "S3-compatible Access Key.",
                    "type": "string"
                  },
                  "s3_compatible_bucket": {
                    "description": "S3-compatible Bucket name",
                    "type": "string"
                  },
                  "s3_compatible_endpoint": {
                    "description": "S3-compatible endpoint",
                    "type": "string"
                  },
                  "s3_compatible_region": {
                    "description": "S3-compatible endpoint",
                    "type": "string"
                  },
                  "s3_compatible_secret_key": {
                    "description": "S3-compatible secret key",
                    "type": "string"
                  },
                  "s3_region": {
                    "description": "S3 region",
                    "type": "string"
                  },
                  "server_certificate": {
                    "description": "Remote server certificate",
                    "enum": [
                      "require_match",
                      "allow_any"
                    ],
                    "type": "string"
                  },
                  "server_host_key": {
                    "description": "Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts",
                    "type": "string"
                  },
                  "server_type": {
                    "description": "Remote server type.",
                    "enum": [
                      "ftp",
                      "sftp",
                      "s3",
                      "google_cloud_storage",
                      "webdav",
                      "wasabi",
                      "backblaze_b2",
                      "one_drive",
                      "rackspace",
                      "box",
                      "dropbox",
                      "google_drive",
                      "azure",
                      "sharepoint",
                      "s3_compatible",
                      "azure_files",
                      "files_agent",
                      "filebase",
                      "cloudflare",
                      "linode"
                    ],
                    "type": "string"
                  },
                  "ssl": {
                    "description": "Should we require SSL?",
                    "enum": [
                      "if_available",
                      "require",
                      "require_implicit",
                      "never"
                    ],
                    "type": "string"
                  },
                  "ssl_certificate": {
                    "description": "SSL client certificate.",
                    "type": "string"
                  },
                  "username": {
                    "description": "Remote server username.  Not needed for S3 buckets.",
                    "type": "string"
                  },
                  "wasabi_access_key": {
                    "description": "Wasabi access key.",
                    "type": "string"
                  },
                  "wasabi_bucket": {
                    "description": "Wasabi Bucket name",
                    "type": "string"
                  },
                  "wasabi_region": {
                    "description": "Wasabi region",
                    "type": "string"
                  },
                  "wasabi_secret_key": {
                    "description": "Wasabi secret key.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Remote Server",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "integrations"
        ]
      }
    },
    "/remote_servers/{id}/configuration_file": {
      "get": {
        "parameters": [
          {
            "description": "Remote Server ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Remote Server ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerConfigurationFileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerConfigurationFileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerConfigurationFileEntity"
                }
              }
            },
            "description": "The RemoteServers object.",
            "x-ms-summary": "The RemoteServers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Server Configuration Files"
        ],
        "description": "Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)",
        "operationId": "GetRemoteServersIdConfigurationFile",
        "summary": "Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "integrations"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "Remote Server ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Remote Server ID."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerConfigurationFileEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerConfigurationFileEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteServerConfigurationFileEntity"
                }
              }
            },
            "description": "The RemoteServers object.",
            "x-ms-summary": "The RemoteServers object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "remote_servers",
          "Remote Server Configuration Files"
        ],
        "description": "Post local changes, check in, and download configuration file (used by some Remote Server integrations, such as the Files.com Agent)",
        "operationId": "PostRemoteServersIdConfigurationFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "api_token": {
                    "description": "Files Agent API Token",
                    "type": "string"
                  },
                  "config_version": {
                    "description": "agent config version",
                    "type": "string"
                  },
                  "hostname": {
                    "type": "string"
                  },
                  "permission_set": {
                    "description": "The permission set for the agent ['read_write', 'read_only', 'write_only']",
                    "type": "string"
                  },
                  "port": {
                    "description": "Incoming port for files agent connections",
                    "format": "int32",
                    "type": "integer"
                  },
                  "private_key": {
                    "description": "The private key for the agent",
                    "type": "string"
                  },
                  "public_key": {
                    "description": "public key",
                    "type": "string"
                  },
                  "root": {
                    "description": "The root directory for the agent",
                    "type": "string"
                  },
                  "server_host_key": {
                    "type": "string"
                  },
                  "status": {
                    "description": "either running or shutdown",
                    "type": "string"
                  },
                  "subdomain": {
                    "description": "Files.com subdomain site name",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Post local changes, check in, and download configuration file (used by some Remote Server integrations, such as the Files.com Agent)",
        "x-authentication": [
          "none"
        ],
        "x-category": [
          "integrations"
        ]
      }
    },
    "/requests": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          },
          {
            "description": "Only show requests of the current user?  (Defaults to true if current user is not a site admin.)",
            "in": "query",
            "name": "mine",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Only show requests of the current user?  (Defaults to true if current user is not a site admin.)"
          },
          {
            "description": "Path to show requests for.  If omitted, shows all paths. Send `/` to represent the root directory.",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to show requests for.  If omitted, shows all paths. Send `/` to represent the root directory."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequestEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequestEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequestEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Requests objects.",
            "x-ms-summary": "A list of Requests objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "requests",
          "Requests"
        ],
        "description": "List Requests",
        "operationId": "GetRequests",
        "summary": "List Requests",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ],
        "x-path_aliases": [
          "requests/folders/*path"
        ],
        "x-sortable_columns": []
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/RequestEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RequestEntity"
                }
              }
            },
            "description": "The Requests object.",
            "x-ms-summary": "The Requests object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "requests",
          "Requests"
        ],
        "description": "Create Request",
        "operationId": "PostRequests",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "destination": {
                    "description": "Destination filename (without extension) to request.",
                    "type": "string"
                  },
                  "group_ids": {
                    "description": "A list of group IDs to request the file from. If sent as a string, it should be comma-delimited.",
                    "type": "string"
                  },
                  "path": {
                    "description": "Folder path on which to request the file.",
                    "type": "string"
                  },
                  "user_ids": {
                    "description": "A list of user IDs to request the file from. If sent as a string, it should be comma-delimited.",
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Request",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/requests/folders/{path}": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          },
          {
            "description": "Only show requests of the current user?  (Defaults to true if current user is not a site admin.)",
            "in": "query",
            "name": "mine",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Only show requests of the current user?  (Defaults to true if current user is not a site admin.)"
          },
          {
            "description": "Path to show requests for.  If omitted, shows all paths. Send `/` to represent the root directory.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Path to show requests for.  If omitted, shows all paths. Send `/` to represent the root directory."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequestEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequestEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequestEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Requests objects.",
            "x-ms-summary": "A list of Requests objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "requests",
          "Requests"
        ],
        "description": "List Requests",
        "operationId": "GetRequestsFoldersPath",
        "summary": "List Requests",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ],
        "x-path_aliases": [
          "requests/folders/*path"
        ],
        "x-sortable_columns": []
      }
    },
    "/requests/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Request ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Request ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "requests",
          "Requests"
        ],
        "description": "Delete Request",
        "operationId": "DeleteRequestsId",
        "summary": "Delete Request",
        "x-authentication": [],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/sessions": {
      "delete": {
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sessions",
          "Sessions"
        ],
        "description": "Delete user session (log out)",
        "operationId": "DeleteSessions",
        "summary": "Delete user session (log out)",
        "x-authentication": [],
        "x-category": [
          "developers"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SessionEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SessionEntity"
                }
              }
            },
            "description": "The Sessions object.",
            "x-ms-summary": "The Sessions object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sessions",
          "Sessions"
        ],
        "description": "Create user session (log in)",
        "operationId": "PostSessions",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "otp": {
                    "description": "If this user has a 2FA device, provide its OTP or code here.",
                    "type": "string"
                  },
                  "partial_session_id": {
                    "description": "Identifier for a partially-completed login",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for sign in",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username to sign in as",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create user session (log in)",
        "x-authentication": [],
        "x-category": [
          "developers"
        ]
      }
    },
    "/settings_changes": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`, `api_key_id` or `user_id`.",
            "example": {
              "created_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `created_at`, `api_key_id` or `user_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `api_key_id` and `user_id`.",
            "example": {
              "api_key_id": "1"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `api_key_id` and `user_id`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SettingsChangeEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SettingsChangeEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SettingsChangeEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of SettingsChanges objects.",
            "x-ms-summary": "A list of SettingsChanges objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "settings_changes",
          "Settings Changes"
        ],
        "description": "List Settings Changes",
        "operationId": "GetSettingsChanges",
        "summary": "List Settings Changes",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "api_key_id": {
              "sort": [
                "created_at",
                "api_key_id"
              ],
              "type": "exact"
            },
            "user_id": {
              "sort": [
                "created_at",
                "user_id"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": []
        },
        "x-sortable_columns": [
          "created_at",
          "api_key_id",
          "user_id"
        ]
      }
    },
    "/sftp_action_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `true_path`, `remote_ip`, `session_uuid`, `success`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `true_path`, `remote_ip`, `session_uuid`, `success`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`, `true_path`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`.",
            "example": {
              "path": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`, `true_path`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ session_uuid ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, session_uuid ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, session_uuid ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, session_uuid ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, session_uuid ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, session_uuid ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ session_uuid, success ]`, `[ session_uuid, status ]`, `[ session_uuid, action_type ]`, `[ session_uuid, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, session_uuid ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, session_uuid ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, session_uuid ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, session_uuid ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, session_uuid, success ]`, `[ start_date, session_uuid, status ]`, `[ start_date, session_uuid, action_type ]`, `[ start_date, session_uuid, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, session_uuid ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, session_uuid ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, session_uuid ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, session_uuid, success ]`, `[ end_date, session_uuid, status ]`, `[ end_date, session_uuid, action_type ]`, `[ end_date, session_uuid, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, session_uuid ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, session_uuid ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, session_uuid, success ]`, `[ path, session_uuid, status ]`, `[ path, session_uuid, action_type ]`, `[ path, session_uuid, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, session_uuid ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, session_uuid, success ]`, `[ true_path, session_uuid, status ]`, `[ true_path, session_uuid, action_type ]`, `[ true_path, session_uuid, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, session_uuid, success ]`, `[ remote_ip, session_uuid, status ]`, `[ remote_ip, session_uuid, action_type ]`, `[ remote_ip, session_uuid, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ session_uuid, success, status ]`, `[ session_uuid, success, action_type ]`, `[ session_uuid, success, username ]`, `[ session_uuid, status, action_type ]`, `[ session_uuid, status, username ]`, `[ session_uuid, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, session_uuid ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, session_uuid ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, session_uuid ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, session_uuid, success ]`, `[ start_date, end_date, session_uuid, status ]`, `[ start_date, end_date, session_uuid, action_type ]`, `[ start_date, end_date, session_uuid, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, session_uuid ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, session_uuid ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, session_uuid, success ]`, `[ start_date, path, session_uuid, status ]`, `[ start_date, path, session_uuid, action_type ]`, `[ start_date, path, session_uuid, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, session_uuid, success ]`, `[ start_date, true_path, session_uuid, status ]`, `[ start_date, true_path, session_uuid, action_type ]`, `[ start_date, true_path, session_uuid, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success ]`, `[ start_date, remote_ip, session_uuid, status ]`, `[ start_date, remote_ip, session_uuid, action_type ]`, `[ start_date, remote_ip, session_uuid, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, session_uuid, success, status ]`, `[ start_date, session_uuid, success, action_type ]`, `[ start_date, session_uuid, success, username ]`, `[ start_date, session_uuid, status, action_type ]`, `[ start_date, session_uuid, status, username ]`, `[ start_date, session_uuid, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, session_uuid ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, session_uuid ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, session_uuid, success ]`, `[ end_date, path, session_uuid, status ]`, `[ end_date, path, session_uuid, action_type ]`, `[ end_date, path, session_uuid, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, session_uuid, success ]`, `[ end_date, true_path, session_uuid, status ]`, `[ end_date, true_path, session_uuid, action_type ]`, `[ end_date, true_path, session_uuid, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success ]`, `[ end_date, remote_ip, session_uuid, status ]`, `[ end_date, remote_ip, session_uuid, action_type ]`, `[ end_date, remote_ip, session_uuid, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, session_uuid, success, status ]`, `[ end_date, session_uuid, success, action_type ]`, `[ end_date, session_uuid, success, username ]`, `[ end_date, session_uuid, status, action_type ]`, `[ end_date, session_uuid, status, username ]`, `[ end_date, session_uuid, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, session_uuid, success ]`, `[ path, true_path, session_uuid, status ]`, `[ path, true_path, session_uuid, action_type ]`, `[ path, true_path, session_uuid, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, session_uuid, success ]`, `[ path, remote_ip, session_uuid, status ]`, `[ path, remote_ip, session_uuid, action_type ]`, `[ path, remote_ip, session_uuid, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, session_uuid, success, status ]`, `[ path, session_uuid, success, action_type ]`, `[ path, session_uuid, success, username ]`, `[ path, session_uuid, status, action_type ]`, `[ path, session_uuid, status, username ]`, `[ path, session_uuid, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success ]`, `[ true_path, remote_ip, session_uuid, status ]`, `[ true_path, remote_ip, session_uuid, action_type ]`, `[ true_path, remote_ip, session_uuid, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, session_uuid, success, status ]`, `[ true_path, session_uuid, success, action_type ]`, `[ true_path, session_uuid, success, username ]`, `[ true_path, session_uuid, status, action_type ]`, `[ true_path, session_uuid, status, username ]`, `[ true_path, session_uuid, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status ]`, `[ remote_ip, session_uuid, success, action_type ]`, `[ remote_ip, session_uuid, success, username ]`, `[ remote_ip, session_uuid, status, action_type ]`, `[ remote_ip, session_uuid, status, username ]`, `[ remote_ip, session_uuid, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ session_uuid, success, status, action_type ]`, `[ session_uuid, success, status, username ]`, `[ session_uuid, success, action_type, username ]`, `[ session_uuid, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, session_uuid ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, session_uuid, success ]`, `[ start_date, end_date, path, session_uuid, status ]`, `[ start_date, end_date, path, session_uuid, action_type ]`, `[ start_date, end_date, path, session_uuid, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, session_uuid, success ]`, `[ start_date, end_date, true_path, session_uuid, status ]`, `[ start_date, end_date, true_path, session_uuid, action_type ]`, `[ start_date, end_date, true_path, session_uuid, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success ]`, `[ start_date, end_date, remote_ip, session_uuid, status ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status ]`, `[ start_date, end_date, session_uuid, success, action_type ]`, `[ start_date, end_date, session_uuid, success, username ]`, `[ start_date, end_date, session_uuid, status, action_type ]`, `[ start_date, end_date, session_uuid, status, username ]`, `[ start_date, end_date, session_uuid, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, session_uuid, success ]`, `[ start_date, path, true_path, session_uuid, status ]`, `[ start_date, path, true_path, session_uuid, action_type ]`, `[ start_date, path, true_path, session_uuid, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success ]`, `[ start_date, path, remote_ip, session_uuid, status ]`, `[ start_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, remote_ip, session_uuid, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, session_uuid, success, status ]`, `[ start_date, path, session_uuid, success, action_type ]`, `[ start_date, path, session_uuid, success, username ]`, `[ start_date, path, session_uuid, status, action_type ]`, `[ start_date, path, session_uuid, status, username ]`, `[ start_date, path, session_uuid, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status ]`, `[ start_date, true_path, session_uuid, success, action_type ]`, `[ start_date, true_path, session_uuid, success, username ]`, `[ start_date, true_path, session_uuid, status, action_type ]`, `[ start_date, true_path, session_uuid, status, username ]`, `[ start_date, true_path, session_uuid, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status ]`, `[ start_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, remote_ip, session_uuid, success, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, remote_ip, session_uuid, status, username ]`, `[ start_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type ]`, `[ start_date, session_uuid, success, status, username ]`, `[ start_date, session_uuid, success, action_type, username ]`, `[ start_date, session_uuid, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, session_uuid, success ]`, `[ end_date, path, true_path, session_uuid, status ]`, `[ end_date, path, true_path, session_uuid, action_type ]`, `[ end_date, path, true_path, session_uuid, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success ]`, `[ end_date, path, remote_ip, session_uuid, status ]`, `[ end_date, path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, remote_ip, session_uuid, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, session_uuid, success, status ]`, `[ end_date, path, session_uuid, success, action_type ]`, `[ end_date, path, session_uuid, success, username ]`, `[ end_date, path, session_uuid, status, action_type ]`, `[ end_date, path, session_uuid, status, username ]`, `[ end_date, path, session_uuid, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success ]`, `[ end_date, true_path, remote_ip, session_uuid, status ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status ]`, `[ end_date, true_path, session_uuid, success, action_type ]`, `[ end_date, true_path, session_uuid, success, username ]`, `[ end_date, true_path, session_uuid, status, action_type ]`, `[ end_date, true_path, session_uuid, status, username ]`, `[ end_date, true_path, session_uuid, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status ]`, `[ end_date, remote_ip, session_uuid, success, action_type ]`, `[ end_date, remote_ip, session_uuid, success, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type ]`, `[ end_date, remote_ip, session_uuid, status, username ]`, `[ end_date, remote_ip, session_uuid, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type ]`, `[ end_date, session_uuid, success, status, username ]`, `[ end_date, session_uuid, success, action_type, username ]`, `[ end_date, session_uuid, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success ]`, `[ path, true_path, remote_ip, session_uuid, status ]`, `[ path, true_path, remote_ip, session_uuid, action_type ]`, `[ path, true_path, remote_ip, session_uuid, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, session_uuid, success, status ]`, `[ path, true_path, session_uuid, success, action_type ]`, `[ path, true_path, session_uuid, success, username ]`, `[ path, true_path, session_uuid, status, action_type ]`, `[ path, true_path, session_uuid, status, username ]`, `[ path, true_path, session_uuid, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status ]`, `[ path, remote_ip, session_uuid, success, action_type ]`, `[ path, remote_ip, session_uuid, success, username ]`, `[ path, remote_ip, session_uuid, status, action_type ]`, `[ path, remote_ip, session_uuid, status, username ]`, `[ path, remote_ip, session_uuid, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type ]`, `[ path, session_uuid, success, status, username ]`, `[ path, session_uuid, success, action_type, username ]`, `[ path, session_uuid, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status ]`, `[ true_path, remote_ip, session_uuid, success, action_type ]`, `[ true_path, remote_ip, session_uuid, success, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type ]`, `[ true_path, remote_ip, session_uuid, status, username ]`, `[ true_path, remote_ip, session_uuid, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type ]`, `[ true_path, session_uuid, success, status, username ]`, `[ true_path, session_uuid, success, action_type, username ]`, `[ true_path, session_uuid, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type ]`, `[ remote_ip, session_uuid, success, status, username ]`, `[ remote_ip, session_uuid, success, action_type, username ]`, `[ remote_ip, session_uuid, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success ]`, `[ start_date, end_date, path, true_path, session_uuid, status ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status ]`, `[ start_date, end_date, path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, session_uuid, success, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, session_uuid, status, username ]`, `[ start_date, end_date, path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, status, username ]`, `[ start_date, end_date, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type ]`, `[ start_date, end_date, session_uuid, success, status, username ]`, `[ start_date, end_date, session_uuid, success, action_type, username ]`, `[ start_date, end_date, session_uuid, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status ]`, `[ start_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, path, true_path, session_uuid, success, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, path, true_path, session_uuid, status, username ]`, `[ start_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type ]`, `[ start_date, path, session_uuid, success, status, username ]`, `[ start_date, path, session_uuid, success, action_type, username ]`, `[ start_date, path, session_uuid, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, true_path, session_uuid, success, status, username ]`, `[ start_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ start_date, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status ]`, `[ end_date, path, true_path, session_uuid, success, action_type ]`, `[ end_date, path, true_path, session_uuid, success, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type ]`, `[ end_date, path, true_path, session_uuid, status, username ]`, `[ end_date, path, true_path, session_uuid, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type ]`, `[ end_date, path, session_uuid, success, status, username ]`, `[ end_date, path, session_uuid, success, action_type, username ]`, `[ end_date, path, session_uuid, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type ]`, `[ end_date, true_path, session_uuid, success, status, username ]`, `[ end_date, true_path, session_uuid, success, action_type, username ]`, `[ end_date, true_path, session_uuid, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, remote_ip, session_uuid, success, status, username ]`, `[ end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ end_date, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, status, username ]`, `[ path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type ]`, `[ path, true_path, session_uuid, success, status, username ]`, `[ path, true_path, session_uuid, success, action_type, username ]`, `[ path, true_path, session_uuid, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, remote_ip, session_uuid, success, status, username ]`, `[ path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ path, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ true_path, remote_ip, session_uuid, success, status, username ]`, `[ true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ true_path, session_uuid, success, status, action_type, username ]`, `[ remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, session_uuid, success, status, username ]`, `[ end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, session_uuid, success, status, action_type, username ]`, `[ path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, session_uuid, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, session_uuid, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, session_uuid, success, status, action_type, username ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SftpActionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SftpActionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SftpActionLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of SftpActionLogs objects.",
            "x-ms-summary": "A list of SftpActionLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sftp_action_logs",
          "SFTP Action Logs"
        ],
        "description": "List SFTP Action Logs",
        "operationId": "GetSftpActionLogs",
        "summary": "List SFTP Action Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "action_type": {
              "sort": [],
              "type": "pattern"
            },
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "path": {
              "sort": [],
              "type": "pattern"
            },
            "remote_ip": {
              "sort": [],
              "type": "exact"
            },
            "session_uuid": {
              "sort": [],
              "type": "exact"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            },
            "success": {
              "sort": [],
              "type": "exact"
            },
            "true_path": {
              "sort": [],
              "type": "pattern"
            },
            "username": {
              "sort": [],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/sftp_host_keys": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SftpHostKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SftpHostKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SftpHostKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of SftpHostKeys objects.",
            "x-ms-summary": "A list of SftpHostKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sftp_host_keys",
          "SFTP Host Keys"
        ],
        "description": "List SFTP Host Keys",
        "operationId": "GetSftpHostKeys",
        "summary": "List SFTP Host Keys",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              }
            },
            "description": "The SftpHostKeys object.",
            "x-ms-summary": "The SftpHostKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sftp_host_keys",
          "SFTP Host Keys"
        ],
        "description": "Create SFTP Host Key",
        "operationId": "PostSftpHostKeys",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostSftpHostKeys"
        },
        "summary": "Create SFTP Host Key",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "encryption"
        ]
      }
    },
    "/sftp_host_keys/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Sftp Host Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Sftp Host Key ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sftp_host_keys",
          "SFTP Host Keys"
        ],
        "description": "Delete SFTP Host Key",
        "operationId": "DeleteSftpHostKeysId",
        "summary": "Delete SFTP Host Key",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Sftp Host Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Sftp Host Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              }
            },
            "description": "The SftpHostKeys object.",
            "x-ms-summary": "The SftpHostKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sftp_host_keys",
          "SFTP Host Keys"
        ],
        "description": "Show SFTP Host Key",
        "operationId": "GetSftpHostKeysId",
        "summary": "Show SFTP Host Key",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "encryption"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Sftp Host Key ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Sftp Host Key ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SftpHostKeyEntity"
                }
              }
            },
            "description": "The SftpHostKeys object.",
            "x-ms-summary": "The SftpHostKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sftp_host_keys",
          "SFTP Host Keys"
        ],
        "description": "Update SFTP Host Key",
        "operationId": "PatchSftpHostKeysId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "The friendly name of this SFTP Host Key.",
                    "type": "string"
                  },
                  "private_key": {
                    "description": "The private key data.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update SFTP Host Key",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "encryption"
        ]
      }
    },
    "/share_groups": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShareGroupEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShareGroupEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShareGroupEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ShareGroups objects.",
            "x-ms-summary": "A list of ShareGroups objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "share_groups",
          "Share Groups"
        ],
        "description": "List Share Groups",
        "operationId": "GetShareGroups",
        "summary": "List Share Groups",
        "x-authentication": [
          "user"
        ],
        "x-category": [
          "sharing"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              }
            },
            "description": "The ShareGroups object.",
            "x-ms-summary": "The ShareGroups object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "share_groups",
          "Share Groups"
        ],
        "description": "Create Share Group",
        "operationId": "PostShareGroups",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "A list of share group members.",
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name of the share group",
                    "type": "string"
                  },
                  "notes": {
                    "description": "Additional notes of the share group",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Share Group",
        "x-authentication": [
          "user"
        ],
        "x-category": [
          "sharing"
        ]
      }
    },
    "/share_groups/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Share Group ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Share Group ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "share_groups",
          "Share Groups"
        ],
        "description": "Delete Share Group",
        "operationId": "DeleteShareGroupsId",
        "summary": "Delete Share Group",
        "x-authentication": [
          "user"
        ],
        "x-category": [
          "sharing"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Share Group ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Share Group ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              }
            },
            "description": "The ShareGroups object.",
            "x-ms-summary": "The ShareGroups object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "share_groups",
          "Share Groups"
        ],
        "description": "Show Share Group",
        "operationId": "GetShareGroupsId",
        "summary": "Show Share Group",
        "x-authentication": [
          "user"
        ],
        "x-category": [
          "sharing"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Share Group ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Share Group ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShareGroupEntity"
                }
              }
            },
            "description": "The ShareGroups object.",
            "x-ms-summary": "The ShareGroups object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "share_groups",
          "Share Groups"
        ],
        "description": "Update Share Group",
        "operationId": "PatchShareGroupsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "members": {
                    "description": "A list of share group members.",
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name of the share group",
                    "type": "string"
                  },
                  "notes": {
                    "description": "Additional notes of the share group",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Share Group",
        "x-authentication": [
          "user"
        ],
        "x-category": [
          "sharing"
        ]
      }
    },
    "/siem_http_destinations": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of SiemHttpDestinations objects.",
            "x-ms-summary": "A list of SiemHttpDestinations objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "siem_http_destinations",
          "SIEM HTTP Destinations"
        ],
        "description": "List SIEM HTTP Destinations",
        "operationId": "GetSiemHttpDestinations",
        "summary": "List SIEM HTTP Destinations",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              }
            },
            "description": "The SiemHttpDestinations object.",
            "x-ms-summary": "The SiemHttpDestinations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "siem_http_destinations",
          "SIEM HTTP Destinations"
        ],
        "description": "Create SIEM HTTP Destination",
        "operationId": "PostSiemHttpDestinations",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostSiemHttpDestinations"
        },
        "summary": "Create SIEM HTTP Destination",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/siem_http_destinations/send_test_entry": {
      "post": {
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "siem_http_destinations",
          "SIEM HTTP Destinations"
        ],
        "description": "send_test_entry SIEM HTTP Destination",
        "operationId": "PostSiemHttpDestinationsSendTestEntry",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additional_headers": {
                    "description": "Additional HTTP Headers included in calls to the destination URL",
                    "type": "object"
                  },
                  "api_request_send_enabled": {
                    "description": "Whether or not sending is enabled for api_request logs.",
                    "type": "boolean"
                  },
                  "automation_send_enabled": {
                    "description": "Whether or not sending is enabled for automation logs.",
                    "type": "boolean"
                  },
                  "azure_dcr_immutable_id": {
                    "description": "Applicable only for destination type: azure. Immutable ID of the Data Collection Rule.",
                    "type": "string"
                  },
                  "azure_oauth_client_credentials_client_id": {
                    "description": "Applicable only for destination type: azure. Client Credentials OAuth Client ID.",
                    "type": "string"
                  },
                  "azure_oauth_client_credentials_client_secret": {
                    "description": "Applicable only for destination type: azure. Client Credentials OAuth Client Secret.",
                    "type": "string"
                  },
                  "azure_oauth_client_credentials_tenant_id": {
                    "description": "Applicable only for destination type: azure. Client Credentials OAuth Tenant ID.",
                    "type": "string"
                  },
                  "azure_stream_name": {
                    "description": "Applicable only for destination type: azure. Name of the stream in the DCR that represents the destination table.",
                    "type": "string"
                  },
                  "datadog_api_key": {
                    "description": "Applicable only for destination type: datadog. API key provided by Datadog.",
                    "type": "string"
                  },
                  "destination_type": {
                    "description": "Destination Type",
                    "enum": [
                      "generic",
                      "splunk",
                      "azure",
                      "qradar",
                      "sumo",
                      "rapid7",
                      "solar_winds",
                      "new_relic",
                      "datadog"
                    ],
                    "type": "string"
                  },
                  "destination_url": {
                    "description": "Destination Url",
                    "type": "string"
                  },
                  "email_send_enabled": {
                    "description": "Whether or not sending is enabled for email logs.",
                    "type": "boolean"
                  },
                  "exavault_api_request_send_enabled": {
                    "description": "Whether or not sending is enabled for exavault_api_request logs.",
                    "type": "boolean"
                  },
                  "ftp_action_send_enabled": {
                    "description": "Whether or not sending is enabled for ftp_action logs.",
                    "type": "boolean"
                  },
                  "generic_payload_type": {
                    "description": "Applicable only for destination type: generic. Indicates the type of HTTP body. Can be json_newline or json_array. json_newline is multiple log entries as JSON separated by newlines. json_array is a single JSON array containing multiple log entries as JSON.",
                    "enum": [
                      "json_newline",
                      "json_array"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Name for this Destination",
                    "type": "string"
                  },
                  "new_relic_api_key": {
                    "description": "Applicable only for destination type: new_relic. API key provided by New Relic.",
                    "type": "string"
                  },
                  "outbound_connection_send_enabled": {
                    "description": "Whether or not sending is enabled for outbound_connection logs.",
                    "type": "boolean"
                  },
                  "public_hosting_request_send_enabled": {
                    "description": "Whether or not sending is enabled for public_hosting_request logs.",
                    "type": "boolean"
                  },
                  "qradar_password": {
                    "description": "Applicable only for destination type: qradar. Basic auth password provided by QRadar.",
                    "type": "string"
                  },
                  "qradar_username": {
                    "description": "Applicable only for destination type: qradar. Basic auth username provided by QRadar.",
                    "type": "string"
                  },
                  "sending_active": {
                    "description": "Whether this SIEM HTTP Destination is currently being sent to or not",
                    "type": "boolean"
                  },
                  "sftp_action_send_enabled": {
                    "description": "Whether or not sending is enabled for sftp_action logs.",
                    "type": "boolean"
                  },
                  "siem_http_destination_id": {
                    "description": "SIEM HTTP Destination ID",
                    "format": "int32",
                    "type": "integer"
                  },
                  "solar_winds_token": {
                    "description": "Applicable only for destination type: solar_winds. Authentication token provided by Solar Winds.",
                    "type": "string"
                  },
                  "splunk_token": {
                    "description": "Applicable only for destination type: splunk. Authentication token provided by Splunk.",
                    "type": "string"
                  },
                  "sync_send_enabled": {
                    "description": "Whether or not sending is enabled for sync logs.",
                    "type": "boolean"
                  },
                  "web_dav_action_send_enabled": {
                    "description": "Whether or not sending is enabled for web_dav_action logs.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "send_test_entry SIEM HTTP Destination",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/siem_http_destinations/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Siem Http Destination ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Siem Http Destination ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "siem_http_destinations",
          "SIEM HTTP Destinations"
        ],
        "description": "Delete SIEM HTTP Destination",
        "operationId": "DeleteSiemHttpDestinationsId",
        "summary": "Delete SIEM HTTP Destination",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Siem Http Destination ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Siem Http Destination ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              }
            },
            "description": "The SiemHttpDestinations object.",
            "x-ms-summary": "The SiemHttpDestinations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "siem_http_destinations",
          "SIEM HTTP Destinations"
        ],
        "description": "Show SIEM HTTP Destination",
        "operationId": "GetSiemHttpDestinationsId",
        "summary": "Show SIEM HTTP Destination",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Siem Http Destination ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Siem Http Destination ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiemHttpDestinationEntity"
                }
              }
            },
            "description": "The SiemHttpDestinations object.",
            "x-ms-summary": "The SiemHttpDestinations object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "siem_http_destinations",
          "SIEM HTTP Destinations"
        ],
        "description": "Update SIEM HTTP Destination",
        "operationId": "PatchSiemHttpDestinationsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additional_headers": {
                    "description": "Additional HTTP Headers included in calls to the destination URL",
                    "type": "object"
                  },
                  "api_request_send_enabled": {
                    "description": "Whether or not sending is enabled for api_request logs.",
                    "type": "boolean"
                  },
                  "automation_send_enabled": {
                    "description": "Whether or not sending is enabled for automation logs.",
                    "type": "boolean"
                  },
                  "azure_dcr_immutable_id": {
                    "description": "Applicable only for destination type: azure. Immutable ID of the Data Collection Rule.",
                    "type": "string"
                  },
                  "azure_oauth_client_credentials_client_id": {
                    "description": "Applicable only for destination type: azure. Client Credentials OAuth Client ID.",
                    "type": "string"
                  },
                  "azure_oauth_client_credentials_client_secret": {
                    "description": "Applicable only for destination type: azure. Client Credentials OAuth Client Secret.",
                    "type": "string"
                  },
                  "azure_oauth_client_credentials_tenant_id": {
                    "description": "Applicable only for destination type: azure. Client Credentials OAuth Tenant ID.",
                    "type": "string"
                  },
                  "azure_stream_name": {
                    "description": "Applicable only for destination type: azure. Name of the stream in the DCR that represents the destination table.",
                    "type": "string"
                  },
                  "datadog_api_key": {
                    "description": "Applicable only for destination type: datadog. API key provided by Datadog.",
                    "type": "string"
                  },
                  "destination_type": {
                    "description": "Destination Type",
                    "enum": [
                      "generic",
                      "splunk",
                      "azure",
                      "qradar",
                      "sumo",
                      "rapid7",
                      "solar_winds",
                      "new_relic",
                      "datadog"
                    ],
                    "type": "string"
                  },
                  "destination_url": {
                    "description": "Destination Url",
                    "type": "string"
                  },
                  "email_send_enabled": {
                    "description": "Whether or not sending is enabled for email logs.",
                    "type": "boolean"
                  },
                  "exavault_api_request_send_enabled": {
                    "description": "Whether or not sending is enabled for exavault_api_request logs.",
                    "type": "boolean"
                  },
                  "ftp_action_send_enabled": {
                    "description": "Whether or not sending is enabled for ftp_action logs.",
                    "type": "boolean"
                  },
                  "generic_payload_type": {
                    "description": "Applicable only for destination type: generic. Indicates the type of HTTP body. Can be json_newline or json_array. json_newline is multiple log entries as JSON separated by newlines. json_array is a single JSON array containing multiple log entries as JSON.",
                    "enum": [
                      "json_newline",
                      "json_array"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Name for this Destination",
                    "type": "string"
                  },
                  "new_relic_api_key": {
                    "description": "Applicable only for destination type: new_relic. API key provided by New Relic.",
                    "type": "string"
                  },
                  "outbound_connection_send_enabled": {
                    "description": "Whether or not sending is enabled for outbound_connection logs.",
                    "type": "boolean"
                  },
                  "public_hosting_request_send_enabled": {
                    "description": "Whether or not sending is enabled for public_hosting_request logs.",
                    "type": "boolean"
                  },
                  "qradar_password": {
                    "description": "Applicable only for destination type: qradar. Basic auth password provided by QRadar.",
                    "type": "string"
                  },
                  "qradar_username": {
                    "description": "Applicable only for destination type: qradar. Basic auth username provided by QRadar.",
                    "type": "string"
                  },
                  "sending_active": {
                    "description": "Whether this SIEM HTTP Destination is currently being sent to or not",
                    "type": "boolean"
                  },
                  "sftp_action_send_enabled": {
                    "description": "Whether or not sending is enabled for sftp_action logs.",
                    "type": "boolean"
                  },
                  "solar_winds_token": {
                    "description": "Applicable only for destination type: solar_winds. Authentication token provided by Solar Winds.",
                    "type": "string"
                  },
                  "splunk_token": {
                    "description": "Applicable only for destination type: splunk. Authentication token provided by Splunk.",
                    "type": "string"
                  },
                  "sync_send_enabled": {
                    "description": "Whether or not sending is enabled for sync logs.",
                    "type": "boolean"
                  },
                  "web_dav_action_send_enabled": {
                    "description": "Whether or not sending is enabled for web_dav_action logs.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update SIEM HTTP Destination",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ]
      }
    },
    "/site": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SiteEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiteEntity"
                }
              }
            },
            "description": "The Site object.",
            "x-ms-summary": "The Site object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "Sites"
        ],
        "description": "Show Site Settings",
        "operationId": "GetSite",
        "summary": "Show Site Settings",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "settings"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SiteEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiteEntity"
                }
              }
            },
            "description": "The Site object.",
            "x-ms-summary": "The Site object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "Sites"
        ],
        "description": "Update Site Settings",
        "operationId": "PatchSite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "disable_2fa_with_delay": {
                    "description": "If set to true, we will begin the process of disabling 2FA on this site.",
                    "type": "boolean"
                  },
                  "ldap_password_change": {
                    "description": "New LDAP password.",
                    "type": "string"
                  },
                  "ldap_password_change_confirmation": {
                    "description": "Confirm new LDAP password.",
                    "type": "string"
                  },
                  "login_page_background_image_delete": {
                    "description": "If true, will delete the file stored in login_page_background_image",
                    "type": "boolean"
                  },
                  "session_expiry_minutes": {
                    "description": "Session expiry in minutes",
                    "format": "int32",
                    "type": "integer"
                  },
                  "smtp_password": {
                    "description": "Password for SMTP server.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Site Settings",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "settings"
        ],
        "x-reauthentication": {
          "params": [
            "email",
            "require_2fa",
            "require_2fa_user_type",
            "disable_2fa_with_delay"
          ],
          "required": true
        }
      }
    },
    "/site/api_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ApiKeys objects.",
            "x-ms-summary": "A list of ApiKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "API Keys"
        ],
        "description": "List API Keys",
        "operationId": "GetSiteApiKeys",
        "summary": "List API Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "expires_at": {
              "sort": [
                "expires_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ],
        "x-sortable_columns": [
          "expires_at"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKeys object.",
            "x-ms-summary": "The ApiKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "API Keys"
        ],
        "description": "Create API Key",
        "operationId": "PostSiteApiKeys",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostApiKeys"
        },
        "summary": "Create API Key",
        "x-authentication": [],
        "x-category": [
          "developers"
        ],
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ]
      }
    },
    "/site/dns_records": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of DnsRecords objects.",
            "x-ms-summary": "A list of DnsRecords objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "DNS Records"
        ],
        "description": "Show Site DNS Configuration",
        "operationId": "GetSiteDnsRecords",
        "summary": "Show Site DNS Configuration",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "security"
        ],
        "x-path_aliases": [
          "site/dns_records"
        ]
      }
    },
    "/site/ip_addresses": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IpAddressEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IpAddressEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of IpAddresses objects.",
            "x-ms-summary": "A list of IpAddresses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "IP Addresses"
        ],
        "description": "List IP Addresses associated with the current site",
        "operationId": "GetSiteIpAddresses",
        "summary": "List IP Addresses associated with the current site",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "security"
        ],
        "x-path_aliases": [
          "site/ip_addresses"
        ]
      }
    },
    "/site/test-webhook": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StatusEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusEntity"
                }
              }
            },
            "description": "The Behaviors object.",
            "x-ms-summary": "The Behaviors object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "Statuses"
        ],
        "description": "Test Webhook",
        "operationId": "PostSiteTestWebhook",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostSiteTestWebhook"
        },
        "summary": "Test Webhook",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "settings"
        ],
        "x-path_aliases": [
          "site/test-webhook"
        ]
      }
    },
    "/site/usage": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSnapshotEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSnapshotEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSnapshotEntity"
                }
              }
            },
            "description": "The Site object.",
            "x-ms-summary": "The Site object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "site",
          "Usage Snapshots"
        ],
        "description": "Get the most recent usage snapshot (usage data for billing purposes) for a Site.",
        "operationId": "GetSiteUsage",
        "summary": "Get the most recent usage snapshot (usage data for billing purposes) for a Site.",
        "x-authentication": [
          "site",
          "overdue_ok",
          "billing_and_ro_admin"
        ],
        "x-category": [
          "usage"
        ]
      }
    },
    "/snapshots": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SnapshotEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Snapshots objects.",
            "x-ms-summary": "A list of Snapshots objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "snapshots",
          "Snapshots"
        ],
        "description": "List Snapshots",
        "operationId": "GetSnapshots",
        "summary": "List Snapshots",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              }
            },
            "description": "The Snapshots object.",
            "x-ms-summary": "The Snapshots object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "snapshots",
          "Snapshots"
        ],
        "description": "Create Snapshot",
        "operationId": "PostSnapshots",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchSnapshotsId"
        },
        "summary": "Create Snapshot",
        "x-authentication": [
          "can_write_and_bundle"
        ],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/snapshots/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Snapshot ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Snapshot ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "snapshots",
          "Snapshots"
        ],
        "description": "Delete Snapshot",
        "operationId": "DeleteSnapshotsId",
        "summary": "Delete Snapshot",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Snapshot ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Snapshot ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              }
            },
            "description": "The Snapshots object.",
            "x-ms-summary": "The Snapshots object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "snapshots",
          "Snapshots"
        ],
        "description": "Show Snapshot",
        "operationId": "GetSnapshotsId",
        "summary": "Show Snapshot",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Snapshot ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Snapshot ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEntity"
                }
              }
            },
            "description": "The Snapshots object.",
            "x-ms-summary": "The Snapshots object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "snapshots",
          "Snapshots"
        ],
        "description": "Update Snapshot",
        "operationId": "PatchSnapshotsId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "paths": {
                    "description": "An array of paths to add to the snapshot.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "expires_at": {
                    "description": "When the snapshot expires.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "A name for the snapshot.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update Snapshot",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/snapshots/{id}/finalize": {
      "post": {
        "parameters": [
          {
            "description": "Snapshot ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Snapshot ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "snapshots",
          "Snapshots"
        ],
        "description": "Finalize Snapshot",
        "operationId": "PostSnapshotsIdFinalize",
        "summary": "Finalize Snapshot",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "file_system"
        ]
      }
    },
    "/sso_strategies": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are .",
            "example": {
              "": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are ."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SsoStrategyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SsoStrategyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SsoStrategyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of SsoStrategies objects.",
            "x-ms-summary": "A list of SsoStrategies objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sso_strategies",
          "SSO Strategies"
        ],
        "description": "List SSO Strategies",
        "operationId": "GetSsoStrategies",
        "summary": "List SSO Strategies",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-sortable_columns": []
      }
    },
    "/sso_strategies/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Sso Strategy ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Sso Strategy ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SsoStrategyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/SsoStrategyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SsoStrategyEntity"
                }
              }
            },
            "description": "The SsoStrategies object.",
            "x-ms-summary": "The SsoStrategies object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sso_strategies",
          "SSO Strategies"
        ],
        "description": "Show SSO Strategy",
        "operationId": "GetSsoStrategiesId",
        "summary": "Show SSO Strategy",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/sso_strategies/{id}/sync": {
      "post": {
        "parameters": [
          {
            "description": "Sso Strategy ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Sso Strategy ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sso_strategies",
          "SSO Strategies"
        ],
        "description": "Synchronize provisioning data with the SSO remote server.",
        "operationId": "PostSsoStrategiesIdSync",
        "summary": "Synchronize provisioning data with the SSO remote server.",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/styles/{path}": {
      "delete": {
        "parameters": [
          {
            "description": "Style path.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Style path."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "styles",
          "Styles"
        ],
        "description": "Delete Style",
        "operationId": "DeleteStylesPath",
        "summary": "Delete Style",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "settings"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "Style path.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Style path."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StyleEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StyleEntity"
                }
              }
            },
            "description": "The Styles object.",
            "x-ms-summary": "The Styles object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "styles",
          "Styles"
        ],
        "description": "Show Style",
        "operationId": "GetStylesPath",
        "summary": "Show Style",
        "x-authentication": [],
        "x-category": [
          "settings"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "Style path.",
            "in": "path",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Style path."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/StyleEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StyleEntity"
                }
              }
            },
            "description": "The Styles object.",
            "x-ms-summary": "The Styles object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "styles",
          "Styles"
        ],
        "description": "Update Style",
        "operationId": "PatchStylesPath",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "summary": "Update Style",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "settings"
        ]
      }
    },
    "/sync_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `external_event_id`, `operation`, `status` or `sync_id`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ external_event_id ]`, `[ operation ]`, `[ status ]`, `[ sync_id ]`, `[ start_date, end_date ]`, `[ start_date, external_event_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, sync_id ]`, `[ end_date, external_event_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, sync_id ]`, `[ external_event_id, operation ]`, `[ external_event_id, status ]`, `[ external_event_id, sync_id ]`, `[ operation, status ]`, `[ operation, sync_id ]`, `[ status, sync_id ]`, `[ start_date, end_date, external_event_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, sync_id ]`, `[ start_date, external_event_id, operation ]`, `[ start_date, external_event_id, status ]`, `[ start_date, external_event_id, sync_id ]`, `[ start_date, operation, status ]`, `[ start_date, operation, sync_id ]`, `[ start_date, status, sync_id ]`, `[ end_date, external_event_id, operation ]`, `[ end_date, external_event_id, status ]`, `[ end_date, external_event_id, sync_id ]`, `[ end_date, operation, status ]`, `[ end_date, operation, sync_id ]`, `[ end_date, status, sync_id ]`, `[ external_event_id, operation, status ]`, `[ external_event_id, operation, sync_id ]`, `[ external_event_id, status, sync_id ]`, `[ operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation ]`, `[ start_date, end_date, external_event_id, status ]`, `[ start_date, end_date, external_event_id, sync_id ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, sync_id ]`, `[ start_date, end_date, status, sync_id ]`, `[ start_date, external_event_id, operation, status ]`, `[ start_date, external_event_id, operation, sync_id ]`, `[ start_date, external_event_id, status, sync_id ]`, `[ start_date, operation, status, sync_id ]`, `[ end_date, external_event_id, operation, status ]`, `[ end_date, external_event_id, operation, sync_id ]`, `[ end_date, external_event_id, status, sync_id ]`, `[ end_date, operation, status, sync_id ]`, `[ external_event_id, operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation, status ]`, `[ start_date, end_date, external_event_id, operation, sync_id ]`, `[ start_date, end_date, external_event_id, status, sync_id ]`, `[ start_date, end_date, operation, status, sync_id ]`, `[ start_date, external_event_id, operation, status, sync_id ]` or `[ end_date, external_event_id, operation, status, sync_id ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `external_event_id`, `operation`, `status` or `sync_id`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ external_event_id ]`, `[ operation ]`, `[ status ]`, `[ sync_id ]`, `[ start_date, end_date ]`, `[ start_date, external_event_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, sync_id ]`, `[ end_date, external_event_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, sync_id ]`, `[ external_event_id, operation ]`, `[ external_event_id, status ]`, `[ external_event_id, sync_id ]`, `[ operation, status ]`, `[ operation, sync_id ]`, `[ status, sync_id ]`, `[ start_date, end_date, external_event_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, sync_id ]`, `[ start_date, external_event_id, operation ]`, `[ start_date, external_event_id, status ]`, `[ start_date, external_event_id, sync_id ]`, `[ start_date, operation, status ]`, `[ start_date, operation, sync_id ]`, `[ start_date, status, sync_id ]`, `[ end_date, external_event_id, operation ]`, `[ end_date, external_event_id, status ]`, `[ end_date, external_event_id, sync_id ]`, `[ end_date, operation, status ]`, `[ end_date, operation, sync_id ]`, `[ end_date, status, sync_id ]`, `[ external_event_id, operation, status ]`, `[ external_event_id, operation, sync_id ]`, `[ external_event_id, status, sync_id ]`, `[ operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation ]`, `[ start_date, end_date, external_event_id, status ]`, `[ start_date, end_date, external_event_id, sync_id ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, sync_id ]`, `[ start_date, end_date, status, sync_id ]`, `[ start_date, external_event_id, operation, status ]`, `[ start_date, external_event_id, operation, sync_id ]`, `[ start_date, external_event_id, status, sync_id ]`, `[ start_date, operation, status, sync_id ]`, `[ end_date, external_event_id, operation, status ]`, `[ end_date, external_event_id, operation, sync_id ]`, `[ end_date, external_event_id, status, sync_id ]`, `[ end_date, operation, status, sync_id ]`, `[ external_event_id, operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation, status ]`, `[ start_date, end_date, external_event_id, operation, sync_id ]`, `[ start_date, end_date, external_event_id, status, sync_id ]`, `[ start_date, end_date, operation, status, sync_id ]`, `[ start_date, external_event_id, operation, status, sync_id ]` or `[ end_date, external_event_id, operation, status, sync_id ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation` and `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ external_event_id ]`, `[ operation ]`, `[ status ]`, `[ sync_id ]`, `[ start_date, end_date ]`, `[ start_date, external_event_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, sync_id ]`, `[ end_date, external_event_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, sync_id ]`, `[ external_event_id, operation ]`, `[ external_event_id, status ]`, `[ external_event_id, sync_id ]`, `[ operation, status ]`, `[ operation, sync_id ]`, `[ status, sync_id ]`, `[ start_date, end_date, external_event_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, sync_id ]`, `[ start_date, external_event_id, operation ]`, `[ start_date, external_event_id, status ]`, `[ start_date, external_event_id, sync_id ]`, `[ start_date, operation, status ]`, `[ start_date, operation, sync_id ]`, `[ start_date, status, sync_id ]`, `[ end_date, external_event_id, operation ]`, `[ end_date, external_event_id, status ]`, `[ end_date, external_event_id, sync_id ]`, `[ end_date, operation, status ]`, `[ end_date, operation, sync_id ]`, `[ end_date, status, sync_id ]`, `[ external_event_id, operation, status ]`, `[ external_event_id, operation, sync_id ]`, `[ external_event_id, status, sync_id ]`, `[ operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation ]`, `[ start_date, end_date, external_event_id, status ]`, `[ start_date, end_date, external_event_id, sync_id ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, sync_id ]`, `[ start_date, end_date, status, sync_id ]`, `[ start_date, external_event_id, operation, status ]`, `[ start_date, external_event_id, operation, sync_id ]`, `[ start_date, external_event_id, status, sync_id ]`, `[ start_date, operation, status, sync_id ]`, `[ end_date, external_event_id, operation, status ]`, `[ end_date, external_event_id, operation, sync_id ]`, `[ end_date, external_event_id, status, sync_id ]`, `[ end_date, operation, status, sync_id ]`, `[ external_event_id, operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation, status ]`, `[ start_date, end_date, external_event_id, operation, sync_id ]`, `[ start_date, end_date, external_event_id, status, sync_id ]`, `[ start_date, end_date, operation, status, sync_id ]`, `[ start_date, external_event_id, operation, status, sync_id ]` or `[ end_date, external_event_id, operation, status, sync_id ]`.",
            "example": {
              "operation": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `operation` and `status`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ external_event_id ]`, `[ operation ]`, `[ status ]`, `[ sync_id ]`, `[ start_date, end_date ]`, `[ start_date, external_event_id ]`, `[ start_date, operation ]`, `[ start_date, status ]`, `[ start_date, sync_id ]`, `[ end_date, external_event_id ]`, `[ end_date, operation ]`, `[ end_date, status ]`, `[ end_date, sync_id ]`, `[ external_event_id, operation ]`, `[ external_event_id, status ]`, `[ external_event_id, sync_id ]`, `[ operation, status ]`, `[ operation, sync_id ]`, `[ status, sync_id ]`, `[ start_date, end_date, external_event_id ]`, `[ start_date, end_date, operation ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, sync_id ]`, `[ start_date, external_event_id, operation ]`, `[ start_date, external_event_id, status ]`, `[ start_date, external_event_id, sync_id ]`, `[ start_date, operation, status ]`, `[ start_date, operation, sync_id ]`, `[ start_date, status, sync_id ]`, `[ end_date, external_event_id, operation ]`, `[ end_date, external_event_id, status ]`, `[ end_date, external_event_id, sync_id ]`, `[ end_date, operation, status ]`, `[ end_date, operation, sync_id ]`, `[ end_date, status, sync_id ]`, `[ external_event_id, operation, status ]`, `[ external_event_id, operation, sync_id ]`, `[ external_event_id, status, sync_id ]`, `[ operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation ]`, `[ start_date, end_date, external_event_id, status ]`, `[ start_date, end_date, external_event_id, sync_id ]`, `[ start_date, end_date, operation, status ]`, `[ start_date, end_date, operation, sync_id ]`, `[ start_date, end_date, status, sync_id ]`, `[ start_date, external_event_id, operation, status ]`, `[ start_date, external_event_id, operation, sync_id ]`, `[ start_date, external_event_id, status, sync_id ]`, `[ start_date, operation, status, sync_id ]`, `[ end_date, external_event_id, operation, status ]`, `[ end_date, external_event_id, operation, sync_id ]`, `[ end_date, external_event_id, status, sync_id ]`, `[ end_date, operation, status, sync_id ]`, `[ external_event_id, operation, status, sync_id ]`, `[ start_date, end_date, external_event_id, operation, status ]`, `[ start_date, end_date, external_event_id, operation, sync_id ]`, `[ start_date, end_date, external_event_id, status, sync_id ]`, `[ start_date, end_date, operation, status, sync_id ]`, `[ start_date, external_event_id, operation, status, sync_id ]` or `[ end_date, external_event_id, operation, status, sync_id ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SyncLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SyncLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SyncLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of SyncLogs objects.",
            "x-ms-summary": "A list of SyncLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "sync_logs",
          "Sync Logs"
        ],
        "description": "List Sync Logs",
        "operationId": "GetSyncLogs",
        "summary": "List Sync Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "external_event_id": {
              "sort": [],
              "type": "exact"
            },
            "operation": {
              "sort": [],
              "type": "pattern"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            },
            "sync_id": {
              "sort": [],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/usage_daily_snapshots": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `date`.",
            "example": {
              "date": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `date`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `date` and `usage_snapshot_id`. Valid field combinations are `[ usage_snapshot_id, date ]`.",
            "example": {
              "date": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `date` and `usage_snapshot_id`. Valid field combinations are `[ usage_snapshot_id, date ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `date`.",
            "example": {
              "date": "test"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `date`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `date`.",
            "example": {
              "date": "test"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `date`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `date`.",
            "example": {
              "date": "test"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `date`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `date`.",
            "example": {
              "date": "test"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `date`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageDailySnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageDailySnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageDailySnapshotEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UsageDailySnapshots objects.",
            "x-ms-summary": "A list of UsageDailySnapshots objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "usage_daily_snapshots",
          "Usage Daily Snapshots"
        ],
        "description": "List Usage Daily Snapshots",
        "operationId": "GetUsageDailySnapshots",
        "summary": "List Usage Daily Snapshots",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "usage"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "date": {
              "sort": [
                "date"
              ],
              "type": "range"
            },
            "usage_snapshot_id": {
              "sort": [
                "date"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "usage_snapshot_id",
                "date"
              ],
              "sort": [
                "date"
              ]
            }
          ]
        },
        "x-sortable_columns": [
          "date"
        ]
      }
    },
    "/usage_snapshots": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageSnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageSnapshotEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageSnapshotEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UsageSnapshots objects.",
            "x-ms-summary": "A list of UsageSnapshots objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "usage_snapshots",
          "Usage Snapshots"
        ],
        "description": "List Usage Snapshots",
        "operationId": "GetUsageSnapshots",
        "summary": "List Usage Snapshots",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "usage"
        ]
      }
    },
    "/user": {
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            },
            "description": "The Users object.",
            "x-ms-summary": "The Users object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user",
          "Users"
        ],
        "description": "Update User",
        "operationId": "PatchUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchUser"
        },
        "summary": "Update User",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true,
        "x-path_aliases": [
          "user"
        ],
        "x-reauthentication": {
          "params": [
            "password",
            "change_password",
            "email",
            "site_admin"
          ],
          "required": true
        }
      }
    },
    "/user/api_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ApiKeys objects.",
            "x-ms-summary": "A list of ApiKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user",
          "API Keys"
        ],
        "description": "List API Keys",
        "operationId": "GetUserApiKeys",
        "summary": "List API Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "expires_at": {
              "sort": [
                "expires_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ],
        "x-sortable_columns": [
          "expires_at"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKeys object.",
            "x-ms-summary": "The ApiKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user",
          "API Keys"
        ],
        "description": "Create API Key",
        "operationId": "PostUserApiKeys",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostApiKeys"
        },
        "summary": "Create API Key",
        "x-authentication": [],
        "x-category": [
          "developers"
        ],
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ]
      }
    },
    "/user/groups": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  If provided, will return group_users of this user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  If provided, will return group_users of this user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Group ID.  If provided, will return group_users of this group.",
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID.  If provided, will return group_users of this group."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of GroupUsers objects.",
            "x-ms-summary": "A list of GroupUsers objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user",
          "Group Users"
        ],
        "description": "List Group Users",
        "operationId": "GetUserGroups",
        "summary": "List Group Users",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "user/groups",
          "users/:user_id/groups",
          "groups/:group_id/users"
        ]
      }
    },
    "/user/public_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of PublicKeys objects.",
            "x-ms-summary": "A list of PublicKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user",
          "Public Keys"
        ],
        "description": "List Public Keys",
        "operationId": "GetUserPublicKeys",
        "summary": "List Public Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ],
        "x-path_aliases": [
          "user/public_keys",
          "users/:user_id/public_keys"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              }
            },
            "description": "The PublicKeys object.",
            "x-ms-summary": "The PublicKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user",
          "Public Keys"
        ],
        "description": "Create Public Key",
        "operationId": "PostUserPublicKeys",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostUserPublicKeys"
        },
        "summary": "Create Public Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ],
        "x-path_aliases": [
          "user/public_keys",
          "users/:user_id/public_keys"
        ]
      }
    },
    "/user_cipher_uses": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCipherUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCipherUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCipherUseEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UserCipherUses objects.",
            "x-ms-summary": "A list of UserCipherUses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user_cipher_uses",
          "User Cipher Uses"
        ],
        "description": "List User Cipher Uses",
        "operationId": "GetUserCipherUses",
        "summary": "List User Cipher Uses",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "users/:user_id/cipher_uses"
        ]
      }
    },
    "/user_requests": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserRequestEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserRequestEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserRequestEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UserRequests objects.",
            "x-ms-summary": "A list of UserRequests objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user_requests",
          "User Requests"
        ],
        "description": "List User Requests",
        "operationId": "GetUserRequests",
        "summary": "List User Requests",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestEntity"
                }
              }
            },
            "description": "The UserRequests object.",
            "x-ms-summary": "The UserRequests object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user_requests",
          "User Requests"
        ],
        "description": "Create User Request",
        "operationId": "PostUserRequests",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "company": {
                    "description": "Company of the user requested",
                    "type": "string"
                  },
                  "details": {
                    "description": "Details of the user request",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email of user requested",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of user requested",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create User Request",
        "x-authentication": [
          "none"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/user_requests/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "User Request ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User Request ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user_requests",
          "User Requests"
        ],
        "description": "Delete User Request",
        "operationId": "DeleteUserRequestsId",
        "summary": "Delete User Request",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "User Request ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User Request ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestEntity"
                }
              }
            },
            "description": "The UserRequests object.",
            "x-ms-summary": "The UserRequests object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user_requests",
          "User Requests"
        ],
        "description": "Show User Request",
        "operationId": "GetUserRequestsId",
        "summary": "Show User Request",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/user_sftp_client_uses": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserSftpClientUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserSftpClientUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserSftpClientUseEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UserSftpClientUses objects.",
            "x-ms-summary": "A list of UserSftpClientUses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "user_sftp_client_uses",
          "User SFTP Client Uses"
        ],
        "description": "List User SFTP Client Uses",
        "operationId": "GetUserSftpClientUses",
        "summary": "List User SFTP Client Uses",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "users/:user_id/sftp_client_uses"
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `authenticate_until`, `email`, `last_desktop_login_at`, `last_login_at`, `name`, `company`, `password_validity_days`, `ssl_required`, `username` or `site_admin`.",
            "example": {
              "site_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `authenticate_until`, `email`, `last_desktop_login_at`, `last_login_at`, `name`, `company`, `password_validity_days`, `ssl_required`, `username` or `site_admin`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `username`, `name`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ site_admin, username ]`, `[ not_site_admin, username ]` or `[ company, name ]`.",
            "example": {
              "username": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `username`, `name`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ site_admin, username ]`, `[ not_site_admin, username ]` or `[ company, name ]`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`.",
            "example": {
              "password_validity_days": "1"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`.",
            "example": {
              "password_validity_days": "1"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `username`, `name`, `email` or `company`. Valid field combinations are `[ company, name ]`.",
            "example": {
              "username": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `username`, `name`, `email` or `company`. Valid field combinations are `[ company, name ]`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`.",
            "example": {
              "password_validity_days": "1"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`.",
            "example": {
              "password_validity_days": "1"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `password_validity_days`, `last_login_at` or `authenticate_until`."
          },
          {
            "description": "comma-separated list of User IDs",
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "comma-separated list of User IDs"
          },
          {
            "description": "Include users from the parent site.",
            "in": "query",
            "name": "include_parent_site_users",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "Include users from the parent site."
          },
          {
            "description": "Searches for partial matches of name, username, or email.",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Searches for partial matches of name, username, or email."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Users objects.",
            "x-ms-summary": "A list of Users objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "List Users",
        "operationId": "GetUsers",
        "summary": "List Users",
        "x-authentication": [
          "folder_admin",
          "overdue_ok"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "authenticate_until": {
              "sort": [
                "authenticate_until"
              ],
              "type": "range"
            },
            "company": {
              "sort": [
                "name",
                "company"
              ],
              "type": "pattern"
            },
            "email": {
              "sort": [
                "email"
              ],
              "type": "pattern"
            },
            "last_login_at": {
              "sort": [
                "last_login_at"
              ],
              "type": "range"
            },
            "name": {
              "sort": [
                "name"
              ],
              "type": "pattern"
            },
            "not_site_admin": {
              "sort": [
                "username"
              ],
              "type": "exact"
            },
            "password_validity_days": {
              "sort": [
                "password_validity_days"
              ],
              "type": "range"
            },
            "site_admin": {
              "sort": [
                "username",
                "site_admin"
              ],
              "type": "exact"
            },
            "ssl_required": {
              "sort": [
                "ssl_required"
              ],
              "type": "exact"
            },
            "username": {
              "sort": [
                "username"
              ],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "site_admin",
                "username"
              ],
              "sort": [
                "username"
              ]
            },
            {
              "filter": [
                "not_site_admin",
                "username"
              ],
              "sort": [
                "username"
              ]
            },
            {
              "filter": [
                "company",
                "name"
              ],
              "sort": [
                "name"
              ]
            }
          ]
        },
        "x-included-in-ipaas": true,
        "x-sortable_columns": [
          "site_id",
          "authenticate_until",
          "email",
          "last_desktop_login_at",
          "last_login_at",
          "name",
          "company",
          "password_validity_days",
          "ssl_required",
          "username",
          "site_admin"
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            },
            "description": "The Users object.",
            "x-ms-summary": "The Users object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Create User",
        "operationId": "PostUsers",
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchUser"
        },
        "summary": "Create User",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true,
        "x-path_aliases": [
          "groups/:group_id/users"
        ]
      }
    },
    "/users/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Delete User",
        "operationId": "DeleteUsersId",
        "summary": "Delete User",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true,
        "x-reauthentication": {
          "always": true,
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            },
            "description": "The Users object.",
            "x-ms-summary": "The Users object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Show User",
        "operationId": "GetUsersId",
        "summary": "Show User",
        "x-authentication": [
          "folder_admin",
          "overdue_ok"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true
      },
      "patch": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            },
            "description": "The Users object.",
            "x-ms-summary": "The Users object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Update User",
        "operationId": "PatchUsersId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "allowed_ips": {
                    "description": "A list of allowed IPs if applicable.  Newline delimited",
                    "type": "string"
                  },
                  "announcements_read": {
                    "description": "Signifies that the user has read all the announcements in the UI.",
                    "type": "boolean"
                  },
                  "attachments_permission": {
                    "description": "DEPRECATED: If `true`, the user can user create Bundles (aka Share Links). Use the bundle permission instead.",
                    "type": "boolean"
                  },
                  "authenticate_until": {
                    "description": "Scheduled Date/Time at which user will be deactivated",
                    "format": "date-time",
                    "type": "string"
                  },
                  "authentication_method": {
                    "description": "How is this user authenticated?",
                    "enum": [
                      "password",
                      "sso",
                      "none",
                      "email_signup",
                      "password_with_imported_hash",
                      "password_and_ssh_key"
                    ],
                    "type": "string"
                  },
                  "avatar_delete": {
                    "description": "If true, the avatar will be deleted.",
                    "type": "boolean"
                  },
                  "billing_permission": {
                    "description": "Allow this user to perform operations on the account, payments, and invoices?",
                    "type": "boolean"
                  },
                  "bypass_inactive_disable": {
                    "description": "Exempt this user from being disabled based on inactivity?",
                    "type": "boolean"
                  },
                  "bypass_site_allowed_ips": {
                    "description": "Allow this user to skip site-wide IP blacklists?",
                    "type": "boolean"
                  },
                  "change_password": {
                    "description": "Used for changing a password on an existing user.",
                    "type": "string"
                  },
                  "change_password_confirmation": {
                    "description": "Optional, but if provided, we will ensure that it matches the value sent in `change_password`.",
                    "type": "string"
                  },
                  "company": {
                    "description": "User's company",
                    "type": "string"
                  },
                  "dav_permission": {
                    "description": "Can the user connect with WebDAV?",
                    "type": "boolean"
                  },
                  "disabled": {
                    "description": "Is user disabled? Disabled users cannot log in, and do not count for billing purposes. Users can be automatically disabled after an inactivity period via a Site setting or schedule to be deactivated after specific date.",
                    "type": "boolean"
                  },
                  "email": {
                    "description": "User's email.",
                    "type": "string"
                  },
                  "ftp_permission": {
                    "description": "Can the user access with FTP/FTPS?",
                    "type": "boolean"
                  },
                  "grant_permission": {
                    "description": "Permission to grant on the user root.  Can be blank or `full`, `read`, `write`, `list`, `read+write`, or `list+write`",
                    "type": "string"
                  },
                  "group_id": {
                    "description": "Group ID to associate this user with.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "group_ids": {
                    "description": "A list of group ids to associate this user with.  Comma delimited.",
                    "type": "string"
                  },
                  "header_text": {
                    "description": "Text to display to the user in the header of the UI",
                    "type": "string"
                  },
                  "imported_password_hash": {
                    "description": "Pre-calculated hash of the user's password. If supplied, this will be used to authenticate the user on first login. Supported hash methods are MD5, SHA1, and SHA256.",
                    "type": "string"
                  },
                  "language": {
                    "description": "Preferred language",
                    "type": "string"
                  },
                  "name": {
                    "description": "User's full name",
                    "type": "string"
                  },
                  "notes": {
                    "description": "Any internal notes on the user",
                    "type": "string"
                  },
                  "notification_daily_send_time": {
                    "description": "Hour of the day at which daily notifications should be sent. Can be in range 0 to 23",
                    "format": "int32",
                    "type": "integer"
                  },
                  "office_integration_enabled": {
                    "description": "Enable integration with Office for the web?",
                    "type": "boolean"
                  },
                  "password": {
                    "description": "User password.",
                    "type": "string"
                  },
                  "password_confirmation": {
                    "description": "Optional, but if provided, we will ensure that it matches the value sent in `password`.",
                    "type": "string"
                  },
                  "password_validity_days": {
                    "description": "Number of days to allow user to use the same password",
                    "format": "int32",
                    "type": "integer"
                  },
                  "readonly_site_admin": {
                    "description": "Is the user an allowed to view all (non-billing) site configuration for this site?",
                    "type": "boolean"
                  },
                  "receive_admin_alerts": {
                    "description": "Should the user receive admin alerts such a certificate expiration notifications and overages?",
                    "type": "boolean"
                  },
                  "require_2fa": {
                    "description": "2FA required setting",
                    "enum": [
                      "use_system_setting",
                      "always_require",
                      "never_require"
                    ],
                    "type": "string"
                  },
                  "require_login_by": {
                    "description": "Require user to login by specified date otherwise it will be disabled.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "require_password_change": {
                    "description": "Is a password change required upon next user login?",
                    "type": "boolean"
                  },
                  "restapi_permission": {
                    "description": "Can this user access the Web app, Desktop app, SDKs, or REST API?  (All of these tools use the API internally, so this is one unified permission set.)",
                    "type": "boolean"
                  },
                  "self_managed": {
                    "description": "Does this user manage it's own credentials or is it a shared/bot user?",
                    "type": "boolean"
                  },
                  "sftp_permission": {
                    "description": "Can the user access with SFTP?",
                    "type": "boolean"
                  },
                  "site_admin": {
                    "description": "Is the user an administrator for this site?",
                    "type": "boolean"
                  },
                  "skip_welcome_screen": {
                    "description": "Skip Welcome page in the UI?",
                    "type": "boolean"
                  },
                  "ssl_required": {
                    "description": "SSL required setting",
                    "enum": [
                      "use_system_setting",
                      "always_require",
                      "never_require"
                    ],
                    "type": "string"
                  },
                  "sso_strategy_id": {
                    "description": "SSO (Single Sign On) strategy ID for the user, if applicable.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "subscribe_to_newsletter": {
                    "description": "Is the user subscribed to the newsletter?",
                    "type": "boolean"
                  },
                  "time_zone": {
                    "description": "User time zone",
                    "type": "string"
                  },
                  "user_home": {
                    "description": "Home folder for FTP/SFTP.  Note that this is not used for API, Desktop, or Web interface.",
                    "type": "string"
                  },
                  "user_root": {
                    "description": "Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set).  Note that this is not used for API, Desktop, or Web interface.",
                    "type": "string"
                  },
                  "username": {
                    "description": "User's username",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Update User",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-included-in-ipaas": true,
        "x-path_aliases": [
          "user"
        ],
        "x-reauthentication": {
          "params": [
            "password",
            "change_password",
            "email",
            "site_admin"
          ],
          "required": true
        }
      }
    },
    "/users/{id}/2fa/reset": {
      "post": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Trigger 2FA Reset process for user who has lost access to their existing 2FA methods.",
        "operationId": "PostUsersId2faReset",
        "summary": "Trigger 2FA Reset process for user who has lost access to their existing 2FA methods.",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-reauthentication": {
          "always": true,
          "required": true
        }
      }
    },
    "/users/{id}/resend_welcome_email": {
      "post": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Resend user welcome email",
        "operationId": "PostUsersIdResendWelcomeEmail",
        "summary": "Resend user welcome email",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/users/{id}/unlock": {
      "post": {
        "parameters": [
          {
            "description": "User ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID."
          }
        ],
        "responses": {
          "204": {
            "description": "No body.",
            "x-ms-summary": "No body."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Users"
        ],
        "description": "Unlock user who has been locked out due to failed logins.",
        "operationId": "PostUsersIdUnlock",
        "summary": "Unlock user who has been locked out due to failed logins.",
        "x-authentication": [
          "site",
          "overdue_ok"
        ],
        "x-category": [
          "user_accounts"
        ]
      }
    },
    "/users/{user_id}/api_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_gteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lt",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than the supplied value. Valid fields are `expires_at`."
          },
          {
            "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`.",
            "example": {
              "expires_at": "2024-01-01T00:00:00"
            },
            "in": "query",
            "name": "filter_lteq",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `expires_at`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of ApiKeys objects.",
            "x-ms-summary": "A list of ApiKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "API Keys"
        ],
        "description": "List API Keys",
        "operationId": "GetUsersUserIdApiKeys",
        "summary": "List API Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "developers"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "expires_at": {
              "sort": [
                "expires_at"
              ],
              "type": "range"
            }
          },
          "filter_combinations": []
        },
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ],
        "x-sortable_columns": [
          "expires_at"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyEntity"
                }
              }
            },
            "description": "The ApiKeys object.",
            "x-ms-summary": "The ApiKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "API Keys"
        ],
        "description": "Create API Key",
        "operationId": "PostUsersUserIdApiKeys",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "User-supplied description of API key.",
                    "type": "string"
                  },
                  "expires_at": {
                    "description": "API Key expiration date",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "Internal name for the API Key.  For your use.",
                    "type": "string"
                  },
                  "path": {
                    "description": "Folder path restriction for `office_integration` permission set API keys.",
                    "type": "string"
                  },
                  "permission_set": {
                    "default": "full",
                    "description": "Permissions for this API Key. It must be full for site-wide API Keys.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations). Keys with the `office_integration` permission set are auto generated, and automatically expire, to allow users to interact with office integration platforms. Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.",
                    "enum": [
                      "none",
                      "full",
                      "desktop_app",
                      "sync_app",
                      "office_integration",
                      "mobile_app"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Create API Key",
        "x-authentication": [],
        "x-category": [
          "developers"
        ],
        "x-path_aliases": [
          "site/api_keys",
          "user/api_keys",
          "users/:user_id/api_keys"
        ]
      }
    },
    "/users/{user_id}/cipher_uses": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCipherUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCipherUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserCipherUseEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UserCipherUses objects.",
            "x-ms-summary": "A list of UserCipherUses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "User Cipher Uses"
        ],
        "description": "List User Cipher Uses",
        "operationId": "GetUsersUserIdCipherUses",
        "summary": "List User Cipher Uses",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "users/:user_id/cipher_uses"
        ]
      }
    },
    "/users/{user_id}/groups": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  If provided, will return group_users of this user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  If provided, will return group_users of this user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "Group ID.  If provided, will return group_users of this group.",
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Group ID.  If provided, will return group_users of this group."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupUserEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of GroupUsers objects.",
            "x-ms-summary": "A list of GroupUsers objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Group Users"
        ],
        "description": "List Group Users",
        "operationId": "GetUsersUserIdGroups",
        "summary": "List Group Users",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "user/groups",
          "users/:user_id/groups",
          "groups/:group_id/users"
        ]
      }
    },
    "/users/{user_id}/permissions": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `group_id`, `path` or `user_id`.",
            "example": {
              "site_id": "desc"
            },
            "in": "query",
            "name": "sort_by",
            "required": false,
            "x-ms-summary": "If set, sort records by the specified field in either `asc` or `desc` direction. Valid fields are `site_id`, `group_id`, `path` or `user_id`."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `group_id` or `user_id`. Valid field combinations are `[ group_id, path ]`, `[ user_id, path ]` or `[ user_id, group_id ]`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `group_id` or `user_id`. Valid field combinations are `[ group_id, path ]`, `[ user_id, path ]` or `[ user_id, group_id ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`.",
            "example": {
              "path": "test"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`."
          },
          {
            "description": "Permission path.  If provided, will scope all permissions(including upward) to this path.",
            "in": "query",
            "name": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Permission path.  If provided, will scope all permissions(including upward) to this path."
          },
          {
            "description": "If searching by user or group, also include user's permissions that are inherited from its groups?",
            "in": "query",
            "name": "include_groups",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-summary": "If searching by user or group, also include user's permissions that are inherited from its groups?"
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": null
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of Permissions objects.",
            "x-ms-summary": "A list of Permissions objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Permissions"
        ],
        "description": "List Permissions",
        "operationId": "GetUsersUserIdPermissions",
        "summary": "List Permissions",
        "x-authentication": [],
        "x-category": [
          "user_accounts"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "group_id": {
              "sort": [
                "group_id",
                "path",
                "permission"
              ],
              "type": "exact"
            },
            "path": {
              "sort": [
                "path"
              ],
              "type": "pattern"
            },
            "user_id": {
              "sort": [
                "group_id",
                "path",
                "user_id",
                "permission"
              ],
              "type": "exact"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "group_id",
                "path"
              ],
              "sort": [
                "path"
              ]
            },
            {
              "filter": [
                "user_id",
                "path"
              ],
              "sort": [
                "path"
              ]
            },
            {
              "filter": [
                "user_id",
                "group_id"
              ],
              "sort": [
                "group_id",
                "permission"
              ]
            }
          ]
        },
        "x-path_aliases": [
          "groups/:group_id/permissions",
          "users/:user_id/permissions"
        ],
        "x-sortable_columns": [
          "site_id",
          "group_id",
          "path",
          "user_id"
        ]
      }
    },
    "/users/{user_id}/public_keys": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of PublicKeys objects.",
            "x-ms-summary": "A list of PublicKeys objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Public Keys"
        ],
        "description": "List Public Keys",
        "operationId": "GetUsersUserIdPublicKeys",
        "summary": "List Public Keys",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ],
        "x-path_aliases": [
          "user/public_keys",
          "users/:user_id/public_keys"
        ]
      },
      "post": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyEntity"
                }
              }
            },
            "description": "The PublicKeys object.",
            "x-ms-summary": "The PublicKeys object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "Public Keys"
        ],
        "description": "Create Public Key",
        "operationId": "PostUsersUserIdPublicKeys",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "public_key": {
                    "description": "Actual contents of SSH key.",
                    "type": "string"
                  },
                  "title": {
                    "description": "Internal reference for key.",
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Public Key",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "encryption"
        ],
        "x-path_aliases": [
          "user/public_keys",
          "users/:user_id/public_keys"
        ]
      }
    },
    "/users/{user_id}/sftp_client_uses": {
      "get": {
        "parameters": [
          {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "User ID.  Provide a value of `0` to operate the current session's user."
          },
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserSftpClientUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserSftpClientUseEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserSftpClientUseEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of UserSftpClientUses objects.",
            "x-ms-summary": "A list of UserSftpClientUses objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "users",
          "User SFTP Client Uses"
        ],
        "description": "List User SFTP Client Uses",
        "operationId": "GetUsersUserIdSftpClientUses",
        "summary": "List User SFTP Client Uses",
        "x-authentication": [
          "self_managed"
        ],
        "x-category": [
          "user_accounts"
        ],
        "x-path_aliases": [
          "users/:user_id/sftp_client_uses"
        ]
      }
    },
    "/web_dav_action_logs": {
      "get": {
        "parameters": [
          {
            "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
          },
          {
            "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "x-ms-summary": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
          },
          {
            "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `true_path`, `remote_ip`, `success`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`.",
            "example": {
              "start_date": "VALUE"
            },
            "in": "query",
            "name": "filter",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is equal to the supplied value. Valid fields are `start_date`, `end_date`, `path`, `true_path`, `remote_ip`, `success`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`."
          },
          {
            "description": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`, `true_path`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`.",
            "example": {
              "path": "VALUE"
            },
            "in": "query",
            "name": "filter_prefix",
            "required": false,
            "x-ms-summary": "If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`, `true_path`, `status`, `action_type` or `username`. Valid field combinations are `[ start_date ]`, `[ end_date ]`, `[ path ]`, `[ true_path ]`, `[ remote_ip ]`, `[ success ]`, `[ status ]`, `[ action_type ]`, `[ username ]`, `[ start_date, end_date ]`, `[ start_date, path ]`, `[ start_date, true_path ]`, `[ start_date, remote_ip ]`, `[ start_date, success ]`, `[ start_date, status ]`, `[ start_date, action_type ]`, `[ start_date, username ]`, `[ end_date, path ]`, `[ end_date, true_path ]`, `[ end_date, remote_ip ]`, `[ end_date, success ]`, `[ end_date, status ]`, `[ end_date, action_type ]`, `[ end_date, username ]`, `[ path, true_path ]`, `[ path, remote_ip ]`, `[ path, success ]`, `[ path, status ]`, `[ path, action_type ]`, `[ path, username ]`, `[ true_path, remote_ip ]`, `[ true_path, success ]`, `[ true_path, status ]`, `[ true_path, action_type ]`, `[ true_path, username ]`, `[ remote_ip, success ]`, `[ remote_ip, status ]`, `[ remote_ip, action_type ]`, `[ remote_ip, username ]`, `[ success, status ]`, `[ success, action_type ]`, `[ success, username ]`, `[ status, action_type ]`, `[ status, username ]`, `[ action_type, username ]`, `[ start_date, end_date, path ]`, `[ start_date, end_date, true_path ]`, `[ start_date, end_date, remote_ip ]`, `[ start_date, end_date, success ]`, `[ start_date, end_date, status ]`, `[ start_date, end_date, action_type ]`, `[ start_date, end_date, username ]`, `[ start_date, path, true_path ]`, `[ start_date, path, remote_ip ]`, `[ start_date, path, success ]`, `[ start_date, path, status ]`, `[ start_date, path, action_type ]`, `[ start_date, path, username ]`, `[ start_date, true_path, remote_ip ]`, `[ start_date, true_path, success ]`, `[ start_date, true_path, status ]`, `[ start_date, true_path, action_type ]`, `[ start_date, true_path, username ]`, `[ start_date, remote_ip, success ]`, `[ start_date, remote_ip, status ]`, `[ start_date, remote_ip, action_type ]`, `[ start_date, remote_ip, username ]`, `[ start_date, success, status ]`, `[ start_date, success, action_type ]`, `[ start_date, success, username ]`, `[ start_date, status, action_type ]`, `[ start_date, status, username ]`, `[ start_date, action_type, username ]`, `[ end_date, path, true_path ]`, `[ end_date, path, remote_ip ]`, `[ end_date, path, success ]`, `[ end_date, path, status ]`, `[ end_date, path, action_type ]`, `[ end_date, path, username ]`, `[ end_date, true_path, remote_ip ]`, `[ end_date, true_path, success ]`, `[ end_date, true_path, status ]`, `[ end_date, true_path, action_type ]`, `[ end_date, true_path, username ]`, `[ end_date, remote_ip, success ]`, `[ end_date, remote_ip, status ]`, `[ end_date, remote_ip, action_type ]`, `[ end_date, remote_ip, username ]`, `[ end_date, success, status ]`, `[ end_date, success, action_type ]`, `[ end_date, success, username ]`, `[ end_date, status, action_type ]`, `[ end_date, status, username ]`, `[ end_date, action_type, username ]`, `[ path, true_path, remote_ip ]`, `[ path, true_path, success ]`, `[ path, true_path, status ]`, `[ path, true_path, action_type ]`, `[ path, true_path, username ]`, `[ path, remote_ip, success ]`, `[ path, remote_ip, status ]`, `[ path, remote_ip, action_type ]`, `[ path, remote_ip, username ]`, `[ path, success, status ]`, `[ path, success, action_type ]`, `[ path, success, username ]`, `[ path, status, action_type ]`, `[ path, status, username ]`, `[ path, action_type, username ]`, `[ true_path, remote_ip, success ]`, `[ true_path, remote_ip, status ]`, `[ true_path, remote_ip, action_type ]`, `[ true_path, remote_ip, username ]`, `[ true_path, success, status ]`, `[ true_path, success, action_type ]`, `[ true_path, success, username ]`, `[ true_path, status, action_type ]`, `[ true_path, status, username ]`, `[ true_path, action_type, username ]`, `[ remote_ip, success, status ]`, `[ remote_ip, success, action_type ]`, `[ remote_ip, success, username ]`, `[ remote_ip, status, action_type ]`, `[ remote_ip, status, username ]`, `[ remote_ip, action_type, username ]`, `[ success, status, action_type ]`, `[ success, status, username ]`, `[ success, action_type, username ]`, `[ status, action_type, username ]`, `[ start_date, end_date, path, true_path ]`, `[ start_date, end_date, path, remote_ip ]`, `[ start_date, end_date, path, success ]`, `[ start_date, end_date, path, status ]`, `[ start_date, end_date, path, action_type ]`, `[ start_date, end_date, path, username ]`, `[ start_date, end_date, true_path, remote_ip ]`, `[ start_date, end_date, true_path, success ]`, `[ start_date, end_date, true_path, status ]`, `[ start_date, end_date, true_path, action_type ]`, `[ start_date, end_date, true_path, username ]`, `[ start_date, end_date, remote_ip, success ]`, `[ start_date, end_date, remote_ip, status ]`, `[ start_date, end_date, remote_ip, action_type ]`, `[ start_date, end_date, remote_ip, username ]`, `[ start_date, end_date, success, status ]`, `[ start_date, end_date, success, action_type ]`, `[ start_date, end_date, success, username ]`, `[ start_date, end_date, status, action_type ]`, `[ start_date, end_date, status, username ]`, `[ start_date, end_date, action_type, username ]`, `[ start_date, path, true_path, remote_ip ]`, `[ start_date, path, true_path, success ]`, `[ start_date, path, true_path, status ]`, `[ start_date, path, true_path, action_type ]`, `[ start_date, path, true_path, username ]`, `[ start_date, path, remote_ip, success ]`, `[ start_date, path, remote_ip, status ]`, `[ start_date, path, remote_ip, action_type ]`, `[ start_date, path, remote_ip, username ]`, `[ start_date, path, success, status ]`, `[ start_date, path, success, action_type ]`, `[ start_date, path, success, username ]`, `[ start_date, path, status, action_type ]`, `[ start_date, path, status, username ]`, `[ start_date, path, action_type, username ]`, `[ start_date, true_path, remote_ip, success ]`, `[ start_date, true_path, remote_ip, status ]`, `[ start_date, true_path, remote_ip, action_type ]`, `[ start_date, true_path, remote_ip, username ]`, `[ start_date, true_path, success, status ]`, `[ start_date, true_path, success, action_type ]`, `[ start_date, true_path, success, username ]`, `[ start_date, true_path, status, action_type ]`, `[ start_date, true_path, status, username ]`, `[ start_date, true_path, action_type, username ]`, `[ start_date, remote_ip, success, status ]`, `[ start_date, remote_ip, success, action_type ]`, `[ start_date, remote_ip, success, username ]`, `[ start_date, remote_ip, status, action_type ]`, `[ start_date, remote_ip, status, username ]`, `[ start_date, remote_ip, action_type, username ]`, `[ start_date, success, status, action_type ]`, `[ start_date, success, status, username ]`, `[ start_date, success, action_type, username ]`, `[ start_date, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip ]`, `[ end_date, path, true_path, success ]`, `[ end_date, path, true_path, status ]`, `[ end_date, path, true_path, action_type ]`, `[ end_date, path, true_path, username ]`, `[ end_date, path, remote_ip, success ]`, `[ end_date, path, remote_ip, status ]`, `[ end_date, path, remote_ip, action_type ]`, `[ end_date, path, remote_ip, username ]`, `[ end_date, path, success, status ]`, `[ end_date, path, success, action_type ]`, `[ end_date, path, success, username ]`, `[ end_date, path, status, action_type ]`, `[ end_date, path, status, username ]`, `[ end_date, path, action_type, username ]`, `[ end_date, true_path, remote_ip, success ]`, `[ end_date, true_path, remote_ip, status ]`, `[ end_date, true_path, remote_ip, action_type ]`, `[ end_date, true_path, remote_ip, username ]`, `[ end_date, true_path, success, status ]`, `[ end_date, true_path, success, action_type ]`, `[ end_date, true_path, success, username ]`, `[ end_date, true_path, status, action_type ]`, `[ end_date, true_path, status, username ]`, `[ end_date, true_path, action_type, username ]`, `[ end_date, remote_ip, success, status ]`, `[ end_date, remote_ip, success, action_type ]`, `[ end_date, remote_ip, success, username ]`, `[ end_date, remote_ip, status, action_type ]`, `[ end_date, remote_ip, status, username ]`, `[ end_date, remote_ip, action_type, username ]`, `[ end_date, success, status, action_type ]`, `[ end_date, success, status, username ]`, `[ end_date, success, action_type, username ]`, `[ end_date, status, action_type, username ]`, `[ path, true_path, remote_ip, success ]`, `[ path, true_path, remote_ip, status ]`, `[ path, true_path, remote_ip, action_type ]`, `[ path, true_path, remote_ip, username ]`, `[ path, true_path, success, status ]`, `[ path, true_path, success, action_type ]`, `[ path, true_path, success, username ]`, `[ path, true_path, status, action_type ]`, `[ path, true_path, status, username ]`, `[ path, true_path, action_type, username ]`, `[ path, remote_ip, success, status ]`, `[ path, remote_ip, success, action_type ]`, `[ path, remote_ip, success, username ]`, `[ path, remote_ip, status, action_type ]`, `[ path, remote_ip, status, username ]`, `[ path, remote_ip, action_type, username ]`, `[ path, success, status, action_type ]`, `[ path, success, status, username ]`, `[ path, success, action_type, username ]`, `[ path, status, action_type, username ]`, `[ true_path, remote_ip, success, status ]`, `[ true_path, remote_ip, success, action_type ]`, `[ true_path, remote_ip, success, username ]`, `[ true_path, remote_ip, status, action_type ]`, `[ true_path, remote_ip, status, username ]`, `[ true_path, remote_ip, action_type, username ]`, `[ true_path, success, status, action_type ]`, `[ true_path, success, status, username ]`, `[ true_path, success, action_type, username ]`, `[ true_path, status, action_type, username ]`, `[ remote_ip, success, status, action_type ]`, `[ remote_ip, success, status, username ]`, `[ remote_ip, success, action_type, username ]`, `[ remote_ip, status, action_type, username ]`, `[ success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip ]`, `[ start_date, end_date, path, true_path, success ]`, `[ start_date, end_date, path, true_path, status ]`, `[ start_date, end_date, path, true_path, action_type ]`, `[ start_date, end_date, path, true_path, username ]`, `[ start_date, end_date, path, remote_ip, success ]`, `[ start_date, end_date, path, remote_ip, status ]`, `[ start_date, end_date, path, remote_ip, action_type ]`, `[ start_date, end_date, path, remote_ip, username ]`, `[ start_date, end_date, path, success, status ]`, `[ start_date, end_date, path, success, action_type ]`, `[ start_date, end_date, path, success, username ]`, `[ start_date, end_date, path, status, action_type ]`, `[ start_date, end_date, path, status, username ]`, `[ start_date, end_date, path, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success ]`, `[ start_date, end_date, true_path, remote_ip, status ]`, `[ start_date, end_date, true_path, remote_ip, action_type ]`, `[ start_date, end_date, true_path, remote_ip, username ]`, `[ start_date, end_date, true_path, success, status ]`, `[ start_date, end_date, true_path, success, action_type ]`, `[ start_date, end_date, true_path, success, username ]`, `[ start_date, end_date, true_path, status, action_type ]`, `[ start_date, end_date, true_path, status, username ]`, `[ start_date, end_date, true_path, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status ]`, `[ start_date, end_date, remote_ip, success, action_type ]`, `[ start_date, end_date, remote_ip, success, username ]`, `[ start_date, end_date, remote_ip, status, action_type ]`, `[ start_date, end_date, remote_ip, status, username ]`, `[ start_date, end_date, remote_ip, action_type, username ]`, `[ start_date, end_date, success, status, action_type ]`, `[ start_date, end_date, success, status, username ]`, `[ start_date, end_date, success, action_type, username ]`, `[ start_date, end_date, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success ]`, `[ start_date, path, true_path, remote_ip, status ]`, `[ start_date, path, true_path, remote_ip, action_type ]`, `[ start_date, path, true_path, remote_ip, username ]`, `[ start_date, path, true_path, success, status ]`, `[ start_date, path, true_path, success, action_type ]`, `[ start_date, path, true_path, success, username ]`, `[ start_date, path, true_path, status, action_type ]`, `[ start_date, path, true_path, status, username ]`, `[ start_date, path, true_path, action_type, username ]`, `[ start_date, path, remote_ip, success, status ]`, `[ start_date, path, remote_ip, success, action_type ]`, `[ start_date, path, remote_ip, success, username ]`, `[ start_date, path, remote_ip, status, action_type ]`, `[ start_date, path, remote_ip, status, username ]`, `[ start_date, path, remote_ip, action_type, username ]`, `[ start_date, path, success, status, action_type ]`, `[ start_date, path, success, status, username ]`, `[ start_date, path, success, action_type, username ]`, `[ start_date, path, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status ]`, `[ start_date, true_path, remote_ip, success, action_type ]`, `[ start_date, true_path, remote_ip, success, username ]`, `[ start_date, true_path, remote_ip, status, action_type ]`, `[ start_date, true_path, remote_ip, status, username ]`, `[ start_date, true_path, remote_ip, action_type, username ]`, `[ start_date, true_path, success, status, action_type ]`, `[ start_date, true_path, success, status, username ]`, `[ start_date, true_path, success, action_type, username ]`, `[ start_date, true_path, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type ]`, `[ start_date, remote_ip, success, status, username ]`, `[ start_date, remote_ip, success, action_type, username ]`, `[ start_date, remote_ip, status, action_type, username ]`, `[ start_date, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success ]`, `[ end_date, path, true_path, remote_ip, status ]`, `[ end_date, path, true_path, remote_ip, action_type ]`, `[ end_date, path, true_path, remote_ip, username ]`, `[ end_date, path, true_path, success, status ]`, `[ end_date, path, true_path, success, action_type ]`, `[ end_date, path, true_path, success, username ]`, `[ end_date, path, true_path, status, action_type ]`, `[ end_date, path, true_path, status, username ]`, `[ end_date, path, true_path, action_type, username ]`, `[ end_date, path, remote_ip, success, status ]`, `[ end_date, path, remote_ip, success, action_type ]`, `[ end_date, path, remote_ip, success, username ]`, `[ end_date, path, remote_ip, status, action_type ]`, `[ end_date, path, remote_ip, status, username ]`, `[ end_date, path, remote_ip, action_type, username ]`, `[ end_date, path, success, status, action_type ]`, `[ end_date, path, success, status, username ]`, `[ end_date, path, success, action_type, username ]`, `[ end_date, path, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status ]`, `[ end_date, true_path, remote_ip, success, action_type ]`, `[ end_date, true_path, remote_ip, success, username ]`, `[ end_date, true_path, remote_ip, status, action_type ]`, `[ end_date, true_path, remote_ip, status, username ]`, `[ end_date, true_path, remote_ip, action_type, username ]`, `[ end_date, true_path, success, status, action_type ]`, `[ end_date, true_path, success, status, username ]`, `[ end_date, true_path, success, action_type, username ]`, `[ end_date, true_path, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type ]`, `[ end_date, remote_ip, success, status, username ]`, `[ end_date, remote_ip, success, action_type, username ]`, `[ end_date, remote_ip, status, action_type, username ]`, `[ end_date, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status ]`, `[ path, true_path, remote_ip, success, action_type ]`, `[ path, true_path, remote_ip, success, username ]`, `[ path, true_path, remote_ip, status, action_type ]`, `[ path, true_path, remote_ip, status, username ]`, `[ path, true_path, remote_ip, action_type, username ]`, `[ path, true_path, success, status, action_type ]`, `[ path, true_path, success, status, username ]`, `[ path, true_path, success, action_type, username ]`, `[ path, true_path, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type ]`, `[ path, remote_ip, success, status, username ]`, `[ path, remote_ip, success, action_type, username ]`, `[ path, remote_ip, status, action_type, username ]`, `[ path, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type ]`, `[ true_path, remote_ip, success, status, username ]`, `[ true_path, remote_ip, success, action_type, username ]`, `[ true_path, remote_ip, status, action_type, username ]`, `[ true_path, success, status, action_type, username ]`, `[ remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success ]`, `[ start_date, end_date, path, true_path, remote_ip, status ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, username ]`, `[ start_date, end_date, path, true_path, success, status ]`, `[ start_date, end_date, path, true_path, success, action_type ]`, `[ start_date, end_date, path, true_path, success, username ]`, `[ start_date, end_date, path, true_path, status, action_type ]`, `[ start_date, end_date, path, true_path, status, username ]`, `[ start_date, end_date, path, true_path, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status ]`, `[ start_date, end_date, path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, remote_ip, success, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, remote_ip, status, username ]`, `[ start_date, end_date, path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type ]`, `[ start_date, end_date, path, success, status, username ]`, `[ start_date, end_date, path, success, action_type, username ]`, `[ start_date, end_date, path, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, status, username ]`, `[ start_date, end_date, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type ]`, `[ start_date, end_date, true_path, success, status, username ]`, `[ start_date, end_date, true_path, success, action_type, username ]`, `[ start_date, end_date, true_path, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type ]`, `[ start_date, end_date, remote_ip, success, status, username ]`, `[ start_date, end_date, remote_ip, success, action_type, username ]`, `[ start_date, end_date, remote_ip, status, action_type, username ]`, `[ start_date, end_date, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status ]`, `[ start_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, path, true_path, remote_ip, success, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, path, true_path, remote_ip, status, username ]`, `[ start_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type ]`, `[ start_date, path, true_path, success, status, username ]`, `[ start_date, path, true_path, success, action_type, username ]`, `[ start_date, path, true_path, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type ]`, `[ start_date, path, remote_ip, success, status, username ]`, `[ start_date, path, remote_ip, success, action_type, username ]`, `[ start_date, path, remote_ip, status, action_type, username ]`, `[ start_date, path, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, true_path, remote_ip, success, status, username ]`, `[ start_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, true_path, success, status, action_type, username ]`, `[ start_date, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status ]`, `[ end_date, path, true_path, remote_ip, success, action_type ]`, `[ end_date, path, true_path, remote_ip, success, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type ]`, `[ end_date, path, true_path, remote_ip, status, username ]`, `[ end_date, path, true_path, remote_ip, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type ]`, `[ end_date, path, true_path, success, status, username ]`, `[ end_date, path, true_path, success, action_type, username ]`, `[ end_date, path, true_path, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type ]`, `[ end_date, path, remote_ip, success, status, username ]`, `[ end_date, path, remote_ip, success, action_type, username ]`, `[ end_date, path, remote_ip, status, action_type, username ]`, `[ end_date, path, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type ]`, `[ end_date, true_path, remote_ip, success, status, username ]`, `[ end_date, true_path, remote_ip, success, action_type, username ]`, `[ end_date, true_path, remote_ip, status, action_type, username ]`, `[ end_date, true_path, success, status, action_type, username ]`, `[ end_date, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type ]`, `[ path, true_path, remote_ip, success, status, username ]`, `[ path, true_path, remote_ip, success, action_type, username ]`, `[ path, true_path, remote_ip, status, action_type, username ]`, `[ path, true_path, success, status, action_type, username ]`, `[ path, remote_ip, success, status, action_type, username ]`, `[ true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type ]`, `[ start_date, end_date, path, true_path, success, status, username ]`, `[ start_date, end_date, path, true_path, success, action_type, username ]`, `[ start_date, end_date, path, true_path, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, true_path, success, status, action_type, username ]`, `[ start_date, end_date, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, path, true_path, success, status, action_type, username ]`, `[ start_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, true_path, remote_ip, success, status, action_type, username ]`, `[ end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ end_date, path, true_path, remote_ip, success, status, username ]`, `[ end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ end_date, path, true_path, success, status, action_type, username ]`, `[ end_date, path, remote_ip, success, status, action_type, username ]`, `[ end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ path, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, action_type ]`, `[ start_date, end_date, path, true_path, remote_ip, success, status, username ]`, `[ start_date, end_date, path, true_path, remote_ip, success, action_type, username ]`, `[ start_date, end_date, path, true_path, remote_ip, status, action_type, username ]`, `[ start_date, end_date, path, true_path, success, status, action_type, username ]`, `[ start_date, end_date, path, remote_ip, success, status, action_type, username ]`, `[ start_date, end_date, true_path, remote_ip, success, status, action_type, username ]`, `[ start_date, path, true_path, remote_ip, success, status, action_type, username ]` or `[ end_date, path, true_path, remote_ip, success, status, action_type, username ]`."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WebDavActionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/msgpack": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WebDavActionLogEntity"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WebDavActionLogEntity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of WebDavActionLogs objects.",
            "x-ms-summary": "A list of WebDavActionLogs objects."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "web_dav_action_logs",
          "WebDAV Action Logs"
        ],
        "description": "List WebDAV Action Logs",
        "operationId": "GetWebDavActionLogs",
        "summary": "List WebDAV Action Logs",
        "x-authentication": [
          "site"
        ],
        "x-category": [
          "logging"
        ],
        "x-filter_sort_combinations_with_types": {
          "filter_columns": {
            "action_type": {
              "sort": [],
              "type": "pattern"
            },
            "end_date": {
              "sort": [],
              "type": "exact"
            },
            "path": {
              "sort": [],
              "type": "pattern"
            },
            "remote_ip": {
              "sort": [],
              "type": "exact"
            },
            "start_date": {
              "sort": [],
              "type": "exact"
            },
            "status": {
              "sort": [],
              "type": "pattern"
            },
            "success": {
              "sort": [],
              "type": "exact"
            },
            "true_path": {
              "sort": [],
              "type": "pattern"
            },
            "username": {
              "sort": [],
              "type": "pattern"
            }
          },
          "filter_combinations": [
            {
              "filter": [
                "any"
              ],
              "sort": []
            }
          ]
        }
      }
    },
    "/webhook_tests": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTestEntity"
                }
              },
              "application/msgpack": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTestEntity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookTestEntity"
                }
              }
            },
            "description": "The WebhookTests object.",
            "x-ms-summary": "The WebhookTests object."
          },
          "400": {
            "description": "Bad Request",
            "x-ms-summary": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "x-ms-summary": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed",
            "x-ms-summary": "Method Not Allowed"
          },
          "409": {
            "description": "Conflict",
            "x-ms-summary": "Conflict"
          },
          "412": {
            "description": "Precondition Failed",
            "x-ms-summary": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity",
            "x-ms-summary": "Unprocessable Entity"
          },
          "423": {
            "description": "Locked",
            "x-ms-summary": "Locked"
          },
          "429": {
            "description": "Too Many Requests",
            "x-ms-summary": "Too Many Requests"
          }
        },
        "tags": [
          "webhook_tests",
          "Webhook Tests"
        ],
        "description": "Create Webhook Test",
        "operationId": "PostWebhookTests",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "action": {
                    "description": "action for test body",
                    "type": "string"
                  },
                  "body": {
                    "description": "Additional body parameters.",
                    "type": "object"
                  },
                  "encoding": {
                    "description": "HTTP encoding method.  Can be JSON, XML, or RAW (form data).",
                    "type": "string"
                  },
                  "file_as_body": {
                    "description": "Send the file data as the request body?",
                    "type": "boolean"
                  },
                  "file_form_field": {
                    "description": "Send the file data as a named parameter in the request POST body",
                    "type": "string"
                  },
                  "headers": {
                    "description": "Additional request headers.",
                    "type": "object"
                  },
                  "method": {
                    "description": "HTTP method(GET or POST).",
                    "type": "string"
                  },
                  "raw_body": {
                    "description": "raw body text",
                    "type": "string"
                  },
                  "url": {
                    "description": "URL for testing the webhook.",
                    "type": "string"
                  },
                  "use_dedicated_ips": {
                    "description": "Use dedicated IPs for sending the webhook?",
                    "type": "boolean"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Create Webhook Test",
        "x-authentication": [
          "folder_admin"
        ],
        "x-category": [
          "notifications",
          "webhooks"
        ]
      }
    }
  },
  "components": {
    "requestBodies": {
      "PatchAutomationsId": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "always_overwrite_size_matching_files": {
                  "description": "Ordinarily, files with identical size in the source and destination will be skipped from copy operations to prevent wasted transfer.  If this flag is `true` we will overwrite the destination file always.  Note that this may cause large amounts of wasted transfer usage.  This setting has no effect unless `overwrite_files` is also set to `true`.",
                  "type": "boolean"
                },
                "automation": {
                  "description": "Automation type",
                  "enum": [
                    "create_folder",
                    "delete_file",
                    "copy_file",
                    "move_file",
                    "as2_send",
                    "run_sync",
                    "import_file"
                  ],
                  "type": "string"
                },
                "description": {
                  "description": "Description for the this Automation.",
                  "type": "string"
                },
                "destination_replace_from": {
                  "description": "If set, this string in the destination path will be replaced with the value in `destination_replace_to`.",
                  "type": "string"
                },
                "destination_replace_to": {
                  "description": "If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.",
                  "type": "string"
                },
                "destinations": {
                  "description": "A list of String destination paths or Hash of folder_path and optional file_path.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "disabled": {
                  "description": "If true, this automation will not run.",
                  "type": "boolean"
                },
                "exclude_pattern": {
                  "description": "If set, this glob pattern will exclude files from the automation. Supports globs, except on remote mounts.",
                  "type": "string"
                },
                "flatten_destination_structure": {
                  "description": "Normally copy and move automations that use globs will implicitly preserve the source folder structure in the destination.  If this flag is `true`, the source folder structure will be flattened in the destination.  This is useful for copying or moving files from multiple folders into a single destination folder.",
                  "type": "boolean"
                },
                "group_ids": {
                  "description": "A list of group IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
                  "type": "string"
                },
                "ignore_locked_folders": {
                  "description": "If true, the Lock Folders behavior will be disregarded for automated actions.",
                  "type": "boolean"
                },
                "import_urls": {
                  "description": "List of URLs to be imported and names to be used.",
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                "interval": {
                  "description": "How often to run this automation? One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`",
                  "type": "string"
                },
                "legacy_folder_matching": {
                  "description": "DEPRECATED: If `true`, use the legacy behavior for this automation, where it can operate on folders in addition to just files.  This behavior no longer works and should not be used.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name for this automation.",
                  "type": "string"
                },
                "overwrite_files": {
                  "description": "If true, existing files will be overwritten with new files on Move/Copy automations.  Note: by default files will not be overwritten if they appear to be the same file size as the newly incoming file.  Use the `always_overwrite_size_matching_files` option in conjunction with `overwrite_files` to override this behavior and overwrite files no matter what.",
                  "type": "boolean"
                },
                "path": {
                  "description": "Path on which this Automation runs.  Supports globs, except on remote mounts.",
                  "type": "string"
                },
                "path_time_zone": {
                  "description": "Timezone to use when rendering timestamps in paths.",
                  "type": "string"
                },
                "recurring_day": {
                  "description": "If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.",
                  "format": "int32",
                  "type": "integer"
                },
                "retry_on_failure_interval_in_minutes": {
                  "description": "If the Automation fails, retry at this interval (in minutes).  Acceptable values are 5 through 1440 (one day).  Set to null to disable.",
                  "format": "int32",
                  "type": "integer"
                },
                "retry_on_failure_number_of_attempts": {
                  "description": "If the Automation fails, retry at most this many times.  Maximum allowed value: 10.  Set to null to disable.",
                  "format": "int32",
                  "type": "integer"
                },
                "schedule_days_of_week": {
                  "description": "If trigger is `custom_schedule`. A list of days of the week to run this automation. 0 is Sunday, 1 is Monday, etc.",
                  "items": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": "array"
                },
                "schedule_time_zone": {
                  "description": "If trigger is `custom_schedule`. Time zone for the schedule.",
                  "type": "string"
                },
                "schedule_times_of_day": {
                  "description": "If trigger is `custom_schedule`. A list of times of day to run this automation. 24-hour time format.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "source": {
                  "description": "Source path/glob.  See Automation docs for exact description, but this is used to filter for files in the `path` to find files to operate on. Supports globs, except on remote mounts.",
                  "type": "string"
                },
                "sync_ids": {
                  "description": "A list of sync IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
                  "type": "string"
                },
                "trigger": {
                  "description": "How this automation is triggered to run.",
                  "enum": [
                    "daily",
                    "custom_schedule",
                    "webhook",
                    "email",
                    "action"
                  ],
                  "type": "string"
                },
                "trigger_actions": {
                  "description": "If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "user_ids": {
                  "description": "A list of user IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
                  "type": "string"
                },
                "value": {
                  "description": "A Hash of attributes specific to the automation type.",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PatchBundlesId": {
        "content": {
          "application/octet-stream": {
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        }
      },
      "PatchFileCommentsId": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "body": {
                  "description": "Comment body.",
                  "type": "string"
                }
              },
              "required": [
                "body"
              ],
              "type": "object"
            }
          }
        }
      },
      "PatchGroupUsersId": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "admin": {
                  "description": "Is the user a group administrator?",
                  "type": "boolean"
                },
                "group_id": {
                  "description": "Group ID to add user to.",
                  "format": "int32",
                  "type": "integer"
                },
                "user_id": {
                  "description": "User ID to add to group.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "required": [
                "group_id"
              ],
              "type": "object"
            }
          }
        }
      },
      "PatchGroupsId": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "admin_ids": {
                  "description": "A list of group admin user ids. If sent as a string, should be comma-delimited.",
                  "type": "string"
                },
                "allowed_ips": {
                  "description": "A list of allowed IPs if applicable.  Newline delimited",
                  "type": "string"
                },
                "dav_permission": {
                  "description": "If true, users in this group can use WebDAV to login.  This will override a false value of `dav_permission` on the user level.",
                  "type": "boolean"
                },
                "ftp_permission": {
                  "description": "If true, users in this group can use FTP to login.  This will override a false value of `ftp_permission` on the user level.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Group name.",
                  "type": "string"
                },
                "notes": {
                  "description": "Group notes.",
                  "type": "string"
                },
                "restapi_permission": {
                  "description": "If true, users in this group can use the REST API to login.  This will override a false value of `restapi_permission` on the user level.",
                  "type": "boolean"
                },
                "sftp_permission": {
                  "description": "If true, users in this group can use SFTP to login.  This will override a false value of `sftp_permission` on the user level.",
                  "type": "boolean"
                },
                "user_ids": {
                  "description": "A list of user ids. If sent as a string, should be comma-delimited.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PatchProjectsId": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "global_access": {
                  "description": "Global permissions.  Can be: `none`, `anyone_with_read`, `anyone_with_full`.",
                  "type": "string"
                }
              },
              "required": [
                "global_access"
              ],
              "type": "object"
            }
          }
        }
      },
      "PatchSnapshotsId": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "paths": {
                  "description": "An array of paths to add to the snapshot.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "expires_at": {
                  "description": "When the snapshot expires.",
                  "format": "date-time",
                  "type": "string"
                },
                "name": {
                  "description": "A name for the snapshot.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PatchUser": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "allowed_ips": {
                  "description": "A list of allowed IPs if applicable.  Newline delimited",
                  "type": "string"
                },
                "announcements_read": {
                  "description": "Signifies that the user has read all the announcements in the UI.",
                  "type": "boolean"
                },
                "attachments_permission": {
                  "description": "DEPRECATED: If `true`, the user can user create Bundles (aka Share Links). Use the bundle permission instead.",
                  "type": "boolean"
                },
                "authenticate_until": {
                  "description": "Scheduled Date/Time at which user will be deactivated",
                  "format": "date-time",
                  "type": "string"
                },
                "authentication_method": {
                  "description": "How is this user authenticated?",
                  "enum": [
                    "password",
                    "sso",
                    "none",
                    "email_signup",
                    "password_with_imported_hash",
                    "password_and_ssh_key"
                  ],
                  "type": "string"
                },
                "avatar_delete": {
                  "description": "If true, the avatar will be deleted.",
                  "type": "boolean"
                },
                "billing_permission": {
                  "description": "Allow this user to perform operations on the account, payments, and invoices?",
                  "type": "boolean"
                },
                "bypass_inactive_disable": {
                  "description": "Exempt this user from being disabled based on inactivity?",
                  "type": "boolean"
                },
                "bypass_site_allowed_ips": {
                  "description": "Allow this user to skip site-wide IP blacklists?",
                  "type": "boolean"
                },
                "change_password": {
                  "description": "Used for changing a password on an existing user.",
                  "type": "string"
                },
                "change_password_confirmation": {
                  "description": "Optional, but if provided, we will ensure that it matches the value sent in `change_password`.",
                  "type": "string"
                },
                "company": {
                  "description": "User's company",
                  "type": "string"
                },
                "dav_permission": {
                  "description": "Can the user connect with WebDAV?",
                  "type": "boolean"
                },
                "disabled": {
                  "description": "Is user disabled? Disabled users cannot log in, and do not count for billing purposes. Users can be automatically disabled after an inactivity period via a Site setting or schedule to be deactivated after specific date.",
                  "type": "boolean"
                },
                "email": {
                  "description": "User's email.",
                  "type": "string"
                },
                "ftp_permission": {
                  "description": "Can the user access with FTP/FTPS?",
                  "type": "boolean"
                },
                "grant_permission": {
                  "description": "Permission to grant on the user root.  Can be blank or `full`, `read`, `write`, `list`, `read+write`, or `list+write`",
                  "type": "string"
                },
                "group_id": {
                  "description": "Group ID to associate this user with.",
                  "format": "int32",
                  "type": "integer"
                },
                "group_ids": {
                  "description": "A list of group ids to associate this user with.  Comma delimited.",
                  "type": "string"
                },
                "header_text": {
                  "description": "Text to display to the user in the header of the UI",
                  "type": "string"
                },
                "imported_password_hash": {
                  "description": "Pre-calculated hash of the user's password. If supplied, this will be used to authenticate the user on first login. Supported hash methods are MD5, SHA1, and SHA256.",
                  "type": "string"
                },
                "language": {
                  "description": "Preferred language",
                  "type": "string"
                },
                "name": {
                  "description": "User's full name",
                  "type": "string"
                },
                "notes": {
                  "description": "Any internal notes on the user",
                  "type": "string"
                },
                "notification_daily_send_time": {
                  "description": "Hour of the day at which daily notifications should be sent. Can be in range 0 to 23",
                  "format": "int32",
                  "type": "integer"
                },
                "office_integration_enabled": {
                  "description": "Enable integration with Office for the web?",
                  "type": "boolean"
                },
                "password": {
                  "description": "User password.",
                  "type": "string"
                },
                "password_confirmation": {
                  "description": "Optional, but if provided, we will ensure that it matches the value sent in `password`.",
                  "type": "string"
                },
                "password_validity_days": {
                  "description": "Number of days to allow user to use the same password",
                  "format": "int32",
                  "type": "integer"
                },
                "readonly_site_admin": {
                  "description": "Is the user an allowed to view all (non-billing) site configuration for this site?",
                  "type": "boolean"
                },
                "receive_admin_alerts": {
                  "description": "Should the user receive admin alerts such a certificate expiration notifications and overages?",
                  "type": "boolean"
                },
                "require_2fa": {
                  "description": "2FA required setting",
                  "enum": [
                    "use_system_setting",
                    "always_require",
                    "never_require"
                  ],
                  "type": "string"
                },
                "require_login_by": {
                  "description": "Require user to login by specified date otherwise it will be disabled.",
                  "format": "date-time",
                  "type": "string"
                },
                "require_password_change": {
                  "description": "Is a password change required upon next user login?",
                  "type": "boolean"
                },
                "restapi_permission": {
                  "description": "Can this user access the Web app, Desktop app, SDKs, or REST API?  (All of these tools use the API internally, so this is one unified permission set.)",
                  "type": "boolean"
                },
                "self_managed": {
                  "description": "Does this user manage it's own credentials or is it a shared/bot user?",
                  "type": "boolean"
                },
                "sftp_permission": {
                  "description": "Can the user access with SFTP?",
                  "type": "boolean"
                },
                "site_admin": {
                  "description": "Is the user an administrator for this site?",
                  "type": "boolean"
                },
                "skip_welcome_screen": {
                  "description": "Skip Welcome page in the UI?",
                  "type": "boolean"
                },
                "ssl_required": {
                  "description": "SSL required setting",
                  "enum": [
                    "use_system_setting",
                    "always_require",
                    "never_require"
                  ],
                  "type": "string"
                },
                "sso_strategy_id": {
                  "description": "SSO (Single Sign On) strategy ID for the user, if applicable.",
                  "format": "int32",
                  "type": "integer"
                },
                "subscribe_to_newsletter": {
                  "description": "Is the user subscribed to the newsletter?",
                  "type": "boolean"
                },
                "time_zone": {
                  "description": "User time zone",
                  "type": "string"
                },
                "user_home": {
                  "description": "Home folder for FTP/SFTP.  Note that this is not used for API, Desktop, or Web interface.",
                  "type": "string"
                },
                "user_root": {
                  "description": "Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set).  Note that this is not used for API, Desktop, or Web interface.",
                  "type": "string"
                },
                "username": {
                  "description": "User's username",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostApiKeys": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "description": {
                  "description": "User-supplied description of API key.",
                  "type": "string"
                },
                "expires_at": {
                  "description": "API Key expiration date",
                  "format": "date-time",
                  "type": "string"
                },
                "name": {
                  "description": "Internal name for the API Key.  For your use.",
                  "type": "string"
                },
                "path": {
                  "description": "Folder path restriction for `office_integration` permission set API keys.",
                  "type": "string"
                },
                "permission_set": {
                  "default": "full",
                  "description": "Permissions for this API Key. It must be full for site-wide API Keys.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations). Keys with the `office_integration` permission set are auto generated, and automatically expire, to allow users to interact with office integration platforms. Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.",
                  "enum": [
                    "none",
                    "full",
                    "desktop_app",
                    "sync_app",
                    "office_integration",
                    "mobile_app"
                  ],
                  "type": "string"
                },
                "user_id": {
                  "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostClickwraps": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "body": {
                  "description": "Body text of Clickwrap (supports Markdown formatting).",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the Clickwrap agreement (used when selecting from multiple Clickwrap agreements.)",
                  "type": "string"
                },
                "use_with_bundles": {
                  "description": "Use this Clickwrap for Bundles?",
                  "enum": [
                    "none",
                    "available",
                    "require",
                    "available_to_all_users"
                  ],
                  "type": "string"
                },
                "use_with_inboxes": {
                  "description": "Use this Clickwrap for Inboxes?",
                  "enum": [
                    "none",
                    "available",
                    "require",
                    "available_to_all_users"
                  ],
                  "type": "string"
                },
                "use_with_users": {
                  "description": "Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.",
                  "enum": [
                    "none",
                    "require"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostMessageCommentReactions": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "emoji": {
                  "description": "Emoji to react with.",
                  "type": "string"
                },
                "user_id": {
                  "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostRemoteServers": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "aws_access_key": {
                  "description": "AWS Access Key.",
                  "type": "string"
                },
                "aws_secret_key": {
                  "description": "AWS secret key.",
                  "type": "string"
                },
                "azure_blob_storage_access_key": {
                  "description": "Azure Blob Storage secret key.",
                  "type": "string"
                },
                "azure_blob_storage_account": {
                  "description": "Azure Blob Storage Account name",
                  "type": "string"
                },
                "azure_blob_storage_container": {
                  "description": "Azure Blob Storage Container name",
                  "type": "string"
                },
                "azure_blob_storage_hierarchical_namespace": {
                  "description": "Enable when storage account has hierarchical namespace feature enabled",
                  "type": "boolean"
                },
                "azure_blob_storage_sas_token": {
                  "description": "Shared Access Signature (SAS) token",
                  "type": "string"
                },
                "azure_files_storage_access_key": {
                  "description": "Azure File Storage access key.",
                  "type": "string"
                },
                "azure_files_storage_account": {
                  "description": "Azure File Storage Account name",
                  "type": "string"
                },
                "azure_files_storage_dns_suffix": {
                  "description": "Custom DNS suffix",
                  "type": "string"
                },
                "azure_files_storage_sas_token": {
                  "description": "Shared Access Signature (SAS) token",
                  "type": "string"
                },
                "azure_files_storage_share_name": {
                  "description": "Azure File Storage Share name",
                  "type": "string"
                },
                "backblaze_b2_application_key": {
                  "description": "Backblaze B2 Cloud Storage applicationKey.",
                  "type": "string"
                },
                "backblaze_b2_bucket": {
                  "description": "Backblaze B2 Cloud Storage Bucket name",
                  "type": "string"
                },
                "backblaze_b2_key_id": {
                  "description": "Backblaze B2 Cloud Storage keyID.",
                  "type": "string"
                },
                "backblaze_b2_s3_endpoint": {
                  "description": "Backblaze B2 Cloud Storage S3 Endpoint",
                  "type": "string"
                },
                "cloudflare_access_key": {
                  "description": "Cloudflare Access Key.",
                  "type": "string"
                },
                "cloudflare_bucket": {
                  "description": "Cloudflare Bucket name",
                  "type": "string"
                },
                "cloudflare_endpoint": {
                  "description": "Cloudflare endpoint",
                  "type": "string"
                },
                "cloudflare_secret_key": {
                  "description": "Cloudflare secret key",
                  "type": "string"
                },
                "dropbox_teams": {
                  "description": "List Team folders in root",
                  "type": "boolean"
                },
                "enable_dedicated_ips": {
                  "description": "`true` if remote server only accepts connections from dedicated IPs",
                  "type": "boolean"
                },
                "filebase_access_key": {
                  "description": "Filebase Access Key.",
                  "type": "string"
                },
                "filebase_bucket": {
                  "description": "Filebase Bucket name",
                  "type": "string"
                },
                "filebase_secret_key": {
                  "description": "Filebase secret key",
                  "type": "string"
                },
                "files_agent_permission_set": {
                  "description": "Local permissions for files agent. read_only, write_only, or read_write",
                  "enum": [
                    "read_write",
                    "read_only",
                    "write_only"
                  ],
                  "type": "string"
                },
                "files_agent_root": {
                  "description": "Agent local root path",
                  "type": "string"
                },
                "files_agent_version": {
                  "description": "Files Agent version",
                  "type": "string"
                },
                "google_cloud_storage_bucket": {
                  "description": "Google Cloud Storage bucket name",
                  "type": "string"
                },
                "google_cloud_storage_credentials_json": {
                  "description": "A JSON file that contains the private key. To generate see https://cloud.google.com/storage/docs/json_api/v1/how-tos/authorizing#APIKey",
                  "type": "string"
                },
                "google_cloud_storage_project_id": {
                  "description": "Google Cloud Project ID",
                  "type": "string"
                },
                "hostname": {
                  "description": "Hostname or IP address",
                  "type": "string"
                },
                "linode_access_key": {
                  "description": "Linode Access Key.",
                  "type": "string"
                },
                "linode_bucket": {
                  "description": "Linode Bucket name",
                  "type": "string"
                },
                "linode_region": {
                  "description": "Linode region",
                  "type": "string"
                },
                "linode_secret_key": {
                  "description": "Linode secret key",
                  "type": "string"
                },
                "max_connections": {
                  "description": "Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).",
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "description": "Internal name for your reference",
                  "type": "string"
                },
                "one_drive_account_type": {
                  "description": "Either personal or business_other account types",
                  "enum": [
                    "personal",
                    "business_other"
                  ],
                  "type": "string"
                },
                "password": {
                  "description": "Password if needed.",
                  "type": "string"
                },
                "pin_to_site_region": {
                  "description": "If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a site-wide setting which will force it to true.",
                  "type": "boolean"
                },
                "port": {
                  "description": "Port for remote server.  Not needed for S3.",
                  "format": "int32",
                  "type": "integer"
                },
                "private_key": {
                  "description": "Private key if needed.",
                  "type": "string"
                },
                "private_key_passphrase": {
                  "description": "Passphrase for private key if needed.",
                  "type": "string"
                },
                "rackspace_api_key": {
                  "description": "Rackspace API key from the Rackspace Cloud Control Panel.",
                  "type": "string"
                },
                "rackspace_container": {
                  "description": "The name of the container (top level directory) where files will sync.",
                  "type": "string"
                },
                "rackspace_region": {
                  "description": "Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/",
                  "type": "string"
                },
                "rackspace_username": {
                  "description": "Rackspace username used to login to the Rackspace Cloud Control Panel.",
                  "type": "string"
                },
                "reset_authentication": {
                  "description": "Reset authenticated account",
                  "type": "boolean"
                },
                "s3_bucket": {
                  "description": "S3 bucket name",
                  "type": "string"
                },
                "s3_compatible_access_key": {
                  "description": "S3-compatible Access Key.",
                  "type": "string"
                },
                "s3_compatible_bucket": {
                  "description": "S3-compatible Bucket name",
                  "type": "string"
                },
                "s3_compatible_endpoint": {
                  "description": "S3-compatible endpoint",
                  "type": "string"
                },
                "s3_compatible_region": {
                  "description": "S3-compatible endpoint",
                  "type": "string"
                },
                "s3_compatible_secret_key": {
                  "description": "S3-compatible secret key",
                  "type": "string"
                },
                "s3_region": {
                  "description": "S3 region",
                  "type": "string"
                },
                "server_certificate": {
                  "description": "Remote server certificate",
                  "enum": [
                    "require_match",
                    "allow_any"
                  ],
                  "type": "string"
                },
                "server_host_key": {
                  "description": "Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts",
                  "type": "string"
                },
                "server_type": {
                  "description": "Remote server type.",
                  "enum": [
                    "ftp",
                    "sftp",
                    "s3",
                    "google_cloud_storage",
                    "webdav",
                    "wasabi",
                    "backblaze_b2",
                    "one_drive",
                    "rackspace",
                    "box",
                    "dropbox",
                    "google_drive",
                    "azure",
                    "sharepoint",
                    "s3_compatible",
                    "azure_files",
                    "files_agent",
                    "filebase",
                    "cloudflare",
                    "linode"
                  ],
                  "type": "string"
                },
                "ssl": {
                  "description": "Should we require SSL?",
                  "enum": [
                    "if_available",
                    "require",
                    "require_implicit",
                    "never"
                  ],
                  "type": "string"
                },
                "ssl_certificate": {
                  "description": "SSL client certificate.",
                  "type": "string"
                },
                "username": {
                  "description": "Remote server username.  Not needed for S3 buckets.",
                  "type": "string"
                },
                "wasabi_access_key": {
                  "description": "Wasabi access key.",
                  "type": "string"
                },
                "wasabi_bucket": {
                  "description": "Wasabi Bucket name",
                  "type": "string"
                },
                "wasabi_region": {
                  "description": "Wasabi region",
                  "type": "string"
                },
                "wasabi_secret_key": {
                  "description": "Wasabi secret key.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostSftpHostKeys": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "name": {
                  "description": "The friendly name of this SFTP Host Key.",
                  "type": "string"
                },
                "private_key": {
                  "description": "The private key data.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostSiemHttpDestinations": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "additional_headers": {
                  "description": "Additional HTTP Headers included in calls to the destination URL",
                  "type": "object"
                },
                "api_request_send_enabled": {
                  "description": "Whether or not sending is enabled for api_request logs.",
                  "type": "boolean"
                },
                "automation_send_enabled": {
                  "description": "Whether or not sending is enabled for automation logs.",
                  "type": "boolean"
                },
                "azure_dcr_immutable_id": {
                  "description": "Applicable only for destination type: azure. Immutable ID of the Data Collection Rule.",
                  "type": "string"
                },
                "azure_oauth_client_credentials_client_id": {
                  "description": "Applicable only for destination type: azure. Client Credentials OAuth Client ID.",
                  "type": "string"
                },
                "azure_oauth_client_credentials_client_secret": {
                  "description": "Applicable only for destination type: azure. Client Credentials OAuth Client Secret.",
                  "type": "string"
                },
                "azure_oauth_client_credentials_tenant_id": {
                  "description": "Applicable only for destination type: azure. Client Credentials OAuth Tenant ID.",
                  "type": "string"
                },
                "azure_stream_name": {
                  "description": "Applicable only for destination type: azure. Name of the stream in the DCR that represents the destination table.",
                  "type": "string"
                },
                "datadog_api_key": {
                  "description": "Applicable only for destination type: datadog. API key provided by Datadog.",
                  "type": "string"
                },
                "destination_type": {
                  "description": "Destination Type",
                  "enum": [
                    "generic",
                    "splunk",
                    "azure",
                    "qradar",
                    "sumo",
                    "rapid7",
                    "solar_winds",
                    "new_relic",
                    "datadog"
                  ],
                  "type": "string"
                },
                "destination_url": {
                  "description": "Destination Url",
                  "type": "string"
                },
                "email_send_enabled": {
                  "description": "Whether or not sending is enabled for email logs.",
                  "type": "boolean"
                },
                "exavault_api_request_send_enabled": {
                  "description": "Whether or not sending is enabled for exavault_api_request logs.",
                  "type": "boolean"
                },
                "ftp_action_send_enabled": {
                  "description": "Whether or not sending is enabled for ftp_action logs.",
                  "type": "boolean"
                },
                "generic_payload_type": {
                  "description": "Applicable only for destination type: generic. Indicates the type of HTTP body. Can be json_newline or json_array. json_newline is multiple log entries as JSON separated by newlines. json_array is a single JSON array containing multiple log entries as JSON.",
                  "enum": [
                    "json_newline",
                    "json_array"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "Name for this Destination",
                  "type": "string"
                },
                "new_relic_api_key": {
                  "description": "Applicable only for destination type: new_relic. API key provided by New Relic.",
                  "type": "string"
                },
                "outbound_connection_send_enabled": {
                  "description": "Whether or not sending is enabled for outbound_connection logs.",
                  "type": "boolean"
                },
                "public_hosting_request_send_enabled": {
                  "description": "Whether or not sending is enabled for public_hosting_request logs.",
                  "type": "boolean"
                },
                "qradar_password": {
                  "description": "Applicable only for destination type: qradar. Basic auth password provided by QRadar.",
                  "type": "string"
                },
                "qradar_username": {
                  "description": "Applicable only for destination type: qradar. Basic auth username provided by QRadar.",
                  "type": "string"
                },
                "sending_active": {
                  "description": "Whether this SIEM HTTP Destination is currently being sent to or not",
                  "type": "boolean"
                },
                "sftp_action_send_enabled": {
                  "description": "Whether or not sending is enabled for sftp_action logs.",
                  "type": "boolean"
                },
                "solar_winds_token": {
                  "description": "Applicable only for destination type: solar_winds. Authentication token provided by Solar Winds.",
                  "type": "string"
                },
                "splunk_token": {
                  "description": "Applicable only for destination type: splunk. Authentication token provided by Splunk.",
                  "type": "string"
                },
                "sync_send_enabled": {
                  "description": "Whether or not sending is enabled for sync logs.",
                  "type": "boolean"
                },
                "web_dav_action_send_enabled": {
                  "description": "Whether or not sending is enabled for web_dav_action logs.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "PostSiteTestWebhook": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "action": {
                  "description": "Action for test body.",
                  "type": "string"
                },
                "body": {
                  "description": "Additional body parameters to include in the webhook payload.",
                  "type": "object"
                },
                "encoding": {
                  "description": "Encoding type for the webhook payload. Can be JSON, XML, or RAW (form data).",
                  "type": "string"
                },
                "headers": {
                  "description": "Additional request headers to send via HTTP.",
                  "type": "object"
                },
                "method": {
                  "description": "HTTP request method (GET or POST).",
                  "type": "string"
                },
                "url": {
                  "description": "URL for testing the webhook.",
                  "type": "string"
                }
              },
              "required": [
                "url"
              ],
              "type": "object"
            }
          }
        }
      },
      "PostUserPublicKeys": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "properties": {
                "public_key": {
                  "description": "Actual contents of SSH key.",
                  "type": "string"
                },
                "title": {
                  "description": "Internal reference for key.",
                  "type": "string"
                },
                "user_id": {
                  "description": "User ID.  Provide a value of `0` to operate the current session's user.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "schemas": {
      "AccountLineItemEntity": {
        "description": "AccountLineItemEntity model",
        "properties": {
          "amount": {
            "description": "Line item amount",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "balance": {
            "description": "Line item balance",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "created_at": {
            "description": "Line item created at",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "description": "Line item currency",
            "example": "USD",
            "type": "string"
          },
          "download_uri": {
            "description": "Line item download uri",
            "example": "https://url...",
            "type": "string"
          },
          "id": {
            "description": "Line item Id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "invoice_line_items": {
            "description": "Associated invoice line items",
            "example": [
              {
                "amount": 1,
                "created_at": "2000-01-01T01:00:00Z",
                "description": "Service from 2019-01-01 through 2019-12-31",
                "plan": "Premier",
                "service_end_at": "2000-01-01T01:00:00Z",
                "service_start_at": "2000-01-01T01:00:00Z",
                "site": "My site",
                "type": "invoice"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItemEntity"
            },
            "type": "array"
          },
          "method": {
            "description": "Line item payment method",
            "example": "paypal",
            "type": "string"
          },
          "payment_line_items": {
            "description": "Associated payment line items",
            "example": [
              {
                "amount": 1,
                "created_at": "2000-01-01T01:00:00Z",
                "invoice_id": 1,
                "payment_id": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PaymentLineItemEntity"
            },
            "type": "array"
          },
          "payment_reversed_at": {
            "description": "Date/time payment was reversed if applicable",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "payment_type": {
            "description": "Type of payment if applicable",
            "example": "example",
            "type": "string"
          },
          "site_name": {
            "description": "Site name this line item is for",
            "example": "My Site",
            "type": "string"
          },
          "type": {
            "description": "Type of line item, either payment or invoice",
            "example": "invoice",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An AccountLineItem is a single line item in the accounting ledger for a billing account. These include payments and invoices.\n"
      },
      "ActionEntity": {
        "description": "ActionEntity model",
        "properties": {
          "action": {
            "description": "Type of action",
            "enum": [
              "create",
              "read",
              "update",
              "destroy",
              "move",
              "login",
              "failedlogin",
              "copy",
              "user_create",
              "user_update",
              "user_destroy",
              "group_create",
              "group_update",
              "group_destroy",
              "permission_create",
              "permission_destroy",
              "api_key_create",
              "api_key_update",
              "api_key_destroy"
            ],
            "example": "create",
            "type": "string"
          },
          "destination": {
            "description": "The destination path for this action, if applicable",
            "example": "/to_path",
            "type": "string"
          },
          "display": {
            "description": "Friendly displayed output",
            "example": "Actual text of the action here.",
            "type": "string"
          },
          "failure_type": {
            "description": "Failure type.  If action was a user login or session failure, why did it fail?",
            "enum": [
              "expired_trial",
              "account_overdue",
              "locked_out",
              "ip_mismatch",
              "password_mismatch",
              "site_mismatch",
              "username_not_found",
              "none",
              "no_ftp_permission",
              "no_web_permission",
              "no_directory",
              "errno_enoent",
              "no_sftp_permission",
              "no_dav_permission",
              "no_restapi_permission",
              "key_mismatch",
              "region_mismatch",
              "expired_access",
              "desktop_ip_mismatch",
              "desktop_api_key_not_used_quickly_enough",
              "disabled",
              "country_mismatch",
              "insecure_ftp",
              "insecure_cipher",
              "rate_limited"
            ],
            "example": "none",
            "type": "string"
          },
          "id": {
            "description": "Action ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "interface": {
            "description": "Interface on which this action occurred.",
            "enum": [
              "web",
              "ftp",
              "robot",
              "jsapi",
              "webdesktopapi",
              "sftp",
              "dav",
              "desktop",
              "restapi",
              "scim",
              "office",
              "mobile",
              "as2",
              "inbound_email",
              "remote"
            ],
            "example": "web",
            "type": "string"
          },
          "ip": {
            "description": "IP Address that performed this action",
            "example": "192.283.128.182",
            "type": "string"
          },
          "path": {
            "description": "Path",
            "example": "path",
            "type": "string"
          },
          "source": {
            "description": "The source path for this action, if applicable",
            "example": "/from_path",
            "type": "string"
          },
          "targets": {
            "description": "Targets",
            "example": {},
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "object"
            }
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_is_from_parent_site": {
            "description": "true if this change was performed by a user on a parent site.",
            "example": false,
            "type": "boolean"
          },
          "username": {
            "description": "Username",
            "example": "user",
            "type": "string"
          },
          "when": {
            "description": "Action occurrence date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An Action is a single record in our history log. File and Login actions on Files.com are recorded and can be queried via History API.\n\nThis set of endpoints only provides access to recent actions (actions created within 24 hours).  In most cases,\nyou would be better served to create a Webhook, which sends actions to your server, rather than poll this endpoint.\n\nThe HistoryExport set of endpoints provides a richer ability to query and filter, as well as search the entire\nlifetime of your history log.\n"
      },
      "ActionNotificationExportEntity": {
        "description": "ActionNotificationExportEntity model",
        "properties": {
          "end_at": {
            "description": "End date/time of export range.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "export_version": {
            "description": "Version of the underlying records for the export.",
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "History Export ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "query_folder": {
            "description": "Return notifications that were triggered by actions in this folder.",
            "example": "MyFolder",
            "type": "string"
          },
          "query_message": {
            "description": "Error message associated with the request, if any.",
            "example": "Connection Refused",
            "type": "string"
          },
          "query_path": {
            "description": "Return notifications that were triggered by actions on this specific path.",
            "example": "MyFile.txt",
            "type": "string"
          },
          "query_request_method": {
            "description": "The HTTP request method used by the webhook.",
            "example": "GET",
            "type": "string"
          },
          "query_request_url": {
            "description": "The target webhook URL.",
            "example": "http://example.com/webhook",
            "type": "string"
          },
          "query_status": {
            "description": "The HTTP status returned from the server in response to the webhook request.",
            "example": "200",
            "type": "string"
          },
          "query_success": {
            "description": "true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise.",
            "example": true,
            "type": "boolean"
          },
          "results_url": {
            "description": "If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.",
            "example": "https://files.com/action_notification_results.csv",
            "type": "string"
          },
          "start_at": {
            "description": "Start date/time of export range.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of export.  Valid values: `building`, `ready`, or `failed`",
            "example": "ready",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An ActionNotificationExport is an operation that provides access to outgoing webhook logs. Querying webhook logs is a little different than other APIs.\n\nAll queries against the archive must be submitted as Exports.  (Even our Web UI creates an Export behind the scenes.)\n\nIn any query field in this API, you may specify multiple values separated by commas.  That means that commas\ncannot be searched for themselves, and neither can single quotation marks.\n\nUse the following steps to complete an export:\n\n1. Initiate the export by using the Create Action Notification Export endpoint. Non Site Admins must query by folder or path.\n2. Using the `id` from the response to step 1, poll the Show Action Notification Export endpoint. Check the `status` field until it is `ready`.\n3. You can download the results of the export as a CSV file using the `results_url` field in the response from step 2. If you want to page through the records in JSON format, use the List Action Notification Export Results endpoint, passing the `id` that you got in step 1 as the `action_notification_export_id` parameter. Check the `X-Files-Cursor-Next` header to see if there are more records available, and resubmit the same request with a `cursor` parameter to fetch the next page of results.  Unlike most API Endpoints, this endpoint does not provide `X-Files-Cursor-Prev` cursors allowing reverse pagination through the results.  This is due to limitations in Amazon Athena, the underlying data lake for these records.\n\nIf you intend to use this API for high volume or automated use, please contact us with more information\nabout your use case.\n\n## Example Queries\n\n* History for a folder: `{ \"query_folder\": \"path/to/folder\" }`\n* History for a range of time: `{ \"start_at\": \"2021-03-18 12:00:00\", \"end_at\": \"2021-03-19 12:00:00\" }`\n* History of all notifications that used GET or POST: `{ \"query_request_method\": \"GET,POST\" }`\n"
      },
      "ActionNotificationExportResultEntity": {
        "description": "ActionNotificationExportResultEntity model",
        "properties": {
          "created_at": {
            "description": "When the notification was sent.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "folder": {
            "description": "The folder associated with the triggering action for this notification.",
            "example": "MyFolder",
            "type": "string"
          },
          "id": {
            "description": "Notification ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "A message indicating the overall status of the webhook notification.",
            "example": "Success",
            "type": "string"
          },
          "path": {
            "description": "The path to the actual file that triggered this notification.",
            "example": "MyFolder/MyFile.txt",
            "type": "string"
          },
          "request_headers": {
            "description": "A JSON-encoded string with headers that were sent with the webhook.",
            "example": "{\"User-Agent\":\"Files.com Webhook\"}",
            "type": "string"
          },
          "request_method": {
            "description": "The HTTP verb used to perform the webhook.",
            "example": "GET",
            "type": "string"
          },
          "request_url": {
            "description": "The webhook request URL.",
            "example": "www.example.com/webhook_receiver",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code returned in the webhook response.",
            "example": 200,
            "format": "int32",
            "type": "integer"
          },
          "success": {
            "description": "`true` if the webhook succeeded by receiving a 200 or 204 response.",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "An ActionNotificationExportResult is a single record containing webhook log information that can be obtained as a part of Action Notification Export request.\n"
      },
      "ApiKeyEntity": {
        "description": "ApiKeyEntity model",
        "properties": {
          "created_at": {
            "description": "Time which API Key was created",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "User-supplied description of API key.",
            "example": "example",
            "type": "string"
          },
          "descriptive_label": {
            "description": "Unique label that describes this API key.  Useful for external systems where you may have API keys from multiple accounts and want a human-readable label for each key.",
            "example": "Site-wide API key for https://site.files.com/ (key ID #1)",
            "type": "string"
          },
          "expires_at": {
            "description": "API Key expiration date",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "API Key ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "key": {
            "description": "API Key actual key string",
            "example": "[key]",
            "type": "string"
          },
          "last_use_at": {
            "description": "API Key last used - note this value is only updated once per 3 hour period, so the 'actual' time of last use may be up to 3 hours later than this timestamp.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Internal name for the API Key.  For your use.",
            "example": "My Main API Key",
            "type": "string"
          },
          "permission_set": {
            "description": "Permissions for this API Key. It must be full for site-wide API Keys.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations). Keys with the `office_integration` permission set are auto generated, and automatically expire, to allow users to interact with office integration platforms. Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.",
            "enum": [
              "none",
              "full",
              "desktop_app",
              "sync_app",
              "office_integration",
              "mobile_app"
            ],
            "example": "full",
            "type": "string"
          },
          "platform": {
            "description": "If this API key represents a Desktop app, what platform was it created on?",
            "example": "win32",
            "type": "string"
          },
          "url": {
            "description": "URL for API host.",
            "example": "example",
            "type": "string"
          },
          "user_id": {
            "description": "User ID for the owner of this API Key.  May be blank for Site-wide API Keys.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "An APIKey is a key that allows programmatic access to your Site.\n\nAPI keys confer all the permissions of the user who owns them.\nIf an API key is created without a user owner, it is considered a site-wide API key, which has full permissions to do anything on the Site.\n\nWe recommend registering API keys to service users wherever possible and then using User or Group Permissions to restrict that API Key appropriately.\n"
      },
      "ApiRequestLogEntity": {
        "description": "ApiRequestLogEntity model",
        "properties": {
          "api_key_id": {
            "description": "API Key ID, if applicable",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "api_key_prefix": {
            "description": "API Key Prefix, if applicable",
            "example": "example",
            "type": "string"
          },
          "api_name": {
            "description": "Name of API Endpoint",
            "example": "example",
            "type": "string"
          },
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "error_message": {
            "description": "Error message, if applicable",
            "example": "example",
            "type": "string"
          },
          "error_type": {
            "description": "Error type, if applicable",
            "example": "example",
            "type": "string"
          },
          "interface": {
            "description": "API Interface",
            "example": "example",
            "type": "string"
          },
          "request_host": {
            "description": "Hostname the request was sent to",
            "example": "example",
            "type": "string"
          },
          "request_id": {
            "description": "Unique Id of the Request",
            "example": "example",
            "type": "string"
          },
          "request_ip": {
            "description": "IP of requesting client",
            "example": "example",
            "type": "string"
          },
          "request_method": {
            "description": "HTTP Method",
            "example": "example",
            "type": "string"
          },
          "request_path": {
            "description": "Request path",
            "example": "example",
            "type": "string"
          },
          "response_code": {
            "description": "HTTP Response Code",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "success": {
            "description": "`false` if HTTP Response Code is 4xx or 5xx",
            "example": true,
            "type": "boolean"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "user_agent": {
            "description": "User-Agent",
            "example": "example",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_is_from_parent_site": {
            "description": "true if this change was performed by a user on a parent site.",
            "example": false,
            "type": "boolean"
          },
          "username": {
            "description": "Username",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An ApiRequestLog is an audit log for monitoring and troubleshooting requests made via API to your site.\n"
      },
      "AppEntity": {
        "description": "AppEntity model",
        "properties": {
          "app_type": {
            "description": "The type of the App",
            "enum": [
              "sdk",
              "sso",
              "remote_server",
              "folder_behavior",
              "client_app",
              "app_integration",
              "siem"
            ],
            "example": "example",
            "type": "string"
          },
          "documentation_links": {
            "description": "Collection of named links to documentation",
            "example": {
              "Important Info": "http://files.test/learn-more"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "extended_description": {
            "description": "Long description for the in-App landing page",
            "example": "example",
            "type": "string"
          },
          "extended_description_for_marketing_site": {
            "description": "Long form description of the App",
            "example": "example",
            "type": "string"
          },
          "external_homepage_url": {
            "description": "Link to external homepage",
            "example": "example",
            "type": "string"
          },
          "featured": {
            "description": "Is featured on the App listing?",
            "example": true,
            "type": "boolean"
          },
          "folder_behavior_type": {
            "description": "Associated Folder Behavior type, if any",
            "enum": [
              "webhook",
              "file_expiration",
              "auto_encrypt",
              "lock_subfolders",
              "storage_region",
              "serve_publicly",
              "create_user_folders",
              "remote_server_sync",
              "inbox",
              "limit_file_extensions",
              "limit_file_regex",
              "amazon_sns",
              "watermark",
              "remote_server_mount",
              "slack_webhook",
              "auto_decrypt",
              "override_upload_filename",
              "permission_fence",
              "limit_filename_length",
              "organize_files_into_subfolders"
            ],
            "example": "example",
            "type": "string"
          },
          "icon_url": {
            "description": "App icon",
            "example": "example",
            "type": "string"
          },
          "logo_thumbnail_url": {
            "description": "Logo thumbnail for the App",
            "example": "example",
            "type": "string"
          },
          "logo_url": {
            "description": "Full size logo for the App",
            "example": "example",
            "type": "string"
          },
          "marketing_intro": {
            "description": "Marketing introdution of the App",
            "example": "example",
            "type": "string"
          },
          "marketing_youtube_url": {
            "description": "Marketing video page",
            "example": "example",
            "type": "string"
          },
          "name": {
            "description": "Name of the App",
            "example": "example",
            "type": "string"
          },
          "package_manager_install_command": {
            "description": "Package manager install command",
            "example": "example",
            "type": "string"
          },
          "remote_server_type": {
            "description": "Associated Remote Server type, if any",
            "enum": [
              "ftp",
              "sftp",
              "s3",
              "google_cloud_storage",
              "webdav",
              "wasabi",
              "backblaze_b2",
              "one_drive",
              "rackspace",
              "box",
              "dropbox",
              "google_drive",
              "azure",
              "sharepoint",
              "s3_compatible",
              "azure_files",
              "files_agent",
              "filebase",
              "cloudflare",
              "linode"
            ],
            "example": "example",
            "type": "string"
          },
          "screenshot_list_urls": {
            "description": "Screenshots of the App",
            "example": [
              "example"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sdk_installation_instructions_link": {
            "description": "Link to SDK installation instructions",
            "example": "example",
            "type": "string"
          },
          "short_description": {
            "description": "Short description of the App",
            "example": "example",
            "type": "string"
          },
          "siem_type": {
            "description": "Associated SIEM type, if any",
            "enum": [
              "generic",
              "splunk",
              "azure",
              "qradar",
              "sumo",
              "rapid7",
              "solar_winds",
              "new_relic",
              "datadog"
            ],
            "example": "example",
            "type": "string"
          },
          "sso_strategy_type": {
            "description": "Associated SSO Strategy type, if any",
            "enum": [
              "google",
              "auth0",
              "okta",
              "azure",
              "box",
              "dropbox",
              "slack",
              "onelogin",
              "saml",
              "idaptive",
              "ldap",
              "scim",
              "jumpcloud"
            ],
            "example": "example",
            "type": "string"
          },
          "tutorial_youtube_url": {
            "description": "Tutorial video page",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An App represents one of the various integrations provided by Files.com.  These are what are listed in the Integrations Catalog in the web interface.\n\nCurrently, all apps are developed internally by Files.com, though we do have the infrastructure to support vendor-developed apps.  If you are a third party vendor interested in developing for the Files.com ecosystem, please contact us.  We'd love to hear more.\n"
      },
      "As2IncomingMessageEntity": {
        "description": "As2IncomingMessageEntity model",
        "properties": {
          "activity_log": {
            "description": "JSON Structure of the activity log.",
            "example": "example",
            "type": "string"
          },
          "as2_from": {
            "description": "AS2 FROM header of message",
            "example": "example",
            "type": "string"
          },
          "as2_partner_id": {
            "description": "Id of the AS2 Partner associated with this message.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "as2_station_id": {
            "description": "Id of the AS2 Station associated with this message.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "as2_to": {
            "description": "AS2 TO header of message",
            "example": "example",
            "type": "string"
          },
          "attachment_filename": {
            "description": "Filename of the file being received.",
            "example": "example",
            "type": "string"
          },
          "body_size": {
            "description": "Encrypted Payload Body Size",
            "example": "example",
            "type": "string"
          },
          "content_type": {
            "description": "Content Type header of the incoming message.",
            "example": "example",
            "type": "string"
          },
          "created_at": {
            "description": "Message creation date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "date": {
            "description": "Date Header",
            "example": "example",
            "type": "string"
          },
          "encrypted_uri": {
            "description": "URL to download the encrypted signed smime that is to sent as AS2 body",
            "example": "example",
            "type": "string"
          },
          "hex_recipient_serial": {
            "description": "Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial in hex format.",
            "example": "A5:EB:C1:95:DC:D8:2B:E7",
            "type": "string"
          },
          "http_headers": {
            "description": "HTTP Headers sent with this message.",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "http_response_code": {
            "description": "HTTP Response Code sent for this message",
            "example": "example",
            "type": "string"
          },
          "http_response_headers": {
            "description": "HTTP Headers sent for this message.",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "id": {
            "description": "Id of the AS2 Partner.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "ip": {
            "description": "IP Address of the Sender",
            "example": "example",
            "type": "string"
          },
          "mdn_response_uri": {
            "description": "URL to download the http response body",
            "example": "example",
            "type": "string"
          },
          "message_decrypted": {
            "description": "Message decrypted successfully?",
            "example": true,
            "type": "boolean"
          },
          "message_id": {
            "description": "AS2 Message Id",
            "example": "example",
            "type": "string"
          },
          "message_mdn_returned": {
            "description": "MDN returned?",
            "example": true,
            "type": "boolean"
          },
          "message_processing_success": {
            "description": "Message processed successfully?",
            "example": true,
            "type": "boolean"
          },
          "message_received": {
            "description": "Message body received?",
            "example": true,
            "type": "boolean"
          },
          "message_signature_verified": {
            "description": "Message signature verified?",
            "example": true,
            "type": "boolean"
          },
          "mic": {
            "description": "AS2 Message Integrity Check",
            "example": "example",
            "type": "string"
          },
          "mic_algo": {
            "description": "AS2 Message Integrity Check Algorithm Used",
            "example": "example",
            "type": "string"
          },
          "processing_result": {
            "description": "Result of processing.",
            "enum": [
              "not_started",
              "unable_to_find_station",
              "unable_to_find_partner",
              "unable_to_validate_signature",
              "decrypt_fail",
              "file_save_fail",
              "success"
            ],
            "example": "example",
            "type": "string"
          },
          "processing_result_description": {
            "description": "Result of processing description.",
            "example": "example",
            "type": "string"
          },
          "raw_uri": {
            "description": "URL to download the original file contents",
            "example": "example",
            "type": "string"
          },
          "recipient_issuer": {
            "description": "Incoming Message Recipient(the Client Cert used to encrypt this message)'s issuer",
            "example": "example",
            "type": "string"
          },
          "recipient_serial": {
            "description": "Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial",
            "example": "example",
            "type": "string"
          },
          "smime_signed_uri": {
            "description": "URL to download the file contents as smime with signature",
            "example": "example",
            "type": "string"
          },
          "smime_uri": {
            "description": "URL to download the file contents encoded as smime",
            "example": "example",
            "type": "string"
          },
          "subject": {
            "description": "AS2 Subject Header",
            "example": "example",
            "type": "string"
          },
          "uuid": {
            "description": "UUID assigned to this message.",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An AS2IncomingMessage is a single record created for each individual AS2 file transfer incoming from a Partner. It contains the message details and tracks the lifecycle status with milestones of the transfer.\n"
      },
      "As2OutgoingMessageEntity": {
        "description": "As2OutgoingMessageEntity model",
        "properties": {
          "activity_log": {
            "description": "JSON Structure of the activity log.",
            "example": "example",
            "type": "string"
          },
          "as2_from": {
            "description": "AS2 FROM",
            "example": "example",
            "type": "string"
          },
          "as2_partner_id": {
            "description": "Id of the AS2 Partner associated with this message.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "as2_station_id": {
            "description": "Id of the AS2 Station associated with this message.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "as2_to": {
            "description": "AS2 TO",
            "example": "example",
            "type": "string"
          },
          "attachment_filename": {
            "description": "Filename of the file being sent.",
            "example": "example",
            "type": "string"
          },
          "body_size": {
            "description": "Encrypted Payload Body Size",
            "example": "example",
            "type": "string"
          },
          "created_at": {
            "description": "Message creation date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "date": {
            "description": "Date Header",
            "example": "example",
            "type": "string"
          },
          "encrypted_uri": {
            "description": "URL to download the encrypted signed smime that is to sent as AS2 body",
            "example": "example",
            "type": "string"
          },
          "http_headers": {
            "description": "HTTP Headers sent with this message.",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "http_response_code": {
            "description": "HTTP Response Code received for this message",
            "example": "example",
            "type": "string"
          },
          "http_response_headers": {
            "description": "HTTP Headers received for this message.",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "http_transmission_duration": {
            "description": "HTTP transmission duration in seceonds",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "Id of the AS2 Partner.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "mdn_message_id_matched": {
            "description": "MDN message id matched?",
            "example": true,
            "type": "boolean"
          },
          "mdn_mic_matched": {
            "description": "MDN MIC matched?",
            "example": true,
            "type": "boolean"
          },
          "mdn_processing_success": {
            "description": "MDN disposition indicate a successful processing?",
            "example": true,
            "type": "boolean"
          },
          "mdn_received": {
            "description": "Did the partner give a response body?",
            "example": true,
            "type": "boolean"
          },
          "mdn_response_uri": {
            "description": "URL to download the http response body",
            "example": "example",
            "type": "string"
          },
          "mdn_signature_verified": {
            "description": "MDN signature verified?",
            "example": true,
            "type": "boolean"
          },
          "mdn_valid": {
            "description": "Is the response in MDN format?",
            "example": true,
            "type": "boolean"
          },
          "message_id": {
            "description": "AS2 Message Id",
            "example": "example",
            "type": "string"
          },
          "mic": {
            "description": "AS2 Message Integrity Check SHA1",
            "example": "example",
            "type": "string"
          },
          "mic_sha_256": {
            "description": "AS2 Message Integrity Check SHA256",
            "example": "example",
            "type": "string"
          },
          "processing_result": {
            "description": "Result of processing.",
            "enum": [
              "not_started",
              "send_failed",
              "send_success",
              "send_success_mdn_invalid",
              "send_success_mic_mismatch",
              "send_success_message_id_mismatch",
              "send_success_signature_mismatch",
              "send_success_processing_failure",
              "send_failed_unknown_host",
              "send_failed_bad_http_response_code",
              "send_failed_ssl_error",
              "send_failed_connection_refused"
            ],
            "example": "example",
            "type": "string"
          },
          "processing_result_description": {
            "description": "Result of processing description.",
            "example": "example",
            "type": "string"
          },
          "raw_uri": {
            "description": "URL to download the original file contents",
            "example": "example",
            "type": "string"
          },
          "smime_signed_uri": {
            "description": "URL to download the file contents as smime with signature",
            "example": "example",
            "type": "string"
          },
          "smime_uri": {
            "description": "URL to download the file contents encoded as smime",
            "example": "example",
            "type": "string"
          },
          "uuid": {
            "description": "UUID assigned to this message.",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An AS2OutgoingMessage is a single record created for each individual AS2 file transfer out to a Partner. It contains the message details and tracks the lifecycle status with milestones of the transfer.\n"
      },
      "As2PartnerEntity": {
        "description": "As2PartnerEntity model",
        "properties": {
          "additional_http_headers": {
            "description": "Additional HTTP Headers for outgoing message sent to this partner.",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "as2_station_id": {
            "description": "ID of the AS2 Station associated with this partner.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "default_mime_type": {
            "description": "Default mime type of the file attached to the encrypted message",
            "example": "application/octet-stream",
            "type": "string"
          },
          "enable_dedicated_ips": {
            "description": "If `true`, we will use your site's dedicated IPs for all outbound connections to this AS2 Partner.",
            "example": true,
            "type": "boolean"
          },
          "hex_public_certificate_serial": {
            "description": "Serial of public certificate used for message security in hex format.",
            "example": "A5:EB:C1:95:DC:D8:2B:E7",
            "type": "string"
          },
          "http_auth_username": {
            "description": "Username to send to server for HTTP Authentication.",
            "example": "username",
            "type": "string"
          },
          "id": {
            "description": "ID of the AS2 Partner.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "mdn_validation_level": {
            "description": "How should Files.com evaluate message transfer success based on a partner's MDN response?  This setting does not affect MDN storage; all MDNs received from a partner are always stored. `none`: MDN is stored for informational purposes only, a successful HTTPS transfer is a successful AS2 transfer. `weak`: Inspect the MDN for MIC and Disposition only. `normal`: `weak` plus validate MDN signature matches body, `strict`: `normal` but do not allow signatures from self-signed or incorrectly purposed certificates.",
            "enum": [
              "none",
              "weak",
              "normal",
              "strict"
            ],
            "example": "none",
            "type": "string"
          },
          "name": {
            "description": "The partner's formal AS2 name.",
            "example": "AS2 Partner Name",
            "type": "string"
          },
          "public_certificate_issuer": {
            "description": "Issuer of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_md5": {
            "description": "MD5 hash of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_not_after": {
            "description": "Not after value of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_not_before": {
            "description": "Not before value of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_serial": {
            "description": "Serial of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_subject": {
            "description": "Subject of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "server_certificate": {
            "description": "Should we require that the remote HTTP server have a valid SSL Certificate for HTTPS?",
            "enum": [
              "require_match",
              "allow_any"
            ],
            "example": "require_match",
            "type": "string"
          },
          "uri": {
            "description": "Public URI where we will send the AS2 messages (via HTTP/HTTPS).",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An AS2Partner is a counterparty of the Files.com site's AS2 connectivity.  Generally you will have one AS2 Partner created for each counterparty with whom you send and/or receive files via AS2.\n"
      },
      "As2StationEntity": {
        "description": "As2StationEntity model",
        "properties": {
          "domain": {
            "description": "The station's AS2 domain name.",
            "example": "domain.test",
            "type": "string"
          },
          "hex_public_certificate_serial": {
            "description": "Serial of public certificate used for message security in hex format.",
            "example": "A5:EB:C1:95:DC:D8:2B:E7",
            "type": "string"
          },
          "id": {
            "description": "Id of the AS2 Station.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The station's formal AS2 name.",
            "example": "AS2 Station Name",
            "type": "string"
          },
          "private_key_md5": {
            "description": "MD5 hash of private key used for message security.",
            "example": "example",
            "type": "string"
          },
          "private_key_password_md5": {
            "description": "MD5 hash of private key password used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_issuer": {
            "description": "Issuer of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_md5": {
            "description": "MD5 hash of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_not_after": {
            "description": "Not after value of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_not_before": {
            "description": "Not before value of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_serial": {
            "description": "Serial of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "public_certificate_subject": {
            "description": "Subject of public certificate used for message security.",
            "example": "example",
            "type": "string"
          },
          "uri": {
            "description": "Public URI for sending AS2 message to.",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An AS2Station is a remote AS2 server that can send data into Files.com and receive data from Files.com.\n"
      },
      "AutoEntity": {
        "properties": {
          "dynamic": {
            "properties": {},
            "type": "object"
          }
        },
        "type": "object",
        "x-docs": null
      },
      "AutomationEntity": {
        "description": "AutomationEntity model",
        "properties": {
          "always_overwrite_size_matching_files": {
            "description": "Ordinarily, files with identical size in the source and destination will be skipped from copy operations to prevent wasted transfer.  If this flag is `true` we will overwrite the destination file always.  Note that this may cause large amounts of wasted transfer usage.  This setting has no effect unless `overwrite_files` is also set to `true`.",
            "example": true,
            "type": "boolean"
          },
          "automation": {
            "description": "Automation type",
            "enum": [
              "create_folder",
              "delete_file",
              "copy_file",
              "move_file",
              "as2_send",
              "run_sync",
              "import_file"
            ],
            "example": "create_folder",
            "type": "string"
          },
          "deleted": {
            "description": "Indicates if the automation has been deleted.",
            "example": true,
            "type": "boolean"
          },
          "description": {
            "description": "Description for the this Automation.",
            "example": "example",
            "type": "string"
          },
          "destination_replace_from": {
            "description": "If set, this string in the destination path will be replaced with the value in `destination_replace_to`.",
            "example": "example",
            "type": "string"
          },
          "destination_replace_to": {
            "description": "If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.",
            "example": "example",
            "type": "string"
          },
          "destinations": {
            "description": "Destination Paths",
            "example": [
              "destination"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "disabled": {
            "description": "If true, this automation will not run.",
            "example": true,
            "type": "boolean"
          },
          "exclude_pattern": {
            "description": "If set, this glob pattern will exclude files from the automation. Supports globs, except on remote mounts.",
            "example": "path/to/exclude/*",
            "type": "string"
          },
          "flatten_destination_structure": {
            "description": "Normally copy and move automations that use globs will implicitly preserve the source folder structure in the destination.  If this flag is `true`, the source folder structure will be flattened in the destination.  This is useful for copying or moving files from multiple folders into a single destination folder.",
            "example": true,
            "type": "boolean"
          },
          "group_ids": {
            "description": "IDs of Groups for the Automation (i.e. who to Request File from)",
            "example": [
              1,
              2
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "human_readable_schedule": {
            "description": "If trigger is `custom_schedule`, Human readable Custom schedule description for when the automation should be run.",
            "example": "Triggered every Monday, Wednesday at 6:30 AM,\n  2:30 PM Eastern Time (US & Canada) TZ",
            "type": "string"
          },
          "id": {
            "description": "Automation ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "ignore_locked_folders": {
            "description": "If true, the Lock Folders behavior will be disregarded for automated actions.",
            "example": true,
            "type": "boolean"
          },
          "import_urls": {
            "description": "List of URLs to be imported and names to be used.",
            "example": [
              {
                "content": {
                  "group": "support"
                },
                "headers": {
                  "Content-Type": "application/json"
                },
                "method": "POST",
                "name": "users.json",
                "url": "http://example.com/users"
              }
            ],
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "interval": {
            "description": "If trigger is `daily`, this specifies how often to run this automation.  One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`",
            "example": "week",
            "type": "string"
          },
          "last_modified_at": {
            "description": "Time when automation was last modified. Does not change for name or description updates.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "legacy_folder_matching": {
            "description": "If `true`, use the legacy behavior for this automation, where it can operate on folders in addition to just files.  This behavior no longer works and should not be used.",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Name for this automation.",
            "example": "example",
            "type": "string"
          },
          "overwrite_files": {
            "description": "If true, existing files will be overwritten with new files on Move/Copy automations.  Note: by default files will not be overwritten if they appear to be the same file size as the newly incoming file.  Use the `always_overwrite_size_matching_files` option in conjunction with `overwrite_files` to override this behavior and overwrite files no matter what.",
            "example": true,
            "type": "boolean"
          },
          "path": {
            "description": "Path on which this Automation runs.  Supports globs, except on remote mounts.",
            "example": "example",
            "type": "string"
          },
          "path_time_zone": {
            "description": "Timezone to use when rendering timestamps in paths.",
            "example": "Eastern Time (US & Canada)",
            "type": "string"
          },
          "recurring_day": {
            "description": "If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.",
            "example": 25,
            "format": "int32",
            "type": "integer"
          },
          "retry_on_failure_interval_in_minutes": {
            "description": "If the Automation fails, retry at this interval (in minutes).  Acceptable values are 5 through 1440 (one day).  Set to null to disable.",
            "example": 60,
            "format": "int32",
            "type": "integer"
          },
          "retry_on_failure_number_of_attempts": {
            "description": "If the Automation fails, retry at most this many times.  Maximum allowed value: 10.  Set to null to disable.",
            "example": 10,
            "format": "int32",
            "type": "integer"
          },
          "schedule": {
            "description": "If trigger is `custom_schedule`, Custom schedule description for when the automation should be run in json format.",
            "example": "example",
            "type": "object"
          },
          "schedule_days_of_week": {
            "description": "If trigger is `custom_schedule`, Custom schedule description for when the automation should be run. 0-based days of the week. 0 is Sunday, 1 is Monday, etc.",
            "example": [
              0,
              2,
              4
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "schedule_time_zone": {
            "description": "If trigger is `custom_schedule`, Custom schedule Time Zone for when the automation should be run.",
            "example": "Eastern Time (US & Canada)",
            "type": "string"
          },
          "schedule_times_of_day": {
            "description": "If trigger is `custom_schedule`, Custom schedule description for when the automation should be run. Times of day in HH:MM format.",
            "example": [
              "06:30",
              "14:30"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "source": {
            "description": "Source path/glob.  See Automation docs for exact description, but this is used to filter for files in the `path` to find files to operate on. Supports globs, except on remote mounts.",
            "example": "example",
            "type": "string"
          },
          "sync_ids": {
            "description": "IDs of remote sync folder behaviors to run by this Automation",
            "example": [
              1,
              2
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "trigger": {
            "description": "How this automation is triggered to run.",
            "enum": [
              "daily",
              "custom_schedule",
              "webhook",
              "email",
              "action"
            ],
            "example": "daily",
            "type": "string"
          },
          "trigger_actions": {
            "description": "If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy",
            "example": [
              "create"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "user_id": {
            "description": "User ID of the Automation's creator.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_ids": {
            "description": "IDs of Users for the Automation (i.e. who to Request File from)",
            "example": [
              1,
              2
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "value": {
            "description": "A Hash of attributes specific to the automation type.",
            "example": {
              "limit": "1"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "webhook_url": {
            "description": "If trigger is `webhook`, this is the URL of the webhook to trigger the Automation.",
            "example": "https://app.files.com/api/webhooks/abc123",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An Automation is an automated process of controlling workflows on your Files.com site.\n\nAutomations are different from Behaviors because Behaviors are associated with a current folder, while Automations apply across your entire site.\n\nAutomations are never removed when folders are removed, while Behaviors are removed when the associated folder is removed.\n\n## Path Matching\n\nThe `path` attribute specifies which folders this automation applies to.\nIt gets combined with the `source` attribute to determine which files are actually affected by the automation.\nNote that the `path` attribute supports globs, and only refers to _folders_.\nIt's the `source` attribute, which also supports globs, combined with the `path` attribute that determines which files are affected, and automations only operate on the files themselves.\nAdditionally, paths in Automations can refer to folders which don't yet exist.\n\n### Path Globs\n\nAlthough Automations may have a `path` specified, it can be a glob (which includes wildcards), which affects multiple folders.\n\n`*` matches any folder at that level of the path, but not subfolders.  For example, `path/to/*` matches `path/to/folder1` and `path/to/folder2`, but not `path/to/folder1/subfolder`.\n\n`**` matches subfolders recursively.  For example, `path/to/**` matches `path/to/folder1`, `path/to/folder1/subfolder`, `path/to/folder2`, `path/to/folder2/subfolder`, etc.\n\n`?` matches any one character.\n\nUse square brackets `[]` to match any character from a set. This works like a regular expression, including negation using `^`.\n\nCurly brackets `{}` can be used to denote parts of a pattern which will accept a number of alternatives, separated by commas `,`.\nThese alternatives can either be literal text or include special characters including nested curly brackets.\nFor example `{Mon,Tue,Wed,Thu,Fri}` would match abbreviated weekdays, and `202{3-{0[7-9],1?},4-0[1-6]}-*` would match dates from `2023-07-01` through `2024-06-30`.\n\nTo match any of the special characters literally, precede it with a backslash and enclose that pair with square brackets. For example to match a literal `?`, use `[\\?]`.\n\nGlobs are supported on `path`, `source`, and `exclude_pattern` fields. Globs are not supported on remote paths of any kind or for any field.\n\nBy default, Copy and Move automations that use globs will implicitly replicate matched folder structures at the destination.  If you want to flatten the folder structure, set `flatten_destination_structure` to `true`.\n\n## Automation Triggers\n\nAutomations can be triggered in the following ways:\n\n* `custom_schedule` : The automation will run according to the custom schedule parameters for `days_of_week` (0-based) and `times_of_day`. A time zone may be specified via `time_zone` in Rails TimeZone name format.\n* `daily` : The automation will run once in a picked `interval`. You can specify `recurring_day` to select day number inside a picked `interval` it should be run on.\n* `webhook` : the automation will run when a request is sent to the corresponding webhook URL.\n* `action` : The automation will run when a specific action happens, e.g. a file is created or downloaded.\n\nFuture enhancements will allow Automations to be triggered by an incoming email, or by other services.\n\nCurrently, all Automation types support all triggers, with the following exceptions: `Create Folder` and  `Run Remote Server Sync` are not supported by the `action` trigger.\n\nAutomations can be triggered manually if trigger is not set to `action`.\n\n## Destinations\n\nThe `destinations` parameter is a list of paths where files will be copied, moved, or created. It may include formatting parameters to dynamically determine the destination at runtime.\n\n### Relative vs. Absolute Paths\n\nIn order to specify a relative path, it must start with either `./` or `../`. All other paths are considered absolute. In general, leading slashes should never be used on Files.com paths, including here. Paths are interpreted as absolute in all contexts, even without a leading slash.\n\n### Files vs. Folders\n\nIf the destination path ends with a `/`, the filename from the source path will be preserved and put into the folder of this name.  If the destination path does not end with a `/`, it will be interpreted as a filename and will override the source file's filename entirely.\n\n### Formatting Parameters\n\n**Action-Triggered Automations**\n\n* `%tf` : The name of the file that triggered the automation.\n* `%tp` : The path of the file that triggered the automation.\n* `%td` : The directory of the file that triggered the automation.\n* `%tb` : The name of the file (without extension) that triggered the automation.\n* `%te` : The extension of the file that triggered the automation.\n\nFor example, if the triggering file is at `path/to/file.txt`, then the automation destination `path/to/dest/incoming-%tf` will result in the actual destination being `path/to/dest/incoming-file.txt`.\n\n**Parent Folders**\n\nTo reference the parent folder of a source file, use `%p1`, `%p2`, `%p3`, etc. for the first, second, third, etc. parent folder, respectively.\n\nFor example, if the source file is at `accounts/file.txt`, then the automation destination `path/to/dest/%p1/some_file_name.txt` will result in the actual destination being `path/to/dest/accounts/some_file_name.txt`.\n\n**Dates and Times**\n\n* `%Y`  : The current year (4 digits)\n* `%m`  : The current month (2 digits)\n* `%B`  : The current month (full name)\n* `%d`  : The current day (2 digits)\n* `%H`  : The current hour (2 digits, 24-hour clock)\n* `%M`  : The current minute (2 digits)\n* `%S`  : The current second (2 digits)\n* `%z`  : UTC Time Zone (e.g. -0900)\n\nFor example, if the current date is June 23, 2023 and the source file is named `daily_sales.csv`, then the following automation destination `path/to/dest/%Y/%m/%d/` will result in the actual destination being `path/to/dest/2023/06/23/daily_sales.csv`.\n\n### Replacing Text\n\nTo replace text in the source filename, use the `destination_replace_from` and `destination_replace_to` parameters. This will perform a simple text replacement on the source filename before inserting it into the destination path.\n\nFor example, if the `destination_replace_from` is `incoming` and the `destination_replace_to` is `outgoing`, then `path/to/incoming.txt` will translate to `path/to/outgoing.txt`.\n\n\n## Automation Types\n\nThere are several types of automations:  Create Folder, Copy File, Move File, Delete File and, Run Remote Server Sync.\n\n\n### Create Folder\n\nCreates the folder with named by `destinations` in the path named by `path`.\nDestination may include formatting parameters to insert the date/time into the destination name.\n\nExample Use case:  Our business files sales tax for each division in 11 states every quarter.\nI want to create the folders where those sales tax forms and data will be collected.\n\nI could create a Create Folder automation as follows:\n\n* Trigger: `daily`\n* Interval: `quarter_end`\n* Path: `AccountingAndTax/SalesTax/State/*/`\n* Destinations: `%Y/Quarter-ending-%m-%d`\n\nNote this assumes you have folders in `AccountingAndTax/SalesTax/State/` already created for each state, e.g. `AccountingAndTax/SalesTax/State/CA/`.\n\n\n### Delete File\n\nDeletes the file with path matching `source` (wildcards allowed) in the path named by `path`.\n\n\n### Copy File\n\nCopies files in the folder named by `path` to the path specified in `destinations`.\nThe automation will only fire on files matching the `source` (wildcards allowed). In the case of an action-triggered automation, it will only operate on the actual file that triggered the automation.\nIf the parameter `limit` exists, the automation will only copy the newest `limit` files in each matching folder.\n\n\n### Move File\n\nMoves files in the folder named by `path` to the path specified in `destinations`.\nThe automation will only fire on files matching the `source` (wildcards allowed). In the case of an action-triggered automation, it will only operate on the actual file that triggered the automation.\nIf the parameter `limit` exists, the automation will only move the newest `limit` files in each matching folder.\nNote that for a move with multiple destinations, all but one destination is treated as a copy.\n\n\n### Run Remote Server Sync\n\nThe Run Remote Server Sync automation runs the remote server syncs specified by the `sync_ids`.\n\nTypically when this automation is used, the remote server syncs in question are set to the manual\nscheduling mode (`manual` to `true` via the API) to disable the built in sync scheduler.\n\n\n### Import File\n\nRetrieves files from one or more URLs and saves the results under the path specified in `destinations`.\n\nThe URLs to retrieve are specified as a JSON array in the `import_urls` property.\n\n```json\n[\n  {\n    \"name\": \"response.json\",\n    \"url\": \"https://example.com/api\",\n    \"method\": \"post\",\n    \"headers\": {\n      \"Content-Type\": \"application/json\"\n    },\n    \"content\": { \"trigger-file\": \"%tp\" }\n  }\n]\n```\n\nThe recognized keys are:\n\n* `name`: The file name which will be used to save the returned content. Required. `%` tokens will be replaced as described under Formatting Parameters.\n* `url`: The URL which will be requested. Required.\n* `method`: The HTTP method to be used for the request. May be either `get` or `post` (case insensitive). Defaults to `get`.\n* `headers`: Optional headers to be included in the request. `%` tokens in the values will be replaced as described under Formatting Parameters.\n* `content`: Optional body to send for POST request. If supplied as a string, `%` tokens will be expanded. If supplied as a JSON Object, `%` tokens will be expanded for top-level values. Other JSON types will be sent as-is.\n\n\n### Help us build the future of Automations\n\nDo you have an idea for something that would work well as a Files.com Automation?  Let us know!\nWe are actively improving the types of automations offered on our platform.\n\n\n## Retrying Failues\n\nAutomations will automatically retry individual action steps up to 3 times, with pauses between retries that increase from 15 seconds to 1 minute.  If individual action steps fail after our 3rd attempt, that action will fail.  If every action step in an Automation Run fails, that automation run will move to a `failure` status.  If at least one step succeeds and one step fails, that automation run will move to a `partial_failure` status.\n\nAutomation Runs can be retried automatically when they enter a `failure` or `partial_failure` status as described above.  A retry will re-run the automation from scratch, including the \"planning\" phase, which expands globs (wildcards) and identifies which files to transfer or skip.\n\nRetrying of entire Automation Runs must be explicitly enabled by setting the `retry_on_failure_interval_in_minutes` and `retry_on_failure_number_of_attempts` values on the Automation.\n\nWhen retrying entire Automation Runs, we currently do not skip action steps which were skipped or successfully completed in a previous version of the Automation Run.  We will soon be adding this functionality, which should enhance the usefulness of the retry apparatus for Automations in most situations.\n"
      },
      "AutomationLogEntity": {
        "description": "AutomationLogEntity model",
        "properties": {
          "automation_id": {
            "description": "Automation ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "automation_run_id": {
            "description": "Automation Run ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "dest_path": {
            "description": "Destination path, for moves and copies",
            "example": "example",
            "type": "string"
          },
          "error_type": {
            "description": "Error type, if applicable",
            "example": "example",
            "type": "string"
          },
          "message": {
            "description": "Message",
            "example": "example",
            "type": "string"
          },
          "operation": {
            "description": "Operation type",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "File path",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "example",
            "type": "string"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An AutomationLog is an audit log for monitoring and troubleshooting triggered Automation.\n"
      },
      "AutomationRunEntity": {
        "description": "AutomationRunEntity model",
        "properties": {
          "automation_id": {
            "description": "ID of the associated Automation.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "completed_at": {
            "description": "Automation run completion/failure date/time.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "Automation run start date/time.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "failed_operations": {
            "description": "Count of failed operations.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "ID.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "retried_at": {
            "description": "If set, this Automation run was retried due to `failure` or `partial_failure`.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "retried_in_run_id": {
            "description": "ID of the run that is or will be retrying this run.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "retry_at": {
            "description": "If set, this automation will be retried at this date/time due to `failure` or `partial_failure`.",
            "example": "example",
            "type": "string"
          },
          "retry_of_run_id": {
            "description": "ID of the original run that this run is retrying.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "runtime": {
            "description": "Automation run runtime.",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "status": {
            "description": "The success status of the AutomationRun. One of `running`, `success`, `partial_failure`, or `failure`.",
            "enum": [
              "running",
              "success",
              "partial_failure",
              "failure",
              "skipped",
              "queued"
            ],
            "example": "success",
            "type": "string"
          },
          "status_messages_url": {
            "description": "Link to status messages log file.",
            "example": "https://www.example.com/log_file.txt",
            "type": "string"
          },
          "successful_operations": {
            "description": "Count of successful operations.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "An AutomationRun is a record with information about a single execution of a given Automation.\n\nAutomation Runs can be retried upon `failure` or `partial_failure` by setting the `retry_on_failure_interval_in_minutes` and `retry_on_failure_number_of_attempts` settings on the associated Automation.\n\nWhen retries occur, a new AutomationRun will be created for each retry.  The property `retry_at` on the original run, if set, represents when that run will be retried next.  The properties `retried_at` and `retried_in_run_id` will be set in the original run that failed, at the time of retry.  The property `retry_of_run_id` will be set in the new run.\n"
      },
      "BandwidthSnapshotEntity": {
        "description": "BandwidthSnapshotEntity model",
        "properties": {
          "bytes_received": {
            "description": "Site bandwidth report bytes received",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "bytes_sent": {
            "description": "Site bandwidth report bytes sent",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "Site bandwidth ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "logged_at": {
            "description": "Time the site bandwidth report was logged",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "requests_get": {
            "description": "Site bandwidth report get requests",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "requests_other": {
            "description": "Site bandwidth report other requests",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "requests_put": {
            "description": "Site bandwidth report put requests",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "sync_bytes_received": {
            "description": "Site sync bandwidth report bytes received",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "sync_bytes_sent": {
            "description": "Site sync bandwidth report bytes sent",
            "example": 1,
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "x-docs": "A BandwidthSnapshot is information about site bandwidth usage for the given date.\n"
      },
      "BehaviorEntity": {
        "description": "BehaviorEntity model",
        "properties": {
          "attachment_url": {
            "description": "URL for attached file",
            "example": "example",
            "type": "string"
          },
          "behavior": {
            "description": "Behavior type.",
            "example": "webhook",
            "type": "string"
          },
          "description": {
            "description": "Description for this behavior.",
            "example": "example",
            "type": "string"
          },
          "disable_parent_folder_behavior": {
            "description": "If true, the parent folder's behavior will be disabled for this folder and its children.",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "Folder behavior ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name for this behavior.",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "Folder path.  Note that Behavior paths cannot be updated once initially set.  You will need to remove and re-create the behavior on the new path.",
            "example": "example",
            "type": "string"
          },
          "recursive": {
            "description": "Is behavior recursive?",
            "example": true,
            "type": "boolean"
          },
          "value": {
            "description": "Settings for this behavior.  See the section above for an example value to provide here.  Formatting is different for each Behavior type.  May be sent as nested JSON or a single JSON-encoded string.  If using XML encoding for the API call, this data must be sent as a JSON-encoded string.",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          }
        },
        "type": "object",
        "x-docs": "A Behavior is an API resource for what are also known as Folder Settings.  Every behavior is associated with a folder.\n\nDepending on the behavior, it may also operate on child folders.  It may be overridable at the child folder level or maybe can be added to at the child folder level.  The exact options for each behavior type are explained in the table below.\n\nAdditionally, some behaviors are visible to non-admins, and others are even settable by non-admins.  All the details are below.\n\nEach behavior uses a different format for storing its settings value.  Next to each behavior type is an example value.  Our API and SDKs currently require that the value for behaviors be sent as raw JSON within the `value` field.  Our SDK generator and API documentation generator doesn't fully keep up with this requirement, so if you need any help finding the exact syntax to use for your language or use case, just reach out.\n\nNote: Append Timestamp behavior removed. Check [Override Upload Filename](#override-upload-filename-behaviors) behavior which have even more functionality to modify name on upload.\n"
      },
      "BundleActionEntity": {
        "description": "BundleActionEntity model",
        "properties": {
          "action": {
            "description": "Type of action",
            "enum": [
              "create",
              "read",
              "update",
              "destroy",
              "move",
              "copy",
              "registration"
            ],
            "example": "create",
            "type": "string"
          },
          "bundle_registration": {
            "$ref": "#/components/schemas/BundleRegistrationEntity",
            "description": "Object that contains bundle registration information",
            "example": {
              "bundle_code": "example",
              "bundle_id": 1,
              "bundle_recipient_id": 1,
              "clickwrap_body": "example",
              "code": "abc123",
              "company": "Action Verb",
              "created_at": "2000-01-01T01:00:00Z",
              "email": "john.doe@files.com",
              "form_field_data": {
                "key": "example value"
              },
              "form_field_set_id": 1,
              "inbox_code": "abc123",
              "ip": "10.1.1.1",
              "name": "account"
            }
          },
          "created_at": {
            "description": "Action occurrence date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "destination": {
            "description": "The destination path for this bundle action, if applicable",
            "example": "/to_path",
            "type": "string"
          },
          "path": {
            "description": "Path",
            "example": "path",
            "type": "string"
          },
          "source": {
            "description": "The source path for this bundle action, if applicable",
            "example": "/from_path",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A BundleAction is an action performed on a bundle. Provides detailed information about the action's type, involved paths and other information.\n"
      },
      "BundleDownloadEntity": {
        "description": "BundleDownloadEntity model",
        "properties": {
          "bundle_registration": {
            "$ref": "#/components/schemas/BundleRegistrationEntity",
            "example": {
              "bundle_code": "example",
              "bundle_id": 1,
              "bundle_recipient_id": 1,
              "clickwrap_body": "example",
              "code": "abc123",
              "company": "Action Verb",
              "created_at": "2000-01-01T01:00:00Z",
              "email": "john.doe@files.com",
              "form_field_data": {
                "key": "example value"
              },
              "form_field_set_id": 1,
              "inbox_code": "abc123",
              "ip": "10.1.1.1",
              "name": "account"
            }
          },
          "created_at": {
            "description": "Download date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "download_method": {
            "description": "Download method (file or full_zip)",
            "enum": [
              "file",
              "full_zip"
            ],
            "example": "file",
            "type": "string"
          },
          "path": {
            "description": "Download path",
            "example": "a/b/test.txt",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A BundleDownload is a record of the download action that happened in the bundle.\n"
      },
      "BundleEntity": {
        "description": "BundleEntity model",
        "properties": {
          "paths": {
            "description": "A list of paths in this bundle.  For performance reasons, this is not provided when listing bundles.",
            "example": [
              "file.txt"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bundlepaths": {
            "description": "A list of bundlepaths in this bundle.  For performance reasons, this is not provided when listing bundles.",
            "example": [
              {
                "path": "example",
                "recursive": true
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BundlePathEntity"
            },
            "type": "array"
          },
          "clickwrap_body": {
            "description": "Legal text that must be agreed to prior to accessing Bundle.",
            "example": "[Legal text]",
            "type": "string"
          },
          "clickwrap_id": {
            "description": "ID of the clickwrap to use with this bundle.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "code": {
            "description": "Bundle code.  This code forms the end part of the Public URL.",
            "example": "abc123",
            "type": "string"
          },
          "color_left": {
            "description": "Page link and button color",
            "example": "#0066a7",
            "type": "string"
          },
          "color_link": {
            "description": "Top bar link color",
            "example": "#d34f5d",
            "type": "string"
          },
          "color_text": {
            "description": "Page link and button color",
            "example": "#0066a7",
            "type": "string"
          },
          "color_top": {
            "description": "Top bar background color",
            "example": "#000000",
            "type": "string"
          },
          "color_top_text": {
            "description": "Top bar text color",
            "example": "#ffffff",
            "type": "string"
          },
          "created_at": {
            "description": "Bundle created at date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Public description",
            "example": "The public description of the bundle.",
            "type": "string"
          },
          "dont_allow_folders_in_uploads": {
            "description": "Should folder uploads be prevented?",
            "example": true,
            "type": "boolean"
          },
          "dont_separate_submissions_by_folder": {
            "description": "Do not create subfolders for files uploaded to this share. Note: there are subtle security pitfalls with allowing anonymous uploads from multiple users to live in the same folder. We strongly discourage use of this option unless absolutely required.",
            "example": true,
            "type": "boolean"
          },
          "expires_at": {
            "description": "Bundle expiration date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "form_field_set": {
            "$ref": "#/components/schemas/FormFieldSetEntity",
            "description": "Custom Form to use",
            "example": {
              "form_fields": [
                {
                  "default_option": "red",
                  "field_type": "text",
                  "form_field_set_id": 1,
                  "help_text": "Help Text",
                  "id": 1,
                  "label": "Sample Label",
                  "options_for_select": [
                    "red",
                    "green",
                    "blue"
                  ]
                }
              ],
              "form_layout": [
                1,
                2,
                3,
                4
              ],
              "id": 1,
              "skip_company": true,
              "skip_email": true,
              "skip_name": true,
              "title": "Sample Form Title"
            }
          },
          "has_inbox": {
            "description": "Does this bundle have an associated inbox?",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "Bundle ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_id": {
            "description": "ID of the associated inbox, if available.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "max_uses": {
            "description": "Maximum number of times bundle can be accessed",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "note": {
            "description": "Bundle internal note",
            "example": "The internal note on the bundle.",
            "type": "string"
          },
          "password_protected": {
            "description": "Is this bundle password protected?",
            "example": false,
            "type": "boolean"
          },
          "path_template": {
            "description": "Template for creating submission subfolders. Can use the uploader's name, email address, ip, company, `strftime` directives, and any custom form data.",
            "example": "{{name}}_{{ip}}",
            "type": "string"
          },
          "path_template_time_zone": {
            "description": "Timezone to use when rendering timestamps in path templates.",
            "example": "Eastern Time (US & Canada)",
            "type": "string"
          },
          "permissions": {
            "description": "Permissions that apply to Folders in this Share Link.",
            "enum": [
              "read",
              "write",
              "read_write",
              "full",
              "none",
              "preview_only"
            ],
            "example": "read",
            "type": "string"
          },
          "preview_only": {
            "example": false,
            "type": "boolean"
          },
          "require_logout": {
            "description": "If true, we will hide the 'Remember Me' box on the Bundle registration page, requiring that the user logout and log back in every time they visit the page.",
            "example": true,
            "type": "boolean"
          },
          "require_registration": {
            "description": "Show a registration page that captures the downloader's name and email address?",
            "example": false,
            "type": "boolean"
          },
          "require_share_recipient": {
            "description": "Only allow access to recipients who have explicitly received the share via an email sent through the Files.com UI?",
            "example": false,
            "type": "boolean"
          },
          "send_email_receipt_to_uploader": {
            "description": "Send delivery receipt to the uploader. Note: For writable share only",
            "example": true,
            "type": "boolean"
          },
          "skip_company": {
            "description": "BundleRegistrations can be saved without providing company?",
            "example": true,
            "type": "boolean"
          },
          "skip_email": {
            "description": "BundleRegistrations can be saved without providing email?",
            "example": true,
            "type": "boolean"
          },
          "skip_name": {
            "description": "BundleRegistrations can be saved without providing name?",
            "example": true,
            "type": "boolean"
          },
          "snapshot_id": {
            "description": "ID of the snapshot containing this bundle's contents.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "start_access_on_date": {
            "description": "Date when share will start to be accessible. If `nil` access granted right after create.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "description": "Public URL of Share Link",
            "example": "https://subdomain.files.com/f/12345678",
            "type": "string"
          },
          "user_id": {
            "description": "Bundle creator user ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Bundle creator username",
            "example": "user",
            "type": "string"
          },
          "watermark_attachment": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Preview watermark image applied to all bundle items.",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "watermark_value": {
            "description": "Preview watermark settings applied to all bundle items. Uses the same keys as Behavior.value",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          }
        },
        "type": "object",
        "x-docs": "A Bundle is the API/SDK term for the feature called Share Links in the web interface.\nThe API provides the full set of actions related to Share Links, including sending them via E-Mail.\n\nPlease note that we very closely monitor the E-Mailing feature and any abuse will result in disabling of your site.\n"
      },
      "BundleNotificationEntity": {
        "description": "BundleNotificationEntity model",
        "properties": {
          "bundle_id": {
            "description": "Bundle ID to notify on",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "Bundle Notification ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "notify_on_registration": {
            "description": "Triggers bundle notification when a registration action occurs for it.",
            "example": true,
            "type": "boolean"
          },
          "notify_on_upload": {
            "description": "Triggers bundle notification when a upload action occurs for it.",
            "example": true,
            "type": "boolean"
          },
          "user_id": {
            "description": "The id of the user to notify.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A BundleNotification is an E-Mail sent out to users when certain actions are performed on or within a shared set of files and folders.\n"
      },
      "BundlePathEntity": {
        "properties": {
          "path": {
            "description": "The path to the resource relative to filesystem.",
            "example": "example",
            "type": "string"
          },
          "recursive": {
            "description": "Allow access to subfolders content?",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "A BundlePath is a single bundlepath in the associated Bundle.\n"
      },
      "BundleRecipientEntity": {
        "description": "BundleRecipientEntity model",
        "properties": {
          "company": {
            "description": "The recipient's company.",
            "example": "Acme Inc.",
            "type": "string"
          },
          "name": {
            "description": "The recipient's name.",
            "example": "John Doe",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient with the bundle.",
            "example": "Some note.",
            "type": "string"
          },
          "recipient": {
            "description": "The recipient's email address.",
            "example": "john.doe@example.com",
            "type": "string"
          },
          "sent_at": {
            "description": "When the Bundle was shared with this recipient.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A BundleRecipient is a person who has had a bundle shared with them via email invite. A Bundle can be re-shared\nwith a Bundle Recipient by sending a create request with the inbox_id, recipient email address,\nand share_after_create => true.\n"
      },
      "BundleRegistrationEntity": {
        "description": "BundleRegistrationEntity model",
        "properties": {
          "bundle_code": {
            "description": "Bundle URL code",
            "example": "example",
            "type": "string"
          },
          "bundle_id": {
            "description": "Id of associated bundle",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "bundle_recipient_id": {
            "description": "Id of associated bundle recipient",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "clickwrap_body": {
            "description": "Clickwrap text that was shown to the registrant",
            "example": "example",
            "type": "string"
          },
          "code": {
            "description": "Registration cookie code",
            "example": "abc123",
            "type": "string"
          },
          "company": {
            "description": "Registrant company name",
            "example": "Action Verb",
            "type": "string"
          },
          "created_at": {
            "description": "Registration creation date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Registrant email address",
            "example": "john.doe@files.com",
            "type": "string"
          },
          "form_field_data": {
            "description": "Data for form field set with form field ids as keys and user data as values",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "form_field_set_id": {
            "description": "Id of associated form field set",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_code": {
            "description": "InboxRegistration cookie code, if there is an associated InboxRegistration",
            "example": "abc123",
            "type": "string"
          },
          "ip": {
            "description": "Registrant IP Address",
            "example": "10.1.1.1",
            "type": "string"
          },
          "name": {
            "description": "Registrant name",
            "example": "account",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A BundleRegistration is a registration record when a user fills out the form to access the bundle.\n"
      },
      "ClickwrapEntity": {
        "description": "ClickwrapEntity model",
        "properties": {
          "body": {
            "description": "Body text of Clickwrap (supports Markdown formatting).",
            "example": "[Legal body text]",
            "type": "string"
          },
          "id": {
            "description": "Clickwrap ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name of the Clickwrap agreement (used when selecting from multiple Clickwrap agreements.)",
            "example": "Example Site NDA for Files.com Use",
            "type": "string"
          },
          "use_with_bundles": {
            "description": "Use this Clickwrap for Bundles?",
            "enum": [
              "none",
              "available",
              "require",
              "available_to_all_users"
            ],
            "example": "example",
            "type": "string"
          },
          "use_with_inboxes": {
            "description": "Use this Clickwrap for Inboxes?",
            "enum": [
              "none",
              "available",
              "require",
              "available_to_all_users"
            ],
            "example": "example",
            "type": "string"
          },
          "use_with_users": {
            "description": "Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.",
            "enum": [
              "none",
              "require"
            ],
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Clickwrap is a legal agreement (such as an NDA or Terms of Use) that your Users and/or Bundle/Inbox participants will need to agree to via a \"Clickwrap\" UI before accessing the site, bundle, or inbox.\n\nThe values for `use_with_users`, `use_with_bundles`, `use_with_inboxes` are explained as follows:\n\n* `none` - This Clickwrap may not be used in this context.\n* `available_to_all_users` - This Clickwrap may be assigned in this context by any user.\n* `available` - This Clickwrap may be assigned in this context, but only by Site Admins.  We recognize that the name of this setting is somewhat ambiguous, but we maintain it for legacy reasons.\n* `required` - This Clickwrap will always be used in this context, and may not be overridden.\n"
      },
      "DnsRecordEntity": {
        "description": "DnsRecordEntity model",
        "properties": {
          "domain": {
            "description": "DNS record domain name",
            "example": "my-custom-domain.com",
            "type": "string"
          },
          "id": {
            "description": "Unique label for DNS record; used by Zapier and other integrations.",
            "example": "example",
            "type": "string"
          },
          "rrtype": {
            "description": "DNS record type",
            "example": "CNAME",
            "type": "string"
          },
          "value": {
            "description": "DNS record value",
            "example": "mysite.files.com",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A DNSRecord is a custom DNS configuration record for a Site.\n\nThey represent the records you will need to configure in your DNS hosting provider to allow custom domains to work with Files.com.\n"
      },
      "EmailIncomingMessageEntity": {
        "description": "EmailIncomingMessageEntity model",
        "properties": {
          "body": {
            "description": "Body of the email",
            "example": "example",
            "type": "string"
          },
          "created_at": {
            "description": "Message creation date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Id of the Email Incoming Message",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_id": {
            "description": "Id of the Inbox associated with this message",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_title": {
            "description": "Title of the Inbox associated with this message",
            "example": "Inbox Title",
            "type": "string"
          },
          "message": {
            "description": "Message describing the failure",
            "example": "example",
            "type": "string"
          },
          "sender": {
            "description": "Sender of the email",
            "example": "example",
            "type": "string"
          },
          "sender_name": {
            "description": "Sender name",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status of the message",
            "enum": [
              "success",
              "partial_failure",
              "failure",
              "skipped"
            ],
            "example": "success",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An EmailIncomingMessage is an audit log designed to track status of email to inbox uploads.\n"
      },
      "EmailLogEntity": {
        "description": "EmailLogEntity model",
        "properties": {
          "cc": {
            "description": "CC field of E-Mail",
            "example": "example",
            "type": "string"
          },
          "delivery_method": {
            "description": "How was the email delivered?  `customer_smtp` or `files.com`",
            "example": "example",
            "type": "string"
          },
          "message": {
            "description": "Log Message",
            "example": "example",
            "type": "string"
          },
          "smtp_hostname": {
            "description": "Customer SMTP Hostname used.",
            "example": "example",
            "type": "string"
          },
          "smtp_ip": {
            "description": "Customer SMTP IP address as resolved for use (useful for troubleshooting DNS issues with customer SMTP).",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status of E-Mail delivery",
            "example": "example",
            "type": "string"
          },
          "subject": {
            "description": "Subject line of E-Mail",
            "example": "example",
            "type": "string"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "to": {
            "description": "To field of E-Mail",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An EmailLog is a record of the email notifications that were sent. This information is helpful for auditing your site's outbound emails.\n"
      },
      "ErrorsEntity": {
        "properties": {
          "fields": {
            "description": "A list of fields where errors occur",
            "example": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "messages": {
            "description": "A list of error messages",
            "example": [],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-docs": null
      },
      "ExavaultApiRequestLogEntity": {
        "description": "ExavaultApiRequestLogEntity model",
        "properties": {
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "endpoint": {
            "description": "Name of API Endpoint",
            "example": "example",
            "type": "string"
          },
          "error_message": {
            "description": "Error message, if applicable",
            "example": "example",
            "type": "string"
          },
          "error_type": {
            "description": "Error type, if applicable",
            "example": "example",
            "type": "string"
          },
          "request_ip": {
            "description": "IP of requesting client",
            "example": "example",
            "type": "string"
          },
          "request_method": {
            "description": "HTTP Method",
            "example": "example",
            "type": "string"
          },
          "response_code": {
            "description": "HTTP Response Code",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "success": {
            "description": "`false` if HTTP Response Code is 4xx or 5xx",
            "example": true,
            "type": "boolean"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "user_agent": {
            "description": "User-Agent",
            "example": "example",
            "type": "string"
          },
          "version": {
            "description": "Exavault API Version",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An ExavaultApiRequestLog is an audit log for monitoring and troubleshooting requests to the ExaVault API.\n"
      },
      "ExternalEventEntity": {
        "description": "ExternalEventEntity model",
        "properties": {
          "body": {
            "description": "Event body",
            "example": "example",
            "type": "string"
          },
          "body_url": {
            "description": "Link to log file.",
            "example": "example",
            "type": "string"
          },
          "bytes_synced": {
            "description": "For sync events, the total number of bytes synced.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "compared_files": {
            "description": "For sync events, the number of files considered for the sync.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "compared_folders": {
            "description": "For sync events, the number of folders listed and considered for the sync.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_at": {
            "description": "External event create date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "errored_files": {
            "description": "For sync events, the number of files that encountered errors.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "event_type": {
            "description": "Type of event being recorded.",
            "enum": [
              "ldap_sync",
              "remote_server_sync",
              "lockout",
              "ldap_login",
              "saml_login",
              "client_log",
              "pending_work",
              "siem_http_destination"
            ],
            "example": "example",
            "type": "string"
          },
          "folder_behavior_id": {
            "description": "Folder Behavior ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "Event ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "remote_server_type": {
            "description": "Associated Remote Server type, if any",
            "enum": [
              "ftp",
              "sftp",
              "s3",
              "google_cloud_storage",
              "webdav",
              "wasabi",
              "backblaze_b2",
              "one_drive",
              "rackspace",
              "box",
              "dropbox",
              "google_drive",
              "azure",
              "sharepoint",
              "s3_compatible",
              "azure_files",
              "files_agent",
              "filebase",
              "cloudflare",
              "linode"
            ],
            "example": "example",
            "type": "string"
          },
          "siem_http_destination_id": {
            "description": "SIEM HTTP Destination ID.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Status of event.",
            "enum": [
              "success",
              "failure",
              "partial_failure",
              "in_progress",
              "skipped"
            ],
            "example": "example",
            "type": "string"
          },
          "successful_files": {
            "description": "For sync events, the number of files handled successfully.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "An ExternalEvent is a log record with activity such as logins, credential syncs, and lockouts.\n"
      },
      "FileActionEntity": {
        "description": "FileActionEntity model",
        "properties": {
          "file_migration_id": {
            "description": "If status is pending, this is the id of the File Migration to check for status updates.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "Status of file operation.",
            "example": "pending",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A FileAction is an operation status for copy/move file. Copy and Move operations have File Migration associated with them.\n"
      },
      "FileCommentEntity": {
        "description": "FileCommentEntity model",
        "properties": {
          "body": {
            "description": "Comment body.",
            "example": "What a great file!",
            "type": "string"
          },
          "id": {
            "description": "File Comment ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "reactions": {
            "description": "Reactions to this comment.",
            "example": [
              {
                "emoji": "\ud83d\udc4d",
                "id": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/FileCommentReactionEntity"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-docs": "A FileComment is a comment attached to a file by a user.\n"
      },
      "FileCommentReactionEntity": {
        "description": "FileCommentReactionEntity model",
        "properties": {
          "emoji": {
            "description": "Emoji used in the reaction.",
            "example": "\ud83d\udc4d",
            "type": "string"
          },
          "id": {
            "description": "Reaction ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A FileCommentReaction is a reaction that is attached to a comment on a file.\n"
      },
      "FileEntity": {
        "description": "FileEntity model",
        "properties": {
          "crc32": {
            "description": "File CRC32 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.",
            "example": "70976923",
            "type": "string"
          },
          "created_at": {
            "description": "File created date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "created_by_api_key_id": {
            "description": "ID of the API key that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_as2_incoming_message_id": {
            "description": "ID of the AS2 Incoming Message that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_automation_id": {
            "description": "ID of the Automation that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_bundle_registration_id": {
            "description": "ID of the Bundle Registration that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_id": {
            "description": "User ID of the User who created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_inbox_id": {
            "description": "ID of the Inbox that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_remote_server_id": {
            "description": "ID of the Remote Server that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_by_remote_server_sync_id": {
            "description": "ID of the Remote Server Sync that created the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "custom_metadata": {
            "description": "Custom metadata map of keys and values. Limited to 32 keys, 256 characters per key and 1024 characters per value.",
            "example": {
              "key": "value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "display_name": {
            "description": "File/Folder display name",
            "example": "file.txt",
            "type": "string"
          },
          "download_uri": {
            "description": "Link to download file. Provided only in response to a download request.",
            "example": "https://mysite.files.com/...",
            "type": "string"
          },
          "is_locked": {
            "description": "Is this folder locked and unable to be modified?",
            "example": true,
            "type": "boolean"
          },
          "last_modified_by_api_key_id": {
            "description": "ID of the API key that last modified the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_modified_by_automation_id": {
            "description": "ID of the Automation that last modified the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_modified_by_bundle_registration_id": {
            "description": "ID of the Bundle Registration that last modified the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_modified_by_id": {
            "description": "User ID of the User who last modified the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_modified_by_remote_server_id": {
            "description": "ID of the Remote Server that last modified the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_modified_by_remote_server_sync_id": {
            "description": "ID of the Remote Server Sync that last modified the file/folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "md5": {
            "description": "File MD5 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.",
            "example": "17c54824e9931a4688ca032d03f6663c",
            "type": "string"
          },
          "mime_type": {
            "description": "MIME Type.  This is determined by the filename extension and is not stored separately internally.",
            "example": "application/octet-stream",
            "type": "string"
          },
          "mtime": {
            "description": "File last modified date/time, according to the server.  This is the timestamp of the last Files.com operation of the file, regardless of what modified timestamp was sent.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "path": {
            "description": "File/Folder path",
            "example": "path/file.txt",
            "type": "string"
          },
          "permissions": {
            "description": "A short string representing the current user's permissions.  Can be `r` (Read),`w` (Write),`d` (Delete), `l` (List) or any combination",
            "example": "rwd",
            "type": "string"
          },
          "preview": {
            "$ref": "#/components/schemas/PreviewEntity",
            "description": "File preview",
            "example": {
              "download_uri": "https://mysite.files.com/...",
              "id": 1,
              "size": "large",
              "status": "complete",
              "type": "image"
            }
          },
          "preview_id": {
            "description": "File preview ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "priority_color": {
            "description": "Bookmark/priority color of file/folder",
            "example": "red",
            "type": "string"
          },
          "provided_mtime": {
            "description": "File last modified date/time, according to the client who set it.  Files.com allows desktop, FTP, SFTP, and WebDAV clients to set modified at times.  This allows Desktop<->Cloud syncing to preserve modified at times.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "region": {
            "description": "Region location",
            "example": "us-east-1",
            "type": "string"
          },
          "sha1": {
            "description": "File SHA1 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.",
            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
            "type": "string"
          },
          "sha256": {
            "description": "File SHA256 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.",
            "example": "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08",
            "type": "string"
          },
          "size": {
            "description": "File/Folder size",
            "example": 1024,
            "format": "int32",
            "type": "integer"
          },
          "subfolders_locked?": {
            "description": "Are subfolders locked and unable to be modified?",
            "example": true,
            "type": "boolean"
          },
          "type": {
            "description": "Type: `directory` or `file`.",
            "example": "file",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": null
      },
      "FileMigrationEntity": {
        "description": "FileMigrationEntity model",
        "properties": {
          "dest_path": {
            "description": "Destination path",
            "example": "MyFolder",
            "type": "string"
          },
          "files_moved": {
            "description": "Number of files processed",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "files_total": {
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "File migration ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "log_url": {
            "description": "Link to download the log file for this migration.",
            "example": "https://www.example.com/log_file",
            "type": "string"
          },
          "operation": {
            "description": "The type of operation",
            "enum": [
              "delete",
              "move",
              "copy",
              "regional_migration",
              "organize"
            ],
            "example": "move",
            "type": "string"
          },
          "path": {
            "description": "Source path",
            "example": "MyFolder",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "example": "USA",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "example": "complete",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A FileMigration is a background operation on one or more files, such as a copy or a region migration.\n\nIf no `operation` or `dest_path` is present, then the record represents a region migration.\n"
      },
      "FileMigrationLogEntity": {
        "description": "FileMigrationLogEntity model",
        "properties": {
          "dest_path": {
            "description": "Destination path, for moves and copies",
            "example": "example",
            "type": "string"
          },
          "error_type": {
            "description": "Error type, if applicable",
            "example": "example",
            "type": "string"
          },
          "file_migration_id": {
            "description": "File Migration ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "Message",
            "example": "example",
            "type": "string"
          },
          "operation": {
            "description": "Operation type",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "File path",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "example",
            "type": "string"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A FileMigrationLog is an audit log for monitoring and troubleshooting File Migrations in your site.\n"
      },
      "FileUploadPartEntity": {
        "description": "FileUploadPartEntity model",
        "properties": {
          "parameters": {
            "description": "Additional HTTP parameters to send with the upload",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "action": {
            "description": "Type of upload",
            "example": "multipart",
            "type": "string"
          },
          "ask_about_overwrites": {
            "description": "If `true`, this file exists and you may wish to ask the user for overwrite confirmation",
            "example": true,
            "type": "boolean"
          },
          "available_parts": {
            "description": "Number of parts in the upload",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "expires": {
            "description": "Date/time of when this Upload part expires and the URL cannot be used any more",
            "example": "example",
            "type": "string"
          },
          "headers": {
            "description": "Additional upload headers to provide as part of the upload",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "http_method": {
            "description": "HTTP Method to use for uploading the part, usually `PUT`",
            "example": "PUT",
            "type": "string"
          },
          "next_partsize": {
            "description": "Size in bytes for this part",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "parallel_parts": {
            "description": "If `true`, multiple parts may be uploaded in parallel.  If `false`, be sure to only upload one part at a time, in order.",
            "example": true,
            "type": "boolean"
          },
          "part_number": {
            "description": "Number of this upload part",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "partsize": {
            "description": "Size in bytes for the next upload part",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "description": "New file path",
            "example": "path",
            "type": "string"
          },
          "ref": {
            "description": "Reference name for this upload part",
            "example": "upload-1",
            "type": "string"
          },
          "retry_parts": {
            "description": "If `true`, parts may be retried. If `false`, a part cannot be retried and the upload should be restarted.",
            "example": true,
            "type": "boolean"
          },
          "send": {
            "description": "Content-Type and File to send",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "upload_uri": {
            "description": "URI to upload this part to",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A FileUploadPart is a result of a begin upload operation which is the first step in our upload process.\n"
      },
      "FormFieldEntity": {
        "properties": {
          "default_option": {
            "description": "Default option for radio and dropdown",
            "example": "red",
            "type": "string"
          },
          "field_type": {
            "description": "Type of Field",
            "enum": [
              "text",
              "text_area",
              "dropdown",
              "radio"
            ],
            "example": "text",
            "type": "string"
          },
          "form_field_set_id": {
            "description": "Form field set id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "help_text": {
            "description": "Help text to be displayed",
            "example": "Help Text",
            "type": "string"
          },
          "id": {
            "description": "Form field id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "label": {
            "description": "Label to be displayed",
            "example": "Sample Label",
            "type": "string"
          },
          "options_for_select": {
            "description": "Options to display for radio and dropdown",
            "example": [
              "red",
              "green",
              "blue"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "required": {
            "description": "Is this a required field?",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "A FormField is a single form field used in Form Field Set.\n\nAllowed Form Field types are `text`, `text_area`, `dropdown`, `radio`\n"
      },
      "FormFieldSetEntity": {
        "description": "FormFieldSetEntity model",
        "properties": {
          "form_fields": {
            "description": "Associated form fields",
            "example": [
              {
                "default_option": "red",
                "field_type": "text",
                "form_field_set_id": 1,
                "help_text": "Help Text",
                "id": 1,
                "label": "Sample Label",
                "options_for_select": [
                  "red",
                  "green",
                  "blue"
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/FormFieldEntity"
            },
            "type": "array"
          },
          "form_layout": {
            "description": "Layout of the form",
            "example": [
              1,
              2,
              3,
              4
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "id": {
            "description": "Form field set id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "skip_company": {
            "description": "Any associated InboxRegistrations or BundleRegistrations can be saved without providing company",
            "example": true,
            "type": "boolean"
          },
          "skip_email": {
            "description": "Any associated InboxRegistrations or BundleRegistrations can be saved without providing email",
            "example": true,
            "type": "boolean"
          },
          "skip_name": {
            "description": "Any associated InboxRegistrations or BundleRegistrations can be saved without providing name",
            "example": true,
            "type": "boolean"
          },
          "title": {
            "description": "Title to be displayed",
            "example": "Sample Form Title",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Form Field Set is a custom form to be used for bundle and inbox registrations.\n\nEach Form Field Set contains one or more Form Fields. A form and all of its form fields are submitted in a single create request. The order of form fields in the array is the order they will be displayed.\n\nOnce created, a form field set can then be associated with one or more bundle(s) and/or inbox(s). Once associated, you will be required to submit well-formatted form-data when creating a bundle-registration or inbox registration.\n"
      },
      "FtpActionLogEntity": {
        "description": "FtpActionLogEntity model",
        "properties": {
          "action_type": {
            "description": "Action Type",
            "example": "example",
            "type": "string"
          },
          "auth_ciphers": {
            "description": "Authentication Ciphers",
            "example": "example",
            "type": "string"
          },
          "cmd": {
            "description": "FTP Command Name",
            "example": "example",
            "type": "string"
          },
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "entries_returned": {
            "description": "Number of entries returned when listing files and folders",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name of File",
            "example": "example",
            "type": "string"
          },
          "param": {
            "description": "FTP Command Param",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "Path as sent by the Client (may not match Files.com path due to user root folders for FTP)",
            "example": "example",
            "type": "string"
          },
          "remote_ip": {
            "description": "IP Address of FTP Client",
            "example": "example",
            "type": "string"
          },
          "responseCode": {
            "description": "FTP Response Code",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "responseMessage": {
            "description": "FTP Response Message",
            "example": "example",
            "type": "string"
          },
          "seq_id": {
            "description": "FTP Sequence ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "server_ip": {
            "description": "IP Address of FTP Server",
            "example": "example",
            "type": "string"
          },
          "session_uuid": {
            "description": "Unique ID of the Session",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "FTP Action status.",
            "example": "example",
            "type": "string"
          },
          "success": {
            "description": "Whether FTP Action was successful.",
            "example": true,
            "type": "boolean"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "true_path": {
            "description": "Path on Files.com",
            "example": "example",
            "type": "string"
          },
          "username": {
            "description": "Username",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An FtpActionLog is an audit log for monitoring and troubleshooting operations made to your site through FTP protocol.\n"
      },
      "GpgKeyEntity": {
        "description": "GpgKeyEntity model",
        "properties": {
          "expires_at": {
            "description": "Your GPG key expiration date.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Your GPG key ID.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Your GPG key name.",
            "example": "key name",
            "type": "string"
          },
          "private_key": {
            "description": "Your GPG private key.",
            "example": "ab236cfe4a195f0226bc2e674afdd6b0",
            "type": "string"
          },
          "private_key_password": {
            "description": "Your GPG private key password. Only required for password protected keys.",
            "example": "[your GPG private key password]",
            "type": "string"
          },
          "public_key": {
            "description": "Your GPG public key",
            "example": "7f8bc1210b09b9ddf469e6b6b8920e76",
            "type": "string"
          },
          "user_id": {
            "description": "GPG owner's user id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A GPGKey object on Files.com is used to securely store both the private and public keys associated with a GPG (GNU Privacy Guard) encryption key pair. This object enables the encryption and decryption of data using GPG, allowing you to protect sensitive information.\n\nThe private key is kept confidential and is used for decrypting data or signing messages to prove authenticity, while the public key is used to encrypt messages that only the owner of the private key can decrypt.\n\nBy storing both keys together in a GPGKey object, Files.com makes it easier to understand encryption operations, ensuring secure and efficient handling of encrypted data within the platform.\n"
      },
      "GroupEntity": {
        "description": "GroupEntity model",
        "properties": {
          "admin_ids": {
            "description": "Comma-delimited list of user IDs who are group administrators (separated by commas)",
            "example": "1",
            "type": "string"
          },
          "allowed_ips": {
            "description": "A list of allowed IPs if applicable.  Newline delimited",
            "example": "10.0.0.0/8\n127.0.0.1",
            "type": "string"
          },
          "dav_permission": {
            "description": "If true, users in this group can use WebDAV to login.  This will override a false value of `dav_permission` on the user level.",
            "example": true,
            "type": "boolean"
          },
          "ftp_permission": {
            "description": "If true, users in this group can use FTP to login.  This will override a false value of `ftp_permission` on the user level.",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "Group ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Group name",
            "example": "owners",
            "type": "string"
          },
          "notes": {
            "description": "Notes about this group",
            "example": "example",
            "type": "string"
          },
          "restapi_permission": {
            "description": "If true, users in this group can use the REST API to login.  This will override a false value of `restapi_permission` on the user level.",
            "example": true,
            "type": "boolean"
          },
          "sftp_permission": {
            "description": "If true, users in this group can use SFTP to login.  This will override a false value of `sftp_permission` on the user level.",
            "example": true,
            "type": "boolean"
          },
          "site_id": {
            "description": "Site ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_ids": {
            "description": "Comma-delimited list of user IDs who belong to this group (separated by commas)",
            "example": "1",
            "type": "string"
          },
          "usernames": {
            "description": "Comma-delimited list of usernames who belong to this group (separated by commas)",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Group is a powerful tool for permissions and user management on Files.com.  Users can belong to multiple groups.\n\nAll permissions can be managed via Groups, and Groups can also be synced to your identity platform via LDAP or SCIM.\n\nFiles.com's Group Admin feature allows you to define Group Admins, who then have access to add and remove users within their groups.\n"
      },
      "GroupUserEntity": {
        "description": "GroupUserEntity model",
        "properties": {
          "admin": {
            "description": "Is this user an administrator of this group?",
            "example": true,
            "type": "boolean"
          },
          "group_id": {
            "description": "Group ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "group_name": {
            "description": "Group name",
            "example": "example",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "usernames": {
            "description": "Comma-delimited list of usernames who belong to this group (separated by commas).",
            "example": "user",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A GroupUser is a record about membership of a User within a Group.\n\n## Creating GroupUsers\nGroupUsers can be created via the normal `create` action. When using the `update` action, if the\nGroupUser record does not exist for the given user/group IDs it will be created.\n"
      },
      "HistoryExportEntity": {
        "description": "HistoryExportEntity model",
        "properties": {
          "end_at": {
            "description": "End date/time of export range.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "history_version": {
            "description": "Version of the history for the export.",
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "History Export ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "query_action": {
            "description": "Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`",
            "example": "read",
            "type": "string"
          },
          "query_destination": {
            "description": "Return results that are file moves with paths matching this pattern as destination.",
            "example": "DestFolder",
            "type": "string"
          },
          "query_failure_type": {
            "description": "If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`, `insecure_ftp`, `insecure_cipher`, `rate_limited`",
            "example": "bad_password",
            "type": "string"
          },
          "query_file_id": {
            "description": "Return results that are file actions related to the file indicated by this File ID",
            "example": "1",
            "type": "string"
          },
          "query_folder": {
            "description": "Return results that are file actions related to files or folders inside folder paths matching this pattern.",
            "example": "Folder",
            "type": "string"
          },
          "query_interface": {
            "description": "Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`",
            "example": "ftp",
            "type": "string"
          },
          "query_ip": {
            "description": "Filter results by this IP address.",
            "example": "127.0.0.1",
            "type": "string"
          },
          "query_parent_id": {
            "description": "Return results that are file actions inside the parent folder specified by this folder ID",
            "example": "1",
            "type": "string"
          },
          "query_path": {
            "description": "Return results that are file actions related to paths matching this pattern.",
            "example": "MyFile.txt",
            "type": "string"
          },
          "query_src": {
            "description": "Return results that are file moves originating from paths matching this pattern.",
            "example": "SrcFolder",
            "type": "string"
          },
          "query_target_id": {
            "description": "If searching for Histories about specific objects (such as Users, or API Keys), this parameter restricts results to objects that match this ID.",
            "example": "1",
            "type": "string"
          },
          "query_target_name": {
            "description": "If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.",
            "example": "full",
            "type": "string"
          },
          "query_target_permission": {
            "description": "If searching for Histories about Permissions, this parameter restricts results to permissions of this level.",
            "example": "full",
            "type": "string"
          },
          "query_target_permission_set": {
            "description": "If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.",
            "example": "desktop_app",
            "type": "string"
          },
          "query_target_platform": {
            "description": "If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.",
            "example": "windows",
            "type": "string"
          },
          "query_target_user_id": {
            "description": "If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.",
            "example": "1",
            "type": "string"
          },
          "query_target_username": {
            "description": "If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.",
            "example": "jerry",
            "type": "string"
          },
          "query_user_id": {
            "description": "Return results that are actions performed by the user indicated by this User ID",
            "example": "1",
            "type": "string"
          },
          "query_username": {
            "description": "Filter results by this username.",
            "example": "jerry",
            "type": "string"
          },
          "results_url": {
            "description": "If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.",
            "example": "https://files.com/history_results.csv",
            "type": "string"
          },
          "start_at": {
            "description": "Start date/time of export range.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of export.  Will be: `building`, `ready`, or `failed`",
            "example": "ready",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A History Export is a resource on the API that is used to export historical action (history) logs.\n\nAll queries against the archive must be submitted as Exports.  (Even our Web UI creates an Export behind\nthe scenes.)\n\nWe use Amazon Athena behind the scenes for processing these queries, and as such, have powerful\nsearch capabilities.  We've done our best to expose search capabilities via this History Export API.\n\nIn any query field in this API, you may specify multiple values separated by commas.  That means that commas\ncannot be searched for themselves, and neither can single quotation marks.\n\nWe do not currently partition data by date on the backend, so all queries result in a full scan of the entire\ndata lake.  This means that all queries will take about the same amount of time to complete, and we incur about\nthe same cost per query internally.  We don't typically bill our customers for these queries, assuming\nusage is occasional and manual.\n\nIf you intend to use this API for high volume or automated use, please contact us with more information\nabout your use case.  We may decide to change the backend data schema to match your use case more closely, and\nwe may also need to charge an additional cost per query.\n\n## Example History Queries\n\n* History for a user: `{ \"query_user_id\": 123 }`\n* History for a range of time: `{ \"start_at\": \"2021-03-18 12:00:00\", \"end_at\": \"2021-03-19 12:00:00\" }`\n* History of logins and failed logins: `{ \"query_action\": \"login,failedlogin\" }`\n* A Complex query: `{ \"query_folder\": \"uploads\", \"query_action\": \"create,copy,move\", \"start_at\": \"2021-03-18 12:00:00\", \"end_at\": \"2021-03-19 12:00:00\" }`\n"
      },
      "HistoryExportResultEntity": {
        "description": "HistoryExportResultEntity model",
        "properties": {
          "action": {
            "description": "What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`",
            "example": "read",
            "type": "string"
          },
          "created_at": {
            "description": "When the action happened",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "created_at_iso8601": {
            "description": "When the action happened, in ISO8601 format.",
            "example": "example",
            "type": "string"
          },
          "destination": {
            "description": "File moved to this destination folder",
            "example": "DestFolder",
            "type": "string"
          },
          "failure_type": {
            "description": "The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`, `insecure_ftp`, `insecure_cipher`, `rate_limited`",
            "example": "bad_password",
            "type": "string"
          },
          "file_id": {
            "description": "File ID related to the action",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "folder": {
            "description": "Folder in which the action occurred",
            "example": "Folder",
            "type": "string"
          },
          "id": {
            "description": "Action ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "interface": {
            "description": "Interface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`",
            "example": "ftp",
            "type": "string"
          },
          "ip": {
            "description": "Client IP that performed the action",
            "example": "127.0.0.1",
            "type": "string"
          },
          "parent_id": {
            "description": "ID of the parent folder",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "description": "Path of the related action",
            "example": "MyFile.txt",
            "type": "string"
          },
          "src": {
            "description": "File move originated from this path",
            "example": "SrcFolder",
            "type": "string"
          },
          "target_expires_at": {
            "description": "If searching for Histories about API keys, this is when the API key will expire. Represented as a Unix timestamp.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "target_expires_at_iso8601": {
            "description": "If searching for Histories about API keys, this is when the API key will expire. Represented in ISO8601 format.",
            "example": "example",
            "type": "string"
          },
          "target_id": {
            "description": "ID of the object (such as Users, or API Keys) on which the action was taken",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "target_name": {
            "description": "Name of the User, Group or other object with a name related to this action",
            "example": "full",
            "type": "string"
          },
          "target_permission": {
            "description": "Permission level of the action",
            "example": "full",
            "type": "string"
          },
          "target_permission_set": {
            "description": "If searching for Histories about API keys, this represents the permission set of the associated  API key",
            "example": "desktop_app",
            "type": "string"
          },
          "target_platform": {
            "description": "If searching for Histories about API keys, this is the platform on which the action was taken",
            "example": "windows",
            "type": "string"
          },
          "target_recursive": {
            "description": "Whether or not the action was recursive",
            "example": true,
            "type": "boolean"
          },
          "target_user_id": {
            "description": "If searching for Histories about API keys, this is the User ID on which the action was taken",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "target_username": {
            "description": "If searching for Histories about API keys, this is the username on which the action was taken",
            "example": "jerry",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_is_from_parent_site": {
            "description": "true if this change was performed by a user on a parent site.",
            "example": false,
            "type": "boolean"
          },
          "username": {
            "description": "Username of the user that performed the action",
            "example": "jerry",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A HistoryExportResult is a single record with historical information about actions that happened in your site. Results can be obtained as a part of History Export request.\n"
      },
      "ImageEntity": {
        "properties": {
          "name": {
            "description": "Image name",
            "example": "My logo",
            "type": "string"
          },
          "uri": {
            "description": "Image URI",
            "example": "https://mysite.files.com/.../my_image.png",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": null
      },
      "InboxRecipientEntity": {
        "description": "InboxRecipientEntity model",
        "properties": {
          "company": {
            "description": "The recipient's company.",
            "example": "Acme Inc.",
            "type": "string"
          },
          "name": {
            "description": "The recipient's name.",
            "example": "John Doe",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient with the inbox.",
            "example": "Some note.",
            "type": "string"
          },
          "recipient": {
            "description": "The recipient's email address.",
            "example": "john.doe@example.com",
            "type": "string"
          },
          "sent_at": {
            "description": "When the Inbox was shared with this recipient.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An InboxRecipient is a person who has had an inbox shared with them via email invitation.\n"
      },
      "InboxRegistrationEntity": {
        "description": "InboxRegistrationEntity model",
        "properties": {
          "clickwrap_body": {
            "description": "Clickwrap text that was shown to the registrant",
            "example": "example",
            "type": "string"
          },
          "code": {
            "description": "Registration cookie code",
            "example": "abc123",
            "type": "string"
          },
          "company": {
            "description": "Registrant company name",
            "example": "Action Verb",
            "type": "string"
          },
          "created_at": {
            "description": "Registration creation date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Registrant email address",
            "example": "john.doe@files.com",
            "type": "string"
          },
          "form_field_data": {
            "description": "Data for form field set with form field ids as keys and user data as values",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "form_field_set_id": {
            "description": "Id of associated form field set",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_id": {
            "description": "Id of associated inbox",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_recipient_id": {
            "description": "Id of associated inbox recipient",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "inbox_title": {
            "description": "Title of associated inbox",
            "example": "example",
            "type": "string"
          },
          "ip": {
            "description": "Registrant IP Address",
            "example": "10.1.1.1",
            "type": "string"
          },
          "name": {
            "description": "Registrant name",
            "example": "account",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An InboxRegistration is created when a user fills out the form to access the inbox.\n"
      },
      "InboxUploadEntity": {
        "description": "InboxUploadEntity model",
        "properties": {
          "created_at": {
            "description": "Upload date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "inbox_registration": {
            "$ref": "#/components/schemas/InboxRegistrationEntity",
            "example": "example"
          },
          "path": {
            "description": "Upload path",
            "example": "a/b/test.txt",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An InboxUpload is a log record about upload operations that happened in your Inbox.\n"
      },
      "InvoiceLineItemEntity": {
        "properties": {
          "amount": {
            "description": "Invoice line item amount",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "created_at": {
            "description": "Invoice line item created at date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Invoice line item description",
            "example": "Service from 2019-01-01 through 2019-12-31",
            "type": "string"
          },
          "plan": {
            "description": "Plan name",
            "example": "Premier",
            "type": "string"
          },
          "service_end_at": {
            "description": "Invoice line item service end date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "service_start_at": {
            "description": "Invoice line item service start date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "site": {
            "description": "Site name",
            "example": "My site",
            "type": "string"
          },
          "type": {
            "description": "Invoice line item type",
            "enum": [
              "invoice",
              "invoice_adjustment",
              "usage_overage",
              "user_overage",
              "addon_subscription",
              "misc_fee",
              "usage_overage_adjustment",
              "user_overage_adjustment",
              "addon_subscription_adjustment",
              "misc_fee_adjustment",
              "credit_expiration",
              "user_overage_prepay",
              "user_overage_prepay_adjustment",
              "credit_expiration_adjustment"
            ],
            "example": "invoice",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An InvoiceLineItem is your invoice record. Used as a part of Account Line Item object.\n"
      },
      "IpAddressEntity": {
        "description": "IpAddressEntity model",
        "properties": {
          "associated_with": {
            "description": "The object that this public IP address list is associated with.",
            "example": "Site",
            "type": "string"
          },
          "group_id": {
            "description": "Group ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "Unique label for list; used by Zapier and other integrations.",
            "example": "Site",
            "type": "string"
          },
          "ip_addresses": {
            "description": "A list of IP addresses.",
            "example": [
              "127.0.0.1"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-docs": "An IPAddress is a record of IP addresses that you can use to automate keeping your firewall's configuration up to date.\n\nCustomers who maintain custom firewall configurations may require knowing the public IP addresses of Files.com's edge servers.\n"
      },
      "LockEntity": {
        "description": "LockEntity model",
        "properties": {
          "allow_access_by_any_user": {
            "description": "Can lock be modified by users other than its creator?",
            "example": false,
            "type": "boolean"
          },
          "depth": {
            "example": "infinity",
            "type": "string"
          },
          "exclusive": {
            "description": "Is lock exclusive?",
            "example": false,
            "type": "boolean"
          },
          "owner": {
            "description": "Owner of the lock.  This can be any arbitrary string.",
            "example": "user",
            "type": "string"
          },
          "path": {
            "description": "Path",
            "example": "locked_file",
            "type": "string"
          },
          "recursive": {
            "description": "Does lock apply to subfolders?",
            "example": true,
            "type": "boolean"
          },
          "scope": {
            "example": "shared",
            "type": "string"
          },
          "timeout": {
            "description": "Lock timeout in seconds",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "token": {
            "description": "Lock token.  Use to release lock.",
            "example": "17c54824e9931a4688ca032d03f6663c",
            "type": "string"
          },
          "type": {
            "example": "write",
            "type": "string"
          },
          "user_id": {
            "description": "Lock creator user ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Lock creator username",
            "example": "username",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Lock can be used by your custom-developed applications to implement file locking and concurrency features. These locks are advisory, meaning that while a lock can be created, it does not prevent other API requests from being processed concurrently.  You are responsible for checking locks prior to accessing a file.\n\nThe lock feature is designed to emulate the locking functionality provided by WebDAV. For a deeper understanding of how the lock mechanism works, refer to the WebDAV specification, which outlines how these endpoints function.\n\nFiles.com's WebDAV offering and desktop app leverage this locking API to manage concurrent file operations, ensuring consistency when multiple users or systems interact with the same files.  It is not used within the Files.com web interface.\n"
      },
      "MessageCommentEntity": {
        "description": "MessageCommentEntity model",
        "properties": {
          "body": {
            "description": "Comment body.",
            "example": "What a great idea, thank you!",
            "type": "string"
          },
          "id": {
            "description": "Message Comment ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "reactions": {
            "description": "Reactions to this comment.",
            "example": [
              {
                "emoji": "\ud83d\udc4d",
                "id": 1
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MessageCommentReactionEntity"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-docs": "A MessageComment is a comment made by a user on a message.\n"
      },
      "MessageCommentReactionEntity": {
        "description": "MessageCommentReactionEntity model",
        "properties": {
          "emoji": {
            "description": "Emoji used in the reaction.",
            "example": "\ud83d\udc4d",
            "type": "string"
          },
          "id": {
            "description": "Reaction ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A MessageCommentReaction is a reaction emoji made by a user on a message comment.\n"
      },
      "MessageEntity": {
        "description": "MessageEntity model",
        "properties": {
          "body": {
            "description": "Message body.",
            "example": "We should upgrade our Files.com account!",
            "type": "string"
          },
          "comments": {
            "description": "Comments.",
            "example": [
              {
                "body": "What a great idea, thank you!",
                "id": 1,
                "reactions": [
                  {
                    "emoji": "\ud83d\udc4d",
                    "id": 1
                  }
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/MessageCommentEntity"
            },
            "type": "array"
          },
          "id": {
            "description": "Message ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "subject": {
            "description": "Message subject.",
            "example": "Files.com Account Upgrade",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Message is a part of Files.com's project management features and represents a message posted by a user to a project.\n"
      },
      "MessageReactionEntity": {
        "description": "MessageReactionEntity model",
        "properties": {
          "emoji": {
            "description": "Emoji used in the reaction.",
            "example": "\ud83d\udc4d",
            "type": "string"
          },
          "id": {
            "description": "Reaction ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A MessageReaction is a reaction emoji made by a user on a message.\n"
      },
      "NotificationEntity": {
        "description": "NotificationEntity model",
        "properties": {
          "group_id": {
            "description": "ID of Group to receive notifications",
            "example": 0,
            "format": "int32",
            "type": "integer"
          },
          "group_name": {
            "description": "Group name, if a Group ID is set",
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "Notification ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "Custom message to include in notification emails",
            "example": "custom notification email message",
            "type": "string"
          },
          "notify_on_copy": {
            "description": "Trigger on files copied to this path?",
            "example": true,
            "type": "boolean"
          },
          "notify_on_delete": {
            "description": "Trigger on files deleted in this path?",
            "example": true,
            "type": "boolean"
          },
          "notify_on_download": {
            "description": "Trigger on files downloaded in this path?",
            "example": true,
            "type": "boolean"
          },
          "notify_on_move": {
            "description": "Trigger on files moved to this path?",
            "example": true,
            "type": "boolean"
          },
          "notify_on_upload": {
            "description": "Trigger on files created/uploaded/updated/changed in this path?",
            "example": true,
            "type": "boolean"
          },
          "notify_user_actions": {
            "description": "If true, will send notifications about a user's own activity to that user.  If false, only activity performed by other users (or anonymous users) will be sent in notifications.",
            "example": true,
            "type": "boolean"
          },
          "path": {
            "description": "Folder path to notify on",
            "example": "path",
            "type": "string"
          },
          "recursive": {
            "description": "Apply notification recursively?  This will enable notifications for each subfolder.",
            "example": true,
            "type": "boolean"
          },
          "send_interval": {
            "description": "The time interval that notifications are aggregated to",
            "enum": [
              "five_minutes",
              "fifteen_minutes",
              "hourly",
              "daily"
            ],
            "example": "fifteen_minutes",
            "type": "string"
          },
          "suppressed_email": {
            "description": "If true, it means that the recipient at this user's email address has manually unsubscribed from all emails, or had their email \"hard bounce\", which means that we are unable to send mail to this user's current email address. Notifications will resume if the user changes their email address.",
            "example": true,
            "type": "boolean"
          },
          "trigger_by_share_recipients": {
            "description": "Notify when actions are performed by a share recipient?",
            "example": true,
            "type": "boolean"
          },
          "triggering_filenames": {
            "description": "Array of filenames (possibly with wildcards) to scope trigger",
            "example": [
              "*.jpg",
              "notify_file.txt"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "triggering_group_ids": {
            "description": "If set, will only notify on actions made by a member of one of the specified groups",
            "example": [
              1
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "triggering_user_ids": {
            "description": "If set, will only notify on actions made one of the specified users",
            "example": [
              1
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "unsubscribed": {
            "description": "Is the user unsubscribed from this notification?",
            "example": true,
            "type": "boolean"
          },
          "unsubscribed_reason": {
            "description": "The reason that the user unsubscribed",
            "enum": [
              "none",
              "unsubscribe_link_clicked",
              "mail_bounced",
              "mail_marked_as_spam"
            ],
            "example": "example",
            "type": "string"
          },
          "user_id": {
            "description": "Notification user ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Notification username",
            "example": "User",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Notification is our feature that sends E-Mails when specific actions occur in the folder.\n\nEmails are sent in batches, with email frequency options of every 5 minutes, every 15 minutes, hourly, or daily. They will include a list of the matching actions within the configured notification period, limited to the first 100.\n"
      },
      "OutboundConnectionLogEntity": {
        "description": "OutboundConnectionLogEntity model",
        "properties": {
          "bytes_downloaded": {
            "description": "Data Length in Bytes. Present for download actions that transfer data.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "bytes_uploaded": {
            "description": "Data Length in Bytes. Present for upload actions that transfer data.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "client_ip": {
            "description": "End User IP",
            "example": "example",
            "type": "string"
          },
          "dest_remote_server_id": {
            "description": "Destination Remote Server ID",
            "example": "example",
            "type": "string"
          },
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "error_message": {
            "description": "Error message, if applicable",
            "example": "example",
            "type": "string"
          },
          "error_operation": {
            "description": "Error operation, if applicable",
            "example": "example",
            "type": "string"
          },
          "error_type": {
            "description": "Error type, if applicable",
            "example": "example",
            "type": "string"
          },
          "list_count": {
            "description": "Number of entries returned for a folder list action.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "operation": {
            "description": "Operation Type",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "Remote Path.",
            "example": "example",
            "type": "string"
          },
          "src_remote_server_id": {
            "description": "Source Remote Server ID",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "example",
            "type": "string"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An OutboundConnectionLog is an audit log for monitoring and troubleshooting actions performed by your Remote Servers and Files.com on-premise Agents.\n"
      },
      "PaymentLineItemEntity": {
        "properties": {
          "amount": {
            "description": "Payment line item amount",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "created_at": {
            "description": "Payment line item created at date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "invoice_id": {
            "description": "Invoice ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "payment_id": {
            "description": "Payment ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A PaymentLineItem is your payment information. Used as a part of Account Line Item object.\n"
      },
      "PermissionEntity": {
        "description": "PermissionEntity model",
        "properties": {
          "group_id": {
            "description": "Group ID",
            "example": 0,
            "format": "int32",
            "type": "integer"
          },
          "group_name": {
            "description": "Group name (if applicable)",
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "Permission ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "description": "Path",
            "example": "example",
            "type": "string"
          },
          "permission": {
            "description": "Permission type.  See the table referenced in the documentation for an explanation of each permission.",
            "enum": [
              "full",
              "readonly",
              "writeonly",
              "list",
              "history",
              "admin",
              "bundle",
              "site_admin",
              "readonly_site_admin"
            ],
            "example": "full",
            "type": "string"
          },
          "recursive": {
            "description": "Recursive: does this permission apply to subfolders?",
            "example": true,
            "type": "boolean"
          },
          "site_id": {
            "description": "Site ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_id": {
            "description": "User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Username (if applicable)",
            "example": "user",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Permission object represents a grant of access permission on a specific Path to a User or Group.\n\nThey can be optionally recursive or nonrecursive into the subfolders of that path.\n\nA Permission may be applied to a User *or* a Group, but not both at once.\n\nThe following table sets forth the available Permission types:\n\n| Permission | Access Level Granted | Automatically Also Includes/Implies Permissions |\n| --- | ----------- | --------------------- |\n| `admin` | Able to manage Folder Behaviors, Permissions, and Notifications for the folder.  Also grants all other permissions. | `bundle`, `full`, `writeonly`, `readonly`, `list`, `history` |\n| `bundle` | Able to share files and folders via a Bundle (share link). | `readonly`, `list` |\n| `full` | Able to read, write, move, delete, and rename files and folders. Also grants the ability to overwrite files upon upload. | `writeonly`, `readonly`, `list` |\n| `history` | Able to view the history of files and folders and to create email notifications for themselves. | `list` |\n| `list` | Able to list files and folders, but not download. | none |\n| `readonly` | Able to list, preview, and download files and folders. | `list` |\n| `readonly_site_admin` | Able to behave as a read-only Site Admin on a given child site. Only applies to child sites. | `readonly`, `list`, `history` |\n| `site_admin` | Able to behave as a Site Admin on a given child site. Only applies to child sites. | `bundle`, `full`, `writeonly`, `readonly`, `list`, `history` |\n| `writeonly` | Able to upload files, create folders and list subfolders the user has write permission to. | none |\n"
      },
      "PreviewEntity": {
        "properties": {
          "download_uri": {
            "description": "Link to download preview",
            "example": "https://mysite.files.com/...",
            "type": "string"
          },
          "id": {
            "description": "Preview ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "description": "Preview size",
            "example": "large",
            "type": "string"
          },
          "status": {
            "description": "Preview status.  Can be invalid, not_generated, generating, complete, or file_too_large",
            "example": "complete",
            "type": "string"
          },
          "type": {
            "description": "Preview type. Can be image, pdf, pdf_native, video, or audio",
            "example": "image",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Preview is an image or PDF preview that is meant to be viewed within the web interface.\n"
      },
      "PriorityEntity": {
        "description": "PriorityEntity model",
        "properties": {
          "color": {
            "description": "The priority color",
            "example": "pink",
            "type": "string"
          },
          "path": {
            "description": "The path corresponding to the priority color",
            "example": "foo/bar",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Priority is a color tag that is attached to the path.\n"
      },
      "ProjectEntity": {
        "description": "ProjectEntity model",
        "properties": {
          "global_access": {
            "description": "Global access settings",
            "enum": [
              "none",
              "anyone_with_read",
              "anyone_with_full"
            ],
            "example": "none",
            "type": "string"
          },
          "id": {
            "description": "Project ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A Project is associated with a folder and add project management features to that folder.\n"
      },
      "PublicHostingRequestLogEntity": {
        "description": "PublicHostingRequestLogEntity model",
        "properties": {
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "hostname": {
            "description": "HTTP Request Hostname",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "HTTP Request Path",
            "example": "example",
            "type": "string"
          },
          "remote_ip": {
            "description": "IP Address of Public Hosting Client",
            "example": "example",
            "type": "string"
          },
          "responseCode": {
            "description": "HTTP Response Code",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "server_ip": {
            "description": "IP Address of Public Hosting Server",
            "example": "example",
            "type": "string"
          },
          "success": {
            "description": "Whether SFTP Action was successful.",
            "example": true,
            "type": "boolean"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A PublicHostingRequestLog is an audit log for monitoring requests we received to access your publicly served folders.\n"
      },
      "PublicIpAddressEntity": {
        "description": "PublicIpAddressEntity model",
        "properties": {
          "ftp_enabled": {
            "example": true,
            "type": "boolean"
          },
          "ip_address": {
            "description": "The public IP address.",
            "example": "1.1.1.1",
            "type": "string"
          },
          "server_name": {
            "description": "The name of the frontend server.",
            "example": "server-1",
            "type": "string"
          },
          "sftp_enabled": {
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "A PublicIPAddress is an IP address that `app.files.com` (or `*.files.com`) may potentially resolve to over the next 30 days.  This list includes IP addresses that are hot standbys not in use.\n"
      },
      "PublicKeyEntity": {
        "description": "PublicKeyEntity model",
        "properties": {
          "created_at": {
            "description": "Public key created at date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "fingerprint": {
            "description": "Public key fingerprint (MD5)",
            "example": "43:51:43:a1:b5:fc:8b:b7:0a:3a:a9:b1:0f:66:73:a8",
            "type": "string"
          },
          "fingerprint_sha256": {
            "description": "Public key fingerprint (SHA256)",
            "example": "V5Q5t/ghT3R8Tol5GX9385bzmpygWVRnLuI9EXNrjCX",
            "type": "string"
          },
          "id": {
            "description": "Public key ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "description": "Public key title",
            "example": "My public key",
            "type": "string"
          },
          "user_id": {
            "description": "User ID this public key is associated with",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Username of the user this public key is associated with",
            "example": "User",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A PublicKey is used to authenticate to Files.com via SFTP (SSH File Transfer Protocol). This method of authentication allows users to use their private key (which is never shared with Files.com) to authenticate themselves against the PublicKey stored on Files.com.\n\nWhen a user configures their PublicKey, it allows them to bypass traditional password-based authentication, leveraging the security of key-based authentication instead.\n\nNote that Files.com\u2019s SSH support is limited to file operations only. While users can securely transfer files and manage their data via SFTP, they do not have access to a full shell environment for executing arbitrary commands.\n"
      },
      "RemoteBandwidthSnapshotEntity": {
        "description": "RemoteBandwidthSnapshotEntity model",
        "properties": {
          "id": {
            "description": "Site bandwidth ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "logged_at": {
            "description": "Time the site bandwidth report was logged",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "remote_server_id": {
            "description": "ID of related Remote Server",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "sync_bytes_received": {
            "description": "Site sync bandwidth report bytes received",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "sync_bytes_sent": {
            "description": "Site sync bandwidth report bytes sent",
            "example": 1,
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "x-docs": "A RemoteBandwidthSnapshot is a remote bandwidth report for the given date.\n"
      },
      "RemoteServerConfigurationFileEntity": {
        "description": "RemoteServerConfigurationFileEntity model",
        "properties": {
          "api_token": {
            "description": "Files Agent API Token",
            "example": "example",
            "type": "string"
          },
          "config_version": {
            "description": "agent config version",
            "example": "example",
            "type": "string"
          },
          "dns": {
            "description": "DNS lookup method ['auto','doh','system'] (default auto)",
            "example": "example",
            "type": "string"
          },
          "endpoint_override": {
            "description": "Custom site endpoint URL",
            "example": "example",
            "type": "string"
          },
          "follow_links": {
            "description": "Follow symlinks when traversing directories",
            "example": true,
            "type": "boolean"
          },
          "graceful_shutdown_timeout": {
            "description": "Graceful shutdown timeout in seconds (default 15)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "hostname": {
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "The remote server ID of the agent",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "log_file": {
            "description": "Log file name and location",
            "example": "example",
            "type": "string"
          },
          "log_level": {
            "description": "Log level for the agent logs ['debug', 'info', 'warn', 'error', 'fatal'] (default info)",
            "example": "example",
            "type": "string"
          },
          "log_rotate_num": {
            "description": "Log route for agent logs. (default 5)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "log_rotate_size": {
            "description": "Log route size in MB for agent logs. (default 20)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "override_max_concurrent_jobs": {
            "description": "Maximum number of concurrent jobs (default 500)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "permission_set": {
            "description": "The permission set for the agent ['read_write', 'read_only', 'write_only']",
            "example": "example",
            "type": "string"
          },
          "port": {
            "description": "Incoming port for files agent connections",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "prefer_protocol": {
            "description": "Preferred network protocol ['udp', 'tcp'] (default udp)",
            "example": "example",
            "type": "string"
          },
          "private_key": {
            "description": "The private key for the agent",
            "example": "example",
            "type": "string"
          },
          "proxy_all_outbound": {
            "description": "Proxy all outbound traffic through files.com proxy server",
            "example": true,
            "type": "boolean"
          },
          "public_key": {
            "description": "public key",
            "example": "example",
            "type": "string"
          },
          "root": {
            "description": "The root directory for the agent",
            "example": "C:\\Users\\",
            "type": "string"
          },
          "server_host_key": {
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "either running or shutdown",
            "example": "example",
            "type": "string"
          },
          "subdomain": {
            "description": "Files.com subdomain site name",
            "example": "example",
            "type": "string"
          },
          "transfer_rate_limit": {
            "description": "File transfer (upload/download) rate limit\n `<limit>-<period>`, with the given periods:\n* 'S': second\n* 'M': minute\n* 'H': hour\n* 'D': day\nExamples:\n* 5 requests/second: '5-S'\n* 10 requests/minute: '10-M'\n* 1000 requests/hour: '1000-H'\n* 2000 requests/day: '2000-D'",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A RemoteServerConfigurationFile is a configuration file (required for some Remote Server integrations, such as the Files.com Agent).\n"
      },
      "RemoteServerEntity": {
        "description": "RemoteServerEntity model",
        "properties": {
          "auth_account_name": {
            "description": "Describes the authorized account",
            "example": "me@example.com",
            "type": "string"
          },
          "auth_status": {
            "description": "Either `in_setup` or `complete`",
            "enum": [
              "not_applicable",
              "in_setup",
              "complete",
              "reauthenticate"
            ],
            "example": "in_setup",
            "type": "string"
          },
          "authentication_method": {
            "description": "Type of authentication method",
            "example": "password",
            "type": "string"
          },
          "aws_access_key": {
            "description": "AWS Access Key.",
            "example": "example",
            "type": "string"
          },
          "azure_blob_storage_account": {
            "description": "Azure Blob Storage Account name",
            "example": "storage-account-name",
            "type": "string"
          },
          "azure_blob_storage_container": {
            "description": "Azure Blob Storage Container name",
            "example": "container-name",
            "type": "string"
          },
          "azure_blob_storage_hierarchical_namespace": {
            "description": "Enable when storage account has hierarchical namespace feature enabled",
            "example": true,
            "type": "boolean"
          },
          "azure_files_storage_account": {
            "description": "Azure File Storage Account name",
            "example": "storage-account-name",
            "type": "string"
          },
          "azure_files_storage_dns_suffix": {
            "description": "Custom DNS suffix",
            "example": "file.core.windows.net",
            "type": "string"
          },
          "azure_files_storage_share_name": {
            "description": "Azure File Storage Share name",
            "example": "share-name",
            "type": "string"
          },
          "backblaze_b2_bucket": {
            "description": "Backblaze B2 Cloud Storage Bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "backblaze_b2_s3_endpoint": {
            "description": "Backblaze B2 Cloud Storage S3 Endpoint",
            "example": "s3.us-west-001.backblazeb2.com",
            "type": "string"
          },
          "cloudflare_access_key": {
            "description": "Cloudflare Access Key.",
            "example": "example",
            "type": "string"
          },
          "cloudflare_bucket": {
            "description": "Cloudflare Bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "cloudflare_endpoint": {
            "description": "Cloudflare endpoint",
            "example": "https://<ACCOUNT_ID>.r2.cloudflarestorage.com",
            "type": "string"
          },
          "disabled": {
            "description": "If true, this server has been disabled due to failures.  Make any change or set disabled to false to clear this flag.",
            "example": true,
            "type": "boolean"
          },
          "dropbox_teams": {
            "description": "List Team folders in root",
            "example": true,
            "type": "boolean"
          },
          "enable_dedicated_ips": {
            "description": "`true` if remote server only accepts connections from dedicated IPs",
            "example": true,
            "type": "boolean"
          },
          "filebase_access_key": {
            "description": "Filebase Access Key.",
            "example": "example",
            "type": "string"
          },
          "filebase_bucket": {
            "description": "Filebase Bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "files_agent_api_token": {
            "description": "Files Agent API Token",
            "example": "example",
            "type": "string"
          },
          "files_agent_permission_set": {
            "description": "Local permissions for files agent. read_only, write_only, or read_write",
            "enum": [
              "read_write",
              "read_only",
              "write_only"
            ],
            "example": "read_write",
            "type": "string"
          },
          "files_agent_root": {
            "description": "Agent local root path",
            "example": "example",
            "type": "string"
          },
          "files_agent_version": {
            "description": "Files Agent version",
            "example": "example",
            "type": "string"
          },
          "google_cloud_storage_bucket": {
            "description": "Google Cloud Storage bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "google_cloud_storage_project_id": {
            "description": "Google Cloud Project ID",
            "example": "my-project",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname or IP address",
            "example": "remote-server.com",
            "type": "string"
          },
          "id": {
            "description": "Remote server ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "linode_access_key": {
            "description": "Linode Access Key.",
            "example": "example",
            "type": "string"
          },
          "linode_bucket": {
            "description": "Linode Bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "linode_region": {
            "description": "Linode region",
            "example": "us-east-1",
            "type": "string"
          },
          "max_connections": {
            "description": "Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Internal name for your reference",
            "example": "My Remote server",
            "type": "string"
          },
          "one_drive_account_type": {
            "description": "Either personal or business_other account types",
            "enum": [
              "personal",
              "business_other"
            ],
            "example": "personal",
            "type": "string"
          },
          "pin_to_site_region": {
            "description": "If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a site-wide setting which will force it to true.",
            "example": true,
            "type": "boolean"
          },
          "pinned_region": {
            "description": "If set, all communications with this remote server are made through the provided region.",
            "example": "us-east-1",
            "type": "string"
          },
          "port": {
            "description": "Port for remote server.  Not needed for S3.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "rackspace_container": {
            "description": "The name of the container (top level directory) where files will sync.",
            "example": "my-container",
            "type": "string"
          },
          "rackspace_region": {
            "description": "Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/",
            "example": "dfw",
            "type": "string"
          },
          "rackspace_username": {
            "description": "Rackspace username used to login to the Rackspace Cloud Control Panel.",
            "example": "rackspaceuser",
            "type": "string"
          },
          "remote_home_path": {
            "description": "Initial home folder on remote server",
            "example": "/home/user1",
            "type": "string"
          },
          "s3_bucket": {
            "description": "S3 bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "s3_compatible_access_key": {
            "description": "S3-compatible Access Key.",
            "example": "example",
            "type": "string"
          },
          "s3_compatible_bucket": {
            "description": "S3-compatible Bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "s3_compatible_endpoint": {
            "description": "S3-compatible endpoint",
            "example": "mys3platform.com",
            "type": "string"
          },
          "s3_compatible_region": {
            "description": "S3-compatible endpoint",
            "example": "us-east-1",
            "type": "string"
          },
          "s3_region": {
            "description": "S3 region",
            "example": "us-east-1",
            "type": "string"
          },
          "server_certificate": {
            "description": "Remote server certificate",
            "enum": [
              "require_match",
              "allow_any"
            ],
            "example": "require_match",
            "type": "string"
          },
          "server_host_key": {
            "description": "Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts",
            "example": "[public key]",
            "type": "string"
          },
          "server_type": {
            "description": "Remote server type.",
            "enum": [
              "ftp",
              "sftp",
              "s3",
              "google_cloud_storage",
              "webdav",
              "wasabi",
              "backblaze_b2",
              "one_drive",
              "rackspace",
              "box",
              "dropbox",
              "google_drive",
              "azure",
              "sharepoint",
              "s3_compatible",
              "azure_files",
              "files_agent",
              "filebase",
              "cloudflare",
              "linode"
            ],
            "example": "s3",
            "type": "string"
          },
          "ssl": {
            "description": "Should we require SSL?",
            "enum": [
              "if_available",
              "require",
              "require_implicit",
              "never"
            ],
            "example": "if_available",
            "type": "string"
          },
          "supports_versioning": {
            "description": "If true, this remote server supports file versioning. This value is determined automatically by Files.com.",
            "example": false,
            "type": "boolean"
          },
          "username": {
            "description": "Remote server username.  Not needed for S3 buckets.",
            "example": "user",
            "type": "string"
          },
          "wasabi_access_key": {
            "description": "Wasabi access key.",
            "example": "example",
            "type": "string"
          },
          "wasabi_bucket": {
            "description": "Wasabi Bucket name",
            "example": "my-bucket",
            "type": "string"
          },
          "wasabi_region": {
            "description": "Wasabi region",
            "example": "us-west-1",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A RemoteServer is a specific type of Behavior called `remote_server_sync`.\n\nRemote Servers can be either an FTP server, SFTP server, S3 bucket, Google Cloud Storage, Wasabi, Backblaze B2 Cloud Storage, Rackspace Cloud Files container, WebDAV, Box, Dropbox, OneDrive, Google Drive, or Azure Blob Storage.\n\nNot every attribute will apply to every remote server.\n\nFTP Servers require that you specify their `hostname`, `port`, `username`, `password`, and a value for `ssl`.  Optionally, provide `server_certificate`.\n\nSFTP Servers require that you specify their `hostname`, `port`, `username`, `password` or `private_key`, and a value for `ssl`.  Optionally, provide `server_certificate`, `private_key_passphrase`.\n\nS3 Buckets require that you specify their `s3_bucket` name, and `s3_region`.  Optionally provide a `aws_access_key`, and `aws_secret_key`.  If you don't provide credentials, you will need to use AWS to grant us access to your bucket.\n\nS3-Compatible Buckets require that you specify `s3_compatible_bucket`, `s3_compatible_endpoint`, `s3_compatible_access_key`, and `s3_compatible_secret_key`.\n\nGoogle Cloud Storage requires that you specify `google_cloud_storage_bucket`, `google_cloud_storage_project_id`, and `google_cloud_storage_credentials_json`.\n\nWasabi requires `wasabi_bucket`, `wasabi_region`, `wasabi_access_key`, and `wasabi_secret_key`.\n\nBackblaze B2 Cloud Storage `backblaze_b2_bucket`, `backblaze_b2_s3_endpoint`, `backblaze_b2_application_key`, and `backblaze_b2_key_id`. (Requires S3 Compatible API) See https://help.backblaze.com/hc/en-us/articles/360047425453\n\nRackspace Cloud Files requires `rackspace_username`, `rackspace_api_key`, `rackspace_region`, and `rackspace_container`.\n\nWebDAV Servers require that you specify their `hostname`, `username`, and `password`.\n\nOneDrive follow the `auth_setup_link` and login with Microsoft.\n\nSharepoint follow the `auth_setup_link` and login with Microsoft.\n\nBox follow the `auth_setup_link` and login with Box.\n\nDropbox specify if `dropbox_teams` then follow the `auth_setup_link` and login with Dropbox.\n\nGoogle Drive follow the `auth_setup_link` and login with Google.\n\nAzure Blob Storage `azure_blob_storage_account`, `azure_blob_storage_container`, `azure_blob_storage_access_key`, `azure_blob_storage_sas_token`\n\nAzure File Storage `azure_files_storage_account`, `azure_files_storage_access_key`, `azure_files_storage_share_name`, `azure_files_storage_dns_suffix`\n\nFilebase requires `filebase_bucket`, `filebase_access_key`, and `filebase_secret_key`.\n\nCloudflare requires `cloudflare_bucket`, `cloudflare_access_key`, `cloudflare_secret_key` and `cloudflare_endpoint`.\n\nLinode requires `linode_bucket`, `linode_access_key`, `linode_secret_key` and `linode_region`.\n"
      },
      "RequestEntity": {
        "description": "RequestEntity model",
        "properties": {
          "automation_id": {
            "description": "ID of automation that created request",
            "example": "example",
            "type": "string"
          },
          "destination": {
            "description": "Destination filename",
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "Request ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "description": "Folder path",
            "example": "example",
            "type": "string"
          },
          "source": {
            "description": "Source filename, if applicable",
            "example": "example",
            "type": "string"
          },
          "user_display_name": {
            "description": "User making the request (if applicable)",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A Request is a file that *should* be uploaded by a specific user or group.\n\nRequests can either be manually created and managed, or managed automatically by an Automation.\n"
      },
      "SessionEntity": {
        "description": "SessionEntity model",
        "properties": {
          "id": {
            "description": "Session ID",
            "example": "60525f92e859c4c3d74cb02fd176b1525901b525",
            "type": "string"
          },
          "language": {
            "description": "Session language",
            "example": "en",
            "type": "string"
          },
          "read_only": {
            "description": "Is this session read only?",
            "example": true,
            "type": "boolean"
          },
          "sftp_insecure_ciphers": {
            "description": "Are insecure SFTP ciphers allowed for this user? (If this is set to true, the site administrator has signaled that it is ok to use less secure SSH ciphers for this user.)",
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "A Session is an operation that allows you to make further API calls using our REST API or SDKs as a specific user.\nThis is the only way to use the API if you know a username/password but not an API key.\n\nSessions in the API and SDKs use the exact same mechanism (and work the same) as sessions in the web interface.\n\nAfter creating a session, the Session object returned will include plenty of relevant information about the current user, often used to customize the interface or enable further automation.\n"
      },
      "SettingsChangeEntity": {
        "description": "SettingsChangeEntity model",
        "properties": {
          "api_key_id": {
            "description": "The API key id responsible for this change",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "changes": {
            "description": "Markdown-formatted change messages.",
            "example": [
              "example"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "created_at": {
            "description": "The time this change was made",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "user_id": {
            "description": "The user id responsible for this change",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_is_files_support": {
            "description": "true if this change was performed by Files.com support.",
            "example": false,
            "type": "boolean"
          },
          "user_is_from_parent_site": {
            "description": "true if this change was performed by a user on a parent site.",
            "example": false,
            "type": "boolean"
          },
          "username": {
            "description": "The username of the user responsible for this change",
            "example": "some_user",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A SettingsChange is any change in your site caused by any user.\n"
      },
      "SftpActionLogEntity": {
        "description": "SftpActionLogEntity model",
        "properties": {
          "action_type": {
            "description": "Action Type",
            "example": "example",
            "type": "string"
          },
          "auth_ciphers": {
            "description": "Authentication Ciphers",
            "example": "example",
            "type": "string"
          },
          "auth_method": {
            "description": "Authentication Method",
            "example": "example",
            "type": "string"
          },
          "bytes_transferred": {
            "description": "The number of bytes transferred for uploads and downloads.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "data_length": {
            "description": "Data Length in Bytes. Present for actions that transfer data.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "entries_returned": {
            "description": "Number of entries returned when listing files and folders",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "md5": {
            "description": "MD5 Hash of the file. Not always available.",
            "example": "example",
            "type": "string"
          },
          "name": {
            "description": "Name of File",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "Path as sent by the Client (may not match Files.com path due to user root folders for SFTP).",
            "example": "example",
            "type": "string"
          },
          "remote_ip": {
            "description": "IP Address of SFTP Client",
            "example": "example",
            "type": "string"
          },
          "seq_id": {
            "description": "SFTP Sequence ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "server_ip": {
            "description": "IP Address of SFTP Server",
            "example": "example",
            "type": "string"
          },
          "session_uuid": {
            "description": "Unique ID of the Session",
            "example": "example",
            "type": "string"
          },
          "sftp_response_code": {
            "description": "SFTP Response Code Returned to the Client.",
            "example": "example",
            "type": "string"
          },
          "sftp_response_message": {
            "description": "SFTP Response Message Returned to the Client.",
            "example": "example",
            "type": "string"
          },
          "size": {
            "description": "Size of File That was Uploaded or Downloaded.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "ssh_client_identification": {
            "description": "Name of the SFTP Client provided at initial connection",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "SFTP Action status.",
            "example": "example",
            "type": "string"
          },
          "success": {
            "description": "Whether SFTP Action was successful.",
            "example": true,
            "type": "boolean"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "true_path": {
            "description": "Path on Files.com",
            "example": "example",
            "type": "string"
          },
          "username": {
            "description": "Username",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An SFTPActionLog is an audit log for monitoring and troubleshooting operations made to your site through SFTP protocol.\n"
      },
      "SftpHostKeyEntity": {
        "description": "SftpHostKeyEntity model",
        "properties": {
          "fingerprint_md5": {
            "description": "MD5 Fingerprint of the public key",
            "example": "example",
            "type": "string"
          },
          "fingerprint_sha256": {
            "description": "SHA256 Fingerprint of the public key",
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "SFTP Host Key ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The friendly name of this SFTP Host Key.",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "An SFTP Host Key is a cryptographic key used to verify the identity of the server during an SFTP connection. This allows the client to be sure that it is connecting to the intended server, preventing man-in-the-middle attacks and ensuring secure communication between the client and Files.com.\n\nFiles.com allows you to provide custom SFTP Host Keys, which is particularly useful when migrating to Files.com from an existing SFTP server, allowing the Files.com platform to match your previously-installed host key for a seamless transition.\n"
      },
      "ShareGroupEntity": {
        "description": "ShareGroupEntity model",
        "properties": {
          "id": {
            "description": "Share Group ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "members": {
            "description": "A list of share group members",
            "example": [
              {
                "company": "Acme Ltd",
                "email": "johndoe@gmail.com",
                "name": "John Doe"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ShareGroupMemberEntity"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the share group",
            "example": "Test group 1",
            "type": "string"
          },
          "notes": {
            "description": "Additional notes of the share group",
            "example": "This group is defined for testing purposes",
            "type": "string"
          },
          "user_id": {
            "description": "Owner User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A ShareGroup is a way for you to store and name groups of email contacts to be used for sending share and inbox invitations.\n"
      },
      "ShareGroupMemberEntity": {
        "properties": {
          "company": {
            "description": "Company of the share group member",
            "example": "Acme Ltd",
            "type": "string"
          },
          "email": {
            "description": "Email of the share group member",
            "example": "johndoe@gmail.com",
            "type": "string"
          },
          "name": {
            "description": "Name of the share group member",
            "example": "John Doe",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A ShareGroupMember is a single user record that belongs to a ShareGroup.\n"
      },
      "SiemHttpDestinationEntity": {
        "description": "SiemHttpDestinationEntity model",
        "properties": {
          "additional_headers": {
            "description": "Additional HTTP Headers included in calls to the destination URL",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "api_request_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "api_request_send_enabled": {
            "description": "Whether or not sending is enabled for api_request logs.",
            "example": true,
            "type": "boolean"
          },
          "automation_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "automation_send_enabled": {
            "description": "Whether or not sending is enabled for automation logs.",
            "example": true,
            "type": "boolean"
          },
          "azure_dcr_immutable_id": {
            "description": "Applicable only for destination type: azure. Immutable ID of the Data Collection Rule.",
            "example": "example",
            "type": "string"
          },
          "azure_oauth_client_credentials_client_id": {
            "description": "Applicable only for destination type: azure. Client Credentials OAuth Client ID.",
            "example": "example",
            "type": "string"
          },
          "azure_oauth_client_credentials_client_secret_masked": {
            "description": "Applicable only for destination type: azure. Client Credentials OAuth Client Secret.",
            "example": "example",
            "type": "string"
          },
          "azure_oauth_client_credentials_tenant_id": {
            "description": "Applicable only for destination type: azure. Client Credentials OAuth Tenant ID.",
            "example": "example",
            "type": "string"
          },
          "azure_stream_name": {
            "description": "Applicable only for destination type: azure. Name of the stream in the DCR that represents the destination table.",
            "example": "example",
            "type": "string"
          },
          "connection_test_entry": {
            "description": "Connection Test Entry",
            "example": "example",
            "type": "string"
          },
          "datadog_api_key_masked": {
            "description": "Applicable only for destination type: datadog. API key provided by Datadog.",
            "example": "example",
            "type": "string"
          },
          "destination_type": {
            "description": "Destination Type",
            "enum": [
              "generic",
              "splunk",
              "azure",
              "qradar",
              "sumo",
              "rapid7",
              "solar_winds",
              "new_relic",
              "datadog"
            ],
            "example": "example",
            "type": "string"
          },
          "destination_url": {
            "description": "Destination Url",
            "example": "example",
            "type": "string"
          },
          "email_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "email_send_enabled": {
            "description": "Whether or not sending is enabled for email logs.",
            "example": true,
            "type": "boolean"
          },
          "exavault_api_request_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "exavault_api_request_send_enabled": {
            "description": "Whether or not sending is enabled for exavault_api_request logs.",
            "example": true,
            "type": "boolean"
          },
          "ftp_action_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "ftp_action_send_enabled": {
            "description": "Whether or not sending is enabled for ftp_action logs.",
            "example": true,
            "type": "boolean"
          },
          "generic_payload_type": {
            "description": "Applicable only for destination type: generic. Indicates the type of HTTP body. Can be json_newline or json_array. json_newline is multiple log entries as JSON separated by newlines. json_array is a single JSON array containing multiple log entries as JSON.",
            "enum": [
              "json_newline",
              "json_array"
            ],
            "example": "example",
            "type": "string"
          },
          "id": {
            "description": "SIEM HTTP Destination ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_http_call_duration_ms": {
            "description": "Duration of the last HTTP Call in milliseconds",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_http_call_error_message": {
            "description": "Last HTTP Call Error Message if applicable",
            "example": "example",
            "type": "string"
          },
          "last_http_call_response_body": {
            "description": "Last HTTP Call Response Body. Large responses are truncated.",
            "example": "example",
            "type": "string"
          },
          "last_http_call_response_code": {
            "description": "Last HTTP Call Response Code",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "last_http_call_success": {
            "description": "Was the last HTTP call made successful?",
            "example": true,
            "type": "boolean"
          },
          "last_http_call_target_type": {
            "description": "Type of URL that was last called. Can be `destination_url` or `azure_oauth_client_credentials_url`",
            "enum": [
              "destination_url",
              "azure_oauth_client_credentials_url"
            ],
            "example": "destination_url",
            "type": "string"
          },
          "last_http_call_time": {
            "description": "Time of Last HTTP Call",
            "example": "example",
            "type": "string"
          },
          "most_recent_http_call_success_time": {
            "description": "Time of Most Recent Successful HTTP Call",
            "example": "example",
            "type": "string"
          },
          "name": {
            "description": "Name for this Destination",
            "example": "example",
            "type": "string"
          },
          "new_relic_api_key_masked": {
            "description": "Applicable only for destination type: new_relic. API key provided by New Relic.",
            "example": "example",
            "type": "string"
          },
          "outbound_connection_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "outbound_connection_send_enabled": {
            "description": "Whether or not sending is enabled for outbound_connection logs.",
            "example": true,
            "type": "boolean"
          },
          "public_hosting_request_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "public_hosting_request_send_enabled": {
            "description": "Whether or not sending is enabled for public_hosting_request logs.",
            "example": true,
            "type": "boolean"
          },
          "qradar_password_masked": {
            "description": "Applicable only for destination type: qradar. Basic auth password provided by QRadar.",
            "example": "example",
            "type": "string"
          },
          "qradar_username": {
            "description": "Applicable only for destination type: qradar. Basic auth username provided by QRadar.",
            "example": "example",
            "type": "string"
          },
          "sending_active": {
            "description": "Whether this SIEM HTTP Destination is currently being sent to or not",
            "example": true,
            "type": "boolean"
          },
          "sftp_action_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "sftp_action_send_enabled": {
            "description": "Whether or not sending is enabled for sftp_action logs.",
            "example": true,
            "type": "boolean"
          },
          "solar_winds_token_masked": {
            "description": "Applicable only for destination type: solar_winds. Authentication token provided by Solar Winds.",
            "example": "example",
            "type": "string"
          },
          "splunk_token_masked": {
            "description": "Applicable only for destination type: splunk. Authentication token provided by Splunk.",
            "example": "example",
            "type": "string"
          },
          "sync_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "sync_send_enabled": {
            "description": "Whether or not sending is enabled for sync logs.",
            "example": true,
            "type": "boolean"
          },
          "web_dav_action_entries_sent": {
            "description": "Number of log entries sent for the lifetime of this destination.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "web_dav_action_send_enabled": {
            "description": "Whether or not sending is enabled for web_dav_action logs.",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": null
      },
      "SiteEntity": {
        "description": "SiteEntity model",
        "properties": {
          "active_sftp_host_key_id": {
            "description": "Id of the currently selected custom SFTP Host Key",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "additional_text_file_types": {
            "description": "Additional extensions that are considered text files",
            "example": [
              "example"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "admin_user_id": {
            "description": "User ID for the main site administrator",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "admins_bypass_locked_subfolders": {
            "description": "Allow admins to bypass the locked subfolders setting.",
            "example": false,
            "type": "boolean"
          },
          "allow_bundle_names": {
            "description": "Are manual Bundle names allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_bypass_for_ftp_sftp_dav": {
            "description": "Are users allowed to configure their two factor authentication to be bypassed for FTP/SFTP/WebDAV?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_email": {
            "description": "Is OTP via email two factor authentication allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_sms": {
            "description": "Is SMS two factor authentication allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_static": {
            "description": "Is OTP via static codes for two factor authentication allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_totp": {
            "description": "Is TOTP two factor authentication allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_webauthn": {
            "description": "Is WebAuthn two factor authentication allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_2fa_method_yubi": {
            "description": "Is yubikey two factor authentication allowed?",
            "example": true,
            "type": "boolean"
          },
          "allowed_countries": {
            "description": "Comma separated list of allowed Country codes",
            "example": "US,DE",
            "type": "string"
          },
          "allowed_ips": {
            "description": "List of allowed IP addresses",
            "example": "example",
            "type": "string"
          },
          "always_mkdir_parents": {
            "description": "Create parent directories if they do not exist during uploads?  This is primarily used to work around broken upload clients that assume servers will perform this step.",
            "example": false,
            "type": "boolean"
          },
          "ask_about_overwrites": {
            "description": "If false, rename conflicting files instead of asking for overwrite confirmation.  Only applies to web interface.",
            "example": true,
            "type": "boolean"
          },
          "bundle_activity_notifications": {
            "description": "Do Bundle owners receive activity notifications?",
            "enum": [
              "never",
              "always",
              "per_bundle_setting"
            ],
            "example": "never",
            "type": "string"
          },
          "bundle_expiration": {
            "description": "Site-wide Bundle expiration in days",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "bundle_not_found_message": {
            "description": "Custom error message to show when bundle is not found.",
            "example": "example",
            "type": "string"
          },
          "bundle_password_required": {
            "description": "Do Bundles require password protection?",
            "example": true,
            "type": "boolean"
          },
          "bundle_recipient_blacklist_domains": {
            "description": "List of email domains to disallow when entering a Bundle/Inbox recipients",
            "example": [
              "example"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bundle_recipient_blacklist_free_email_domains": {
            "description": "Disallow free email domains for Bundle/Inbox recipients?",
            "example": true,
            "type": "boolean"
          },
          "bundle_registration_notifications": {
            "description": "Do Bundle owners receive registration notification?",
            "enum": [
              "never",
              "always",
              "per_bundle_setting"
            ],
            "example": "never",
            "type": "string"
          },
          "bundle_require_note": {
            "description": "Do Bundles require internal notes?",
            "example": true,
            "type": "boolean"
          },
          "bundle_require_registration": {
            "description": "Do Bundles require registration?",
            "example": true,
            "type": "boolean"
          },
          "bundle_require_share_recipient": {
            "description": "Do Bundles require recipients for sharing?",
            "example": true,
            "type": "boolean"
          },
          "bundle_send_shared_receipts": {
            "description": "Do Bundle creators receive receipts of invitations?",
            "example": true,
            "type": "boolean"
          },
          "bundle_upload_receipt_notifications": {
            "description": "Do Bundle uploaders receive upload confirmation notifications?",
            "enum": [
              "never",
              "always",
              "per_bundle_setting"
            ],
            "example": "never",
            "type": "string"
          },
          "bundle_watermark_attachment": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Preview watermark image applied to all bundle items.",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "bundle_watermark_value": {
            "description": "Preview watermark settings applied to all bundle items. Uses the same keys as Behavior.value",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "calculate_file_checksums_crc32": {
            "description": "Calculate CRC32 checksums for files?",
            "example": true,
            "type": "boolean"
          },
          "calculate_file_checksums_md5": {
            "description": "Calculate MD5 checksums for files?",
            "example": true,
            "type": "boolean"
          },
          "calculate_file_checksums_sha1": {
            "description": "Calculate SHA1 checksums for files?",
            "example": true,
            "type": "boolean"
          },
          "calculate_file_checksums_sha256": {
            "description": "Calculate SHA256 checksums for files?",
            "example": true,
            "type": "boolean"
          },
          "color2_left": {
            "description": "Page link and button color",
            "example": "#0066a7",
            "type": "string"
          },
          "color2_link": {
            "description": "Top bar link color",
            "example": "#d34f5d",
            "type": "string"
          },
          "color2_text": {
            "description": "Page link and button color",
            "example": "#0066a7",
            "type": "string"
          },
          "color2_top": {
            "description": "Top bar background color",
            "example": "#000000",
            "type": "string"
          },
          "color2_top_text": {
            "description": "Top bar text color",
            "example": "#ffffff",
            "type": "string"
          },
          "contact_name": {
            "description": "Site main contact name",
            "example": "John Doe",
            "type": "string"
          },
          "created_at": {
            "description": "Time this site was created",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "description": "Preferred currency",
            "example": "USD",
            "type": "string"
          },
          "custom_namespace": {
            "description": "Is this site using a custom namespace for users?",
            "example": true,
            "type": "boolean"
          },
          "dav_enabled": {
            "description": "Is WebDAV enabled?",
            "example": true,
            "type": "boolean"
          },
          "dav_user_root_enabled": {
            "description": "Use user FTP roots also for WebDAV?",
            "example": false,
            "type": "boolean"
          },
          "days_before_deleting_disabled_users": {
            "description": "Number of days to keep disabled users before deleting them. If set to 0, disabled users will not be deleted.",
            "example": 30,
            "format": "int32",
            "type": "integer"
          },
          "days_to_retain_backups": {
            "description": "Number of days to keep deleted files",
            "example": 30,
            "format": "int32",
            "type": "integer"
          },
          "default_time_zone": {
            "description": "Site default time zone",
            "example": "Pacific Time (US & Canada)",
            "type": "string"
          },
          "desktop_app": {
            "description": "Is the desktop app enabled?",
            "example": true,
            "type": "boolean"
          },
          "desktop_app_session_ip_pinning": {
            "description": "Is desktop app session IP pinning enabled?",
            "example": true,
            "type": "boolean"
          },
          "desktop_app_session_lifetime": {
            "description": "Desktop app session lifetime (in hours)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "disable_files_certificate_generation": {
            "description": "If set, Files.com will not set the CAA records required to generate future SSL certificates for this domain.",
            "example": true,
            "type": "boolean"
          },
          "disable_notifications": {
            "description": "Are notifications disabled?",
            "example": true,
            "type": "boolean"
          },
          "disable_password_reset": {
            "description": "Is password reset disabled?",
            "example": true,
            "type": "boolean"
          },
          "disable_users_from_inactivity_period_days": {
            "description": "If greater than zero, users will unable to login if they do not show activity within this number of days.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "disallowed_countries": {
            "description": "Comma separated list of disallowed Country codes",
            "example": "US,DE",
            "type": "string"
          },
          "document_edits_in_bundle_allowed": {
            "description": "If true, allow public viewers of Bundles with full permissions to use document editing integrations.",
            "example": false,
            "type": "boolean"
          },
          "domain": {
            "description": "Custom domain",
            "example": "my-custom-domain.com",
            "type": "string"
          },
          "domain_hsts_header": {
            "description": "Send HSTS (HTTP Strict Transport Security) header when visitors access the site via a custom domain?",
            "example": true,
            "type": "boolean"
          },
          "domain_letsencrypt_chain": {
            "description": "Letsencrypt chain to use when registering SSL Certificate for domain.",
            "enum": [
              "default",
              "isrg_root_x1",
              "dst_root_ca_x3"
            ],
            "example": "example",
            "type": "string"
          },
          "email": {
            "description": "Main email for this site",
            "example": "example",
            "format": "email",
            "type": "string"
          },
          "folder_permissions_groups_only": {
            "description": "If true, permissions for this site must be bound to a group (not a user).",
            "example": true,
            "type": "boolean"
          },
          "ftp_enabled": {
            "description": "Is FTP enabled?",
            "example": true,
            "type": "boolean"
          },
          "group_admins_can_set_user_password": {
            "description": "Allow group admins set password authentication method",
            "example": true,
            "type": "boolean"
          },
          "hipaa": {
            "description": "Is there a signed HIPAA BAA between Files.com and this site?",
            "example": true,
            "type": "boolean"
          },
          "icon128": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Branded icon 128x128",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "icon16": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Branded icon 16x16",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "icon32": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Branded icon 32x32",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "icon48": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Branded icon 48x48",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "id": {
            "description": "Site Id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "immutable_files_set_at": {
            "description": "Can files be modified?",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "include_password_in_welcome_email": {
            "description": "Include password in emails to new users?",
            "example": true,
            "type": "boolean"
          },
          "language": {
            "description": "Site default language",
            "example": "en",
            "type": "string"
          },
          "ldap_base_dn": {
            "description": "Base DN for looking up users in LDAP server",
            "example": "example",
            "type": "string"
          },
          "ldap_domain": {
            "description": "Domain name that will be appended to usernames",
            "example": "mysite.com",
            "type": "string"
          },
          "ldap_enabled": {
            "description": "Main LDAP setting: is LDAP enabled?",
            "example": true,
            "type": "boolean"
          },
          "ldap_group_action": {
            "description": "Should we sync groups from LDAP server?",
            "example": "disabled",
            "type": "string"
          },
          "ldap_group_exclusion": {
            "description": "Comma or newline separated list of group names (with optional wildcards) to exclude when syncing.",
            "example": "example",
            "type": "string"
          },
          "ldap_group_inclusion": {
            "description": "Comma or newline separated list of group names (with optional wildcards) to include when syncing.",
            "example": "example",
            "type": "string"
          },
          "ldap_host": {
            "description": "LDAP host",
            "example": "ldap.site.com",
            "type": "string"
          },
          "ldap_host_2": {
            "description": "LDAP backup host",
            "example": "ldap2.site.com",
            "type": "string"
          },
          "ldap_host_3": {
            "description": "LDAP backup host",
            "example": "ldap3.site.com",
            "type": "string"
          },
          "ldap_port": {
            "description": "LDAP port",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "ldap_secure": {
            "description": "Use secure LDAP?",
            "example": true,
            "type": "boolean"
          },
          "ldap_type": {
            "description": "LDAP type",
            "example": "open_ldap",
            "type": "string"
          },
          "ldap_user_action": {
            "description": "Should we sync users from LDAP server?",
            "example": "disabled",
            "type": "string"
          },
          "ldap_user_include_groups": {
            "description": "Comma or newline separated list of group names (with optional wildcards) - if provided, only users in these groups will be added or synced.",
            "example": "example",
            "type": "string"
          },
          "ldap_username": {
            "description": "Username for signing in to LDAP server.",
            "example": "[ldap username]",
            "type": "string"
          },
          "ldap_username_field": {
            "description": "LDAP username field",
            "example": "sAMAccountName",
            "type": "string"
          },
          "legacy_checksums_mode": {
            "description": "Use legacy checksums mode?",
            "example": true,
            "type": "boolean"
          },
          "login_help_text": {
            "description": "Login help text",
            "example": "Login page help text.",
            "type": "string"
          },
          "login_page_background_image": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Branded login page background",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "logo": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Branded logo",
            "example": {
              "name": "My logo",
              "uri": "https://mysite.files.com/.../my_image.png"
            }
          },
          "max_prior_passwords": {
            "description": "Number of prior passwords to disallow",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "mobile_app": {
            "description": "Is the mobile app enabled?",
            "example": true,
            "type": "boolean"
          },
          "mobile_app_session_ip_pinning": {
            "description": "Is mobile app session IP pinning enabled?",
            "example": true,
            "type": "boolean"
          },
          "mobile_app_session_lifetime": {
            "description": "Mobile app session lifetime (in hours)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "motd_text": {
            "description": "A message to show users when they connect via FTP or SFTP.",
            "example": "example",
            "type": "string"
          },
          "motd_use_for_ftp": {
            "description": "Show message to users connecting via FTP",
            "example": true,
            "type": "boolean"
          },
          "motd_use_for_sftp": {
            "description": "Show message to users connecting via SFTP",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "Site name",
            "example": "My Site",
            "type": "string"
          },
          "next_billing_amount": {
            "description": "Next billing amount",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "next_billing_date": {
            "description": "Next billing date",
            "example": "Apr 20",
            "type": "string"
          },
          "non_sso_groups_allowed": {
            "description": "If true, groups can be manually created / modified / deleted by Site Admins. Otherwise, groups can only be managed via your SSO provider.",
            "example": true,
            "type": "boolean"
          },
          "non_sso_users_allowed": {
            "description": "If true, users can be manually created / modified / deleted by Site Admins. Otherwise, users can only be managed via your SSO provider.",
            "example": true,
            "type": "boolean"
          },
          "office_integration_available": {
            "description": "If true, allows users to use a document editing integration.",
            "example": true,
            "type": "boolean"
          },
          "office_integration_type": {
            "description": "Which document editing integration to support. Files.com Editor or Microsoft Office for the Web.",
            "enum": [
              "only_office",
              "office_365",
              "disabled"
            ],
            "example": "example",
            "type": "string"
          },
          "oncehub_link": {
            "description": "Link to scheduling a meeting with our Sales team",
            "example": "https://go.oncehub.com/files",
            "type": "string"
          },
          "opt_out_global": {
            "description": "Use servers in the USA only?",
            "example": true,
            "type": "boolean"
          },
          "overdue": {
            "description": "Is this site's billing overdue?",
            "example": true,
            "type": "boolean"
          },
          "password_min_length": {
            "description": "Shortest password length for users",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "password_require_letter": {
            "description": "Require a letter in passwords?",
            "example": true,
            "type": "boolean"
          },
          "password_require_mixed": {
            "description": "Require lower and upper case letters in passwords?",
            "example": true,
            "type": "boolean"
          },
          "password_require_number": {
            "description": "Require a number in passwords?",
            "example": true,
            "type": "boolean"
          },
          "password_require_special": {
            "description": "Require special characters in password?",
            "example": true,
            "type": "boolean"
          },
          "password_require_unbreached": {
            "description": "Require passwords that have not been previously breached? (see https://haveibeenpwned.com/)",
            "example": true,
            "type": "boolean"
          },
          "password_requirements_apply_to_bundles": {
            "description": "Require bundles' passwords, and passwords for other items (inboxes, public shares, etc.) to conform to the same requirements as users' passwords?",
            "example": true,
            "type": "boolean"
          },
          "password_validity_days": {
            "description": "Number of days password is valid",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "phone": {
            "description": "Site phone number",
            "example": "555-555-5555",
            "type": "string"
          },
          "pin_all_remote_servers_to_site_region": {
            "description": "If true, we will ensure that all internal communications with any remote server are made through the primary region of the site. This setting overrides individual remote server settings.",
            "example": true,
            "type": "boolean"
          },
          "prevent_root_permissions_for_non_site_admins": {
            "description": "If true, we will prevent non-administrators from receiving any permissions directly on the root folder.  This is commonly used to prevent the accidental application of permissions.",
            "example": true,
            "type": "boolean"
          },
          "protocol_access_groups_only": {
            "description": "If true, protocol access permissions on users will be ignored, and only protocol access permissions set on Groups will be honored.  Make sure that your current user is a member of a group with API permission when changing this value to avoid locking yourself out of your site.",
            "example": false,
            "type": "boolean"
          },
          "reply_to_email": {
            "description": "Reply-to email for this site",
            "example": "example",
            "format": "email",
            "type": "string"
          },
          "require_2fa": {
            "description": "Require two-factor authentication for all users?",
            "example": true,
            "type": "boolean"
          },
          "require_2fa_stop_time": {
            "description": "If set, requirement for two-factor authentication has been scheduled to end on this date-time.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "require_2fa_user_type": {
            "description": "What type of user is required to use two-factor authentication (when require_2fa is set to `true` for this site)?",
            "enum": [
              "all",
              "folder_and_site_admins",
              "site_admins"
            ],
            "example": "`site_admins`",
            "type": "string"
          },
          "require_logout_from_bundles_and_inboxes": {
            "description": "If true, we will hide the 'Remember Me' box on Inbox and Bundle registration pages, requiring that the user logout and log back in every time they visit the page.",
            "example": false,
            "type": "boolean"
          },
          "session": {
            "$ref": "#/components/schemas/SessionEntity",
            "description": "Current session",
            "example": {
              "allowed_2fa_method_sms": true,
              "allowed_2fa_method_totp": true,
              "allowed_2fa_method_webauthn": true,
              "allowed_2fa_method_yubi": true,
              "calculate_file_checksums_crc32": true,
              "calculate_file_checksums_md5": true,
              "calculate_file_checksums_sha1": true,
              "calculate_file_checksums_sha256": true,
              "home_path": "example",
              "id": "60525f92e859c4c3d74cb02fd176b1525901b525",
              "language": "en",
              "legacy_checksums_mode": true,
              "login_token": "@tok-randomcode",
              "login_token_domain": "https://mysite.files.com",
              "max_dir_listing_size": 1,
              "multiple_regions": true,
              "read_only": true,
              "root_path": "example",
              "sftp_insecure_ciphers": false,
              "site_id": 1,
              "ssl_required": true,
              "timeout_at": "2000-01-01T01:00:00Z",
              "tls_disabled": false,
              "two_factor_setup_needed": false,
              "use_provided_modified_at": true,
              "user_belongs_to_parent_site": false,
              "windows_mode_ftp": false
            }
          },
          "session_expiry": {
            "description": "Session expiry in hours",
            "example": 6,
            "format": "double",
            "type": "number"
          },
          "session_expiry_minutes": {
            "description": "Session expiry in minutes",
            "example": 360,
            "format": "int32",
            "type": "integer"
          },
          "sftp_enabled": {
            "description": "Is SFTP enabled?",
            "example": true,
            "type": "boolean"
          },
          "sftp_host_key_type": {
            "description": "Sftp Host Key Type",
            "enum": [
              "default",
              "exavault",
              "custom",
              "smartfile"
            ],
            "example": "default",
            "type": "string"
          },
          "sftp_insecure_ciphers": {
            "description": "If true, we will allow weak and known insecure ciphers to be used for SFTP connections.  Enabling this setting severely weakens the security of your site and it is not recommend, except as a last resort for compatibility.",
            "example": false,
            "type": "boolean"
          },
          "sftp_insecure_diffie_hellman": {
            "description": "If true, we will allow weak Diffie Hellman parameters to be used within ciphers for SFTP that are otherwise on our secure list.  This has the effect of making the cipher weaker than our normal threshold for security, but is required to support certain legacy or broken SSH and MFT clients.  Enabling this weakens security, but not nearly as much as enabling the full `sftp_insecure_ciphers` option.",
            "example": false,
            "type": "boolean"
          },
          "sftp_user_root_enabled": {
            "description": "Use user FTP roots also for SFTP?",
            "example": false,
            "type": "boolean"
          },
          "sharing_enabled": {
            "description": "Allow bundle creation",
            "example": true,
            "type": "boolean"
          },
          "show_request_access_link": {
            "description": "Show request access link for users without access?  Currently unused.",
            "example": true,
            "type": "boolean"
          },
          "show_user_notifications_log_in_link": {
            "description": "Show log in link in user notifications?",
            "example": true,
            "type": "boolean"
          },
          "site_footer": {
            "description": "Custom site footer text",
            "example": "example",
            "type": "string"
          },
          "site_header": {
            "description": "Custom site header text",
            "example": "example",
            "type": "string"
          },
          "smtp_address": {
            "description": "SMTP server hostname or IP",
            "example": "smtp.my-mail-server.com",
            "type": "string"
          },
          "smtp_authentication": {
            "description": "SMTP server authentication type",
            "example": "plain",
            "type": "string"
          },
          "smtp_from": {
            "description": "From address to use when mailing through custom SMTP",
            "example": "me@my-mail-server.com",
            "type": "string"
          },
          "smtp_port": {
            "description": "SMTP server port",
            "example": 25,
            "format": "int32",
            "type": "integer"
          },
          "smtp_username": {
            "description": "SMTP server username",
            "example": "mail",
            "type": "string"
          },
          "ssl_required": {
            "description": "Is SSL required?  Disabling this is insecure.",
            "example": true,
            "type": "boolean"
          },
          "subdomain": {
            "description": "Site subdomain",
            "example": "mysite",
            "type": "string"
          },
          "switch_to_plan_date": {
            "description": "If switching plans, when does the new plan take effect?",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "tls_disabled": {
            "description": "DO NOT ENABLE. This setting allows TLSv1.0 and TLSv1.1 to be used on your site.  We intend to remove this capability entirely in early 2024.  If set, the `sftp_insecure_ciphers` flag will be automatically set to true.",
            "example": false,
            "type": "boolean"
          },
          "trial_days_left": {
            "description": "Number of days left in trial",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "trial_until": {
            "description": "When does this Site trial expire?",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "uploads_via_email_authentication": {
            "description": "Do incoming emails in the Inboxes require checking for SPF/DKIM/DMARC?",
            "example": true,
            "type": "boolean"
          },
          "use_dedicated_ips_for_smtp": {
            "description": "If using custom SMTP, should we use dedicated IPs to deliver emails?",
            "example": true,
            "type": "boolean"
          },
          "use_provided_modified_at": {
            "description": "Allow uploaders to set `provided_modified_at` for uploaded files?",
            "example": true,
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity",
            "description": "User of current session",
            "example": {
              "active_2fa": true,
              "admin_group_ids": [
                1
              ],
              "allowed_ips": "10.0.0.0/8\n127.0.0.1",
              "api_keys_count": 1,
              "attachments_permission": true,
              "authenticate_until": "2000-01-01T01:00:00Z",
              "authentication_method": "password",
              "avatar_url": "example",
              "billable": true,
              "billing_permission": false,
              "bypass_inactive_disable": false,
              "bypass_site_allowed_ips": false,
              "company": "ACME Corp.",
              "created_at": "2000-01-01T01:00:00Z",
              "dav_permission": true,
              "days_remaining_until_password_expire": 1,
              "disabled": true,
              "disabled_expired_or_inactive": true,
              "email": "example",
              "externally_managed": true,
              "first_login_at": "2000-01-01T01:00:00Z",
              "ftp_permission": true,
              "group_ids": "example",
              "header_text": "User-specific message.",
              "id": 1,
              "language": "en",
              "last_active_at": "2000-01-01T01:00:00Z",
              "last_api_use_at": "2000-01-01T01:00:00Z",
              "last_dav_login_at": "2000-01-01T01:00:00Z",
              "last_desktop_login_at": "2000-01-01T01:00:00Z",
              "last_ftp_login_at": "2000-01-01T01:00:00Z",
              "last_login_at": "2000-01-01T01:00:00Z",
              "last_protocol_cipher": "example",
              "last_restapi_login_at": "2000-01-01T01:00:00Z",
              "last_sftp_login_at": "2000-01-01T01:00:00Z",
              "last_web_login_at": "2000-01-01T01:00:00Z",
              "lockout_expires": "2000-01-01T01:00:00Z",
              "name": "John Doe",
              "notes": "Internal notes on this user.",
              "notification_daily_send_time": 18,
              "office_integration_enabled": true,
              "password_expire_at": "2000-01-01T01:00:00Z",
              "password_expired": true,
              "password_set_at": "2000-01-01T01:00:00Z",
              "password_validity_days": 1,
              "public_keys_count": 1,
              "readonly_site_admin": true,
              "receive_admin_alerts": true,
              "require_2fa": "always_require",
              "require_login_by": "2000-01-01T01:00:00Z",
              "require_password_change": true,
              "restapi_permission": true,
              "self_managed": true,
              "sftp_permission": true,
              "site_admin": true,
              "site_id": 1,
              "skip_welcome_screen": true,
              "ssl_required": "always_require",
              "sso_strategy_id": 1,
              "subscribe_to_newsletter": true,
              "time_zone": "Pacific Time (US & Canada)",
              "type_of_2fa": "yubi",
              "type_of_2fa_for_display": "yubi",
              "updated_at": "2000-01-01T01:00:00Z",
              "user_home": "example",
              "user_root": "example",
              "username": "user"
            }
          },
          "user_lockout": {
            "description": "Will users be locked out after incorrect login attempts?",
            "example": true,
            "type": "boolean"
          },
          "user_lockout_lock_period": {
            "description": "How many hours to lock user out for failed password?",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_lockout_tries": {
            "description": "Number of login tries within `user_lockout_within` hours before users are locked out",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "user_lockout_within": {
            "description": "Number of hours for user lockout window",
            "example": 6,
            "format": "int32",
            "type": "integer"
          },
          "user_requests_enabled": {
            "description": "Enable User Requests feature",
            "example": true,
            "type": "boolean"
          },
          "user_requests_notify_admins": {
            "description": "Send email to site admins when a user request is received?",
            "example": true,
            "type": "boolean"
          },
          "users_can_create_api_keys": {
            "description": "Allow users to create their own API keys?",
            "example": true,
            "type": "boolean"
          },
          "users_can_create_ssh_keys": {
            "description": "Allow users to create their own SSH keys?",
            "example": true,
            "type": "boolean"
          },
          "welcome_custom_text": {
            "description": "Custom text send in user welcome email",
            "example": "Welcome to my site!",
            "type": "string"
          },
          "welcome_email_cc": {
            "description": "Include this email in welcome emails if enabled",
            "example": "example",
            "format": "email",
            "type": "string"
          },
          "welcome_email_enabled": {
            "description": "Will the welcome email be sent to new users?",
            "example": true,
            "type": "boolean"
          },
          "welcome_email_subject": {
            "description": "Include this email subject in welcome emails if enabled",
            "example": "example",
            "type": "string"
          },
          "welcome_screen": {
            "description": "Does the welcome screen appear?",
            "enum": [
              "enabled",
              "hidden",
              "disabled"
            ],
            "example": "user_controlled",
            "type": "string"
          },
          "windows_mode_ftp": {
            "description": "Does FTP user Windows emulation mode?",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "A Site is the place you'll come to update site settings, as well as manage site-wide API keys.\n\nMost site settings can be set via the API.\n"
      },
      "SnapshotEntity": {
        "description": "SnapshotEntity model",
        "properties": {
          "bundle_id": {
            "description": "The bundle using this snapshot, if applicable.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "expires_at": {
            "description": "When the snapshot expires.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "finalized_at": {
            "description": "When the snapshot was finalized.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The snapshot's unique ID.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "A name for the snapshot.",
            "example": "My Snapshot",
            "type": "string"
          },
          "user_id": {
            "description": "The user that created this snapshot, if applicable.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "Snapshots allow you to create a read-only archive of files at a specific point in time. You can define a snapshot, add files to it, and then finalize it. Once finalized, the snapshot\u2019s contents are immutable.\n\nEach snapshot may have an expiration date. When the expiration date is reached, the snapshot is automatically deleted from the Files.com platform.\n"
      },
      "SsoStrategyEntity": {
        "description": "SsoStrategyEntity model",
        "properties": {
          "deprovision_behavior": {
            "description": "Method used for deprovisioning users.",
            "enum": [
              "disable",
              "delete"
            ],
            "example": "disable",
            "type": "string"
          },
          "deprovision_groups": {
            "description": "Auto-deprovision group membership based on group memberships on the SSO side?",
            "example": false,
            "type": "boolean"
          },
          "deprovision_users": {
            "description": "Auto-deprovision users?",
            "example": false,
            "type": "boolean"
          },
          "enabled": {
            "description": "Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.",
            "example": true,
            "type": "boolean"
          },
          "id": {
            "description": "ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "label": {
            "description": "Custom label for the SSO provider on the login page.",
            "example": "My Corporate SSO Provider",
            "type": "string"
          },
          "ldap_base_dn": {
            "description": "Base DN for looking up users in LDAP server",
            "example": "example",
            "type": "string"
          },
          "ldap_domain": {
            "description": "Domain name that will be appended to LDAP usernames",
            "example": "mysite.com",
            "type": "string"
          },
          "ldap_host": {
            "description": "LDAP host",
            "example": "ldap.site.com",
            "type": "string"
          },
          "ldap_host_2": {
            "description": "LDAP backup host",
            "example": "ldap2.site.com",
            "type": "string"
          },
          "ldap_host_3": {
            "description": "LDAP backup host",
            "example": "ldap3.site.com",
            "type": "string"
          },
          "ldap_port": {
            "description": "LDAP port",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "ldap_secure": {
            "description": "Use secure LDAP?",
            "example": true,
            "type": "boolean"
          },
          "ldap_username": {
            "description": "Username for signing in to LDAP server.",
            "example": "[ldap username]",
            "type": "string"
          },
          "ldap_username_field": {
            "description": "LDAP username field",
            "enum": [
              "sAMAccountName",
              "userPrincipalName"
            ],
            "example": "sAMAccountName",
            "type": "string"
          },
          "logo_url": {
            "description": "URL holding a custom logo for the SSO provider on the login page.",
            "example": "https://mysite.files.com/.../logo.png",
            "type": "string"
          },
          "protocol": {
            "description": "SSO Protocol",
            "enum": [
              "oauth2",
              "saml",
              "active_directory",
              "open_ldap",
              "scim"
            ],
            "example": "oauth2",
            "type": "string"
          },
          "provider": {
            "description": "Provider name",
            "enum": [
              "google",
              "auth0",
              "okta",
              "azure",
              "box",
              "dropbox",
              "slack",
              "onelogin",
              "saml",
              "idaptive",
              "ldap",
              "scim",
              "jumpcloud"
            ],
            "example": "okta",
            "type": "string"
          },
          "provider_identifier": {
            "description": "URL-friendly, unique identifier for Azure SAML configuration",
            "example": "provider_identifier",
            "type": "string"
          },
          "provision_attachments_permission": {
            "example": true,
            "type": "boolean"
          },
          "provision_company": {
            "description": "Default company for auto provisioned users.",
            "example": "ACME Corp.",
            "type": "string"
          },
          "provision_dav_permission": {
            "description": "Auto-provisioned users get WebDAV permission?",
            "example": true,
            "type": "boolean"
          },
          "provision_email_signup_groups": {
            "description": "Comma-separated list of group names whose members will be created with email_signup authentication.",
            "example": "Employees",
            "type": "string"
          },
          "provision_ftp_permission": {
            "description": "Auto-provisioned users get FTP permission?",
            "example": true,
            "type": "boolean"
          },
          "provision_group_admin_groups": {
            "description": "Comma-separated list of group names whose members will be provisioned as Group Admins.",
            "example": "Employees",
            "type": "string"
          },
          "provision_group_default": {
            "description": "Comma-separated list of group names for groups to automatically add all auto-provisioned users to.",
            "example": "Employees",
            "type": "string"
          },
          "provision_group_exclusion": {
            "description": "Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.",
            "example": "Employees",
            "type": "string"
          },
          "provision_group_inclusion": {
            "description": "Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.",
            "example": "Employees",
            "type": "string"
          },
          "provision_group_required": {
            "description": "Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.",
            "example": "example",
            "type": "string"
          },
          "provision_groups": {
            "description": "Auto-provision group membership based on group memberships on the SSO side?",
            "example": false,
            "type": "boolean"
          },
          "provision_require_2fa": {
            "description": "2FA required setting for auto provisioned users.",
            "enum": [
              "use_system_setting",
              "always_require",
              "never_require"
            ],
            "example": "always_require",
            "type": "string"
          },
          "provision_sftp_permission": {
            "description": "Auto-provisioned users get SFTP permission?",
            "example": true,
            "type": "boolean"
          },
          "provision_site_admin_groups": {
            "description": "Comma-separated list of group names whose members will be created as Site Admins.",
            "example": "Employees",
            "type": "string"
          },
          "provision_time_zone": {
            "description": "Default time zone for auto provisioned users.",
            "example": "Eastern Time (US & Canada)",
            "type": "string"
          },
          "provision_users": {
            "description": "Auto-provision users?",
            "example": false,
            "type": "boolean"
          },
          "saml_provider_cert_fingerprint": {
            "description": "Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.",
            "example": "example",
            "type": "string"
          },
          "saml_provider_issuer_url": {
            "description": "Identity provider issuer url",
            "example": "example",
            "type": "string"
          },
          "saml_provider_metadata_content": {
            "description": "Custom identity provider metadata",
            "example": "example",
            "type": "string"
          },
          "saml_provider_metadata_url": {
            "description": "Metadata URL for the SAML identity provider",
            "example": "example",
            "type": "string"
          },
          "saml_provider_slo_target_url": {
            "description": "Identity provider SLO endpoint",
            "example": "example",
            "type": "string"
          },
          "saml_provider_sso_target_url": {
            "description": "Identity provider SSO endpoint if saml_provider_metadata_url is not available.",
            "example": "example",
            "type": "string"
          },
          "scim_authentication_method": {
            "description": "SCIM authentication type.",
            "enum": [
              "none",
              "basic",
              "token"
            ],
            "example": "example",
            "type": "string"
          },
          "scim_oauth_access_token": {
            "description": "SCIM OAuth Access Token.",
            "example": "example",
            "type": "string"
          },
          "scim_oauth_access_token_expires_at": {
            "description": "SCIM OAuth Access Token Expiration Time.",
            "example": "example",
            "type": "string"
          },
          "scim_username": {
            "description": "SCIM username.",
            "example": "example",
            "type": "string"
          },
          "subdomain": {
            "description": "Subdomain",
            "example": "my-site",
            "type": "string"
          },
          "user_count": {
            "description": "Count of users with this SSO Strategy",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "An SSOStrategy is a way for users to sign in via another identity provider, such as Okta or Auth0.\n\nIt is rare that you will need to use API endpoints for managing these, and we recommend instead managing these via the web interface.\nNevertheless, we share the API documentation here.\n"
      },
      "StatusEntity": {
        "description": "StatusEntity model",
        "properties": {
          "clickwrap_body": {
            "description": "Required Clickwrap body",
            "example": "example",
            "type": "string"
          },
          "clickwrap_id": {
            "description": "Required Clickwrap id",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "code": {
            "description": "Status HTTP code",
            "example": 200,
            "format": "int32",
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/AutoEntity",
            "description": "Additional data",
            "example": "example"
          },
          "errors": {
            "description": "A list of api errors",
            "example": [
              {
                "fields": [],
                "messages": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ErrorsEntity"
            },
            "type": "array"
          },
          "message": {
            "description": "Error message",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status message",
            "example": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": null
      },
      "StyleEntity": {
        "description": "StyleEntity model",
        "properties": {
          "id": {
            "description": "Style ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "logo": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Logo",
            "example": "https://mysite.files.com/..."
          },
          "path": {
            "description": "Folder path",
            "example": "example",
            "type": "string"
          },
          "thumbnail": {
            "$ref": "#/components/schemas/ImageEntity",
            "description": "Logo thumbnail",
            "example": "example"
          }
        },
        "type": "object",
        "x-docs": "A Style is a custom set of branding that can be applied on a per-folder basis.\nCurrently these only support Logos per folder, but in the future we may extend these to also support colors.\nIf you want to see that, please let us know so we can add your vote to the list.\n"
      },
      "SyncLogEntity": {
        "description": "SyncLogEntity model",
        "properties": {
          "error_type": {
            "description": "Error type, if applicable",
            "example": "example",
            "type": "string"
          },
          "external_event_id": {
            "description": "External Event ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "file_type": {
            "description": "File type",
            "example": "example",
            "type": "string"
          },
          "message": {
            "description": "Message",
            "example": "example",
            "type": "string"
          },
          "operation": {
            "description": "Operation type",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "File path",
            "example": "example",
            "type": "string"
          },
          "size": {
            "description": "File size",
            "example": "example",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "example": "example",
            "type": "string"
          },
          "sync_id": {
            "description": "Sync ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A SyncLog is an audit log for monitoring and troubleshooting operations made by Remote Server Sync.\n"
      },
      "UsageDailySnapshotEntity": {
        "description": "UsageDailySnapshotEntity model",
        "properties": {
          "api_usage_available": {
            "description": "True if the API usage fields `read_api_usage` and `write_api_usage` can be relied upon.  If this is false, we suggest hiding that value from any UI.",
            "example": true,
            "type": "boolean"
          },
          "current_storage": {
            "description": "GB of Files Native Storage used on this day.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "date": {
            "description": "The date of this usage record",
            "example": "2000-01-01T01:00:00Z",
            "format": "date",
            "type": "string"
          },
          "deleted_files_counted_in_minimum": {
            "description": "GB of Files Native Storage used on this day for files that have been permanently deleted but were uploaded less than 30 days ago, and are still billable.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "deleted_files_storage": {
            "description": "GB of Files Native Storage used on this day for files that have been deleted and are stored as backups.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "ID of the usage record",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "read_api_usage": {
            "description": "Read API Calls used on this day. Note: only updated for days before the current day.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "root_storage": {
            "description": "GB of Files Native Storage used for the root folder.  Included here because this value will not be part of `usage_by_top_level_dir`",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "usage_by_top_level_dir": {
            "description": "Usage broken down by each top-level folder",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          },
          "user_count": {
            "description": "Number of billable users as of this day.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "write_api_usage": {
            "description": "Write API Calls used on this day. Note: only updated for days before the current day.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A UsageDailySnapshot is a detailed site-wide usage report for the day. Includes information about users, API, and storage.\n"
      },
      "UsageSnapshotEntity": {
        "description": "UsageSnapshotEntity model",
        "properties": {
          "bytes_sent": {
            "description": "Transfer Usage for period - Outbound GB from Files Native Storage",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "current_storage": {
            "description": "Current total Storage Usage GB as of end date (not necessarily high water mark, which is used for billing)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "deleted_files_counted_in_minimum": {
            "description": "Storage Usage for files that are deleted but uploaded within last 30 days as of end date (not necessarily high water mark, which is used for billing)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "deleted_files_storage": {
            "description": "Storage Usage for files that are deleted but retained as backups as of end date (not necessarily high water mark, which is used for billing)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "end_at": {
            "description": "Usage snapshot end date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "high_water_storage": {
            "description": "Highest Storage Usage GB recorded in time period (used for billing)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "high_water_user_count": {
            "description": "Highest user count number in time period",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "Usage snapshot ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "root_storage": {
            "description": "Storage Usage for root folder as of end date (not necessarily high water mark, which is used for billing)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "start_at": {
            "description": "Usage snapshot start date/time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "sync_bytes_received": {
            "description": "Transfer Usage for period - Inbound GB to Remote Servers (Sync/Mount)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "sync_bytes_sent": {
            "description": "Transfer Usage for period - Outbound GB from Remote Servers (Sync/Mount)",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "total_billable_transfer_usage": {
            "description": "Transfer usage for period - Total Billable amount",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "total_billable_usage": {
            "description": "Storage + Transfer Usage - Total Billable amount",
            "example": 1,
            "format": "double",
            "type": "number"
          },
          "usage_by_top_level_dir": {
            "description": "Storage Usage - map of root folders to their usage as of end date (not necessarily high water mark, which is used for billing)",
            "example": {
              "key": "example value"
            },
            "type": "object",
            "x-object-type": {
              "key_type": "string",
              "type": "hash",
              "value_type": "string"
            }
          }
        },
        "type": "object",
        "x-docs": "A UsageSnapshot is a site-wide utilization report of storage, bandwidth, APIs, and user accounts of your Files.com site for the given time period.\n"
      },
      "UserCipherUseEntity": {
        "description": "UserCipherUseEntity model",
        "properties": {
          "created_at": {
            "description": "The earliest recorded use of this combination of interface and protocol and cipher (for this user)",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "UserCipherUse ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "insecure": {
            "description": "Is this cipher considered insecure?",
            "example": true,
            "type": "boolean"
          },
          "interface": {
            "description": "The interface accessed",
            "enum": [
              "web",
              "ftp",
              "sftp",
              "dav",
              "desktop",
              "restapi",
              "robot",
              "jsapi"
            ],
            "example": "restapi",
            "type": "string"
          },
          "protocol_cipher": {
            "description": "The protocol and cipher employed",
            "example": "TLSv1.2; ECDHE-RSA-AES256-GCM-SHA384",
            "type": "string"
          },
          "updated_at": {
            "description": "The most recent use of this combination of interface and protocol and cipher (for this user)",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "user_id": {
            "description": "ID of the user who performed this access",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A UserCipherUse is a way to see the exact set of encryption ciphers and protocols used by a given user.\nThis is most often used to support migrations from one TLS version to the next.  You can query each user and determine who is still using legacy ciphers.\n"
      },
      "UserEntity": {
        "description": "UserEntity model",
        "properties": {
          "active_2fa": {
            "description": "Is 2fa active for the user?",
            "example": true,
            "type": "boolean"
          },
          "admin_group_ids": {
            "description": "List of group IDs of which this user is an administrator",
            "example": [
              1
            ],
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "allowed_ips": {
            "description": "A list of allowed IPs if applicable.  Newline delimited",
            "example": "10.0.0.0/8\n127.0.0.1",
            "type": "string"
          },
          "api_keys_count": {
            "description": "Number of API keys associated with this user",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "attachments_permission": {
            "description": "If `true`, the user can user create Bundles (aka Share Links). Use the bundle permission instead.",
            "example": true,
            "type": "boolean"
          },
          "authenticate_until": {
            "description": "Scheduled Date/Time at which user will be deactivated",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "authentication_method": {
            "description": "How is this user authenticated?",
            "enum": [
              "password",
              "sso",
              "none",
              "email_signup",
              "password_with_imported_hash",
              "password_and_ssh_key"
            ],
            "example": "password",
            "type": "string"
          },
          "avatar_url": {
            "description": "URL holding the user's avatar",
            "example": "example",
            "type": "string"
          },
          "billable": {
            "description": "Is this a billable user record?",
            "example": true,
            "type": "boolean"
          },
          "billing_permission": {
            "description": "Allow this user to perform operations on the account, payments, and invoices?",
            "example": false,
            "type": "boolean"
          },
          "bypass_inactive_disable": {
            "description": "Exempt this user from being disabled based on inactivity?",
            "example": false,
            "type": "boolean"
          },
          "bypass_site_allowed_ips": {
            "description": "Allow this user to skip site-wide IP blacklists?",
            "example": false,
            "type": "boolean"
          },
          "company": {
            "description": "User's company",
            "example": "ACME Corp.",
            "type": "string"
          },
          "created_at": {
            "description": "When this user was created",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "dav_permission": {
            "description": "Can the user connect with WebDAV?",
            "example": true,
            "type": "boolean"
          },
          "days_remaining_until_password_expire": {
            "description": "Number of days remaining until password expires",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "disabled": {
            "description": "Is user disabled? Disabled users cannot log in, and do not count for billing purposes. Users can be automatically disabled after an inactivity period via a Site setting or schedule to be deactivated after specific date.",
            "example": true,
            "type": "boolean"
          },
          "disabled_expired_or_inactive": {
            "description": "Computed property that returns true if user disabled or expired or inactive.",
            "example": true,
            "type": "boolean"
          },
          "email": {
            "description": "User email address",
            "example": "example",
            "format": "email",
            "type": "string"
          },
          "externally_managed": {
            "description": "Is this user managed by a SsoStrategy?",
            "example": true,
            "type": "boolean"
          },
          "first_login_at": {
            "description": "User's first login time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "ftp_permission": {
            "description": "Can the user access with FTP/FTPS?",
            "example": true,
            "type": "boolean"
          },
          "group_ids": {
            "description": "Comma-separated list of group IDs of which this user is a member",
            "example": "example",
            "type": "string"
          },
          "header_text": {
            "description": "Text to display to the user in the header of the UI",
            "example": "User-specific message.",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "language": {
            "description": "Preferred language",
            "example": "en",
            "type": "string"
          },
          "last_active_at": {
            "description": "User's most recent activity time, which is the latest of most recent login, most recent API use, enablement, or creation",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_api_use_at": {
            "description": "User's most recent API use time",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_dav_login_at": {
            "description": "User's most recent login time via WebDAV",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_desktop_login_at": {
            "description": "User's most recent login time via Desktop app",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_ftp_login_at": {
            "description": "User's most recent login time via FTP",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_login_at": {
            "description": "User's most recent login time via any protocol",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_protocol_cipher": {
            "description": "The most recent protocol and cipher used",
            "example": "example",
            "type": "string"
          },
          "last_restapi_login_at": {
            "description": "User's most recent login time via Rest API",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_sftp_login_at": {
            "description": "User's most recent login time via SFTP",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "last_web_login_at": {
            "description": "User's most recent login time via web",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "lockout_expires": {
            "description": "Time in the future that the user will no longer be locked out if applicable",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "User's full name",
            "example": "John Doe",
            "type": "string"
          },
          "notes": {
            "description": "Any internal notes on the user",
            "example": "Internal notes on this user.",
            "type": "string"
          },
          "notification_daily_send_time": {
            "description": "Hour of the day at which daily notifications should be sent. Can be in range 0 to 23",
            "example": 18,
            "format": "int32",
            "type": "integer"
          },
          "office_integration_enabled": {
            "description": "Enable integration with Office for the web?",
            "example": true,
            "type": "boolean"
          },
          "password_expire_at": {
            "description": "Password expiration datetime",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "password_expired": {
            "description": "Is user's password expired?",
            "example": true,
            "type": "boolean"
          },
          "password_set_at": {
            "description": "Last time the user's password was set",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "password_validity_days": {
            "description": "Number of days to allow user to use the same password",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "public_keys_count": {
            "description": "Number of public keys associated with this user",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "readonly_site_admin": {
            "description": "Is the user an allowed to view all (non-billing) site configuration for this site?",
            "example": true,
            "type": "boolean"
          },
          "receive_admin_alerts": {
            "description": "Should the user receive admin alerts such a certificate expiration notifications and overages?",
            "example": true,
            "type": "boolean"
          },
          "require_2fa": {
            "description": "2FA required setting",
            "enum": [
              "use_system_setting",
              "always_require",
              "never_require"
            ],
            "example": "always_require",
            "type": "string"
          },
          "require_login_by": {
            "description": "Require user to login by specified date otherwise it will be disabled.",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "require_password_change": {
            "description": "Is a password change required upon next user login?",
            "example": true,
            "type": "boolean"
          },
          "restapi_permission": {
            "description": "Can this user access the Web app, Desktop app, SDKs, or REST API?  (All of these tools use the API internally, so this is one unified permission set.)",
            "example": true,
            "type": "boolean"
          },
          "self_managed": {
            "description": "Does this user manage it's own credentials or is it a shared/bot user?",
            "example": true,
            "type": "boolean"
          },
          "sftp_permission": {
            "description": "Can the user access with SFTP?",
            "example": true,
            "type": "boolean"
          },
          "site_admin": {
            "description": "Is the user an administrator for this site?",
            "example": true,
            "type": "boolean"
          },
          "site_id": {
            "description": "Site ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "skip_welcome_screen": {
            "description": "Skip Welcome page in the UI?",
            "example": true,
            "type": "boolean"
          },
          "ssl_required": {
            "description": "SSL required setting",
            "enum": [
              "use_system_setting",
              "always_require",
              "never_require"
            ],
            "example": "always_require",
            "type": "string"
          },
          "sso_strategy_id": {
            "description": "SSO (Single Sign On) strategy ID for the user, if applicable.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "subscribe_to_newsletter": {
            "description": "Is the user subscribed to the newsletter?",
            "example": true,
            "type": "boolean"
          },
          "time_zone": {
            "description": "User time zone",
            "example": "Pacific Time (US & Canada)",
            "type": "string"
          },
          "type_of_2fa": {
            "description": "Type(s) of 2FA methods in use, for programmatic use.  Will be either `sms`, `totp`, `webauthn`, `yubi`, `email`, or multiple values sorted alphabetically and joined by an underscore.  Does not specify whether user has more than one of a given method.",
            "example": "yubi",
            "type": "string"
          },
          "type_of_2fa_for_display": {
            "description": "Type(s) of 2FA methods in use, formatted for displaying in the UI.  Unlike `type_of_2fa`, this value will make clear when a user has more than 1 of the same type of method.",
            "example": "yubi",
            "type": "string"
          },
          "user_home": {
            "description": "Home folder for FTP/SFTP.  Note that this is not used for API, Desktop, or Web interface.",
            "example": "example",
            "type": "string"
          },
          "user_root": {
            "description": "Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set).  Note that this is not used for API, Desktop, or Web interface.",
            "example": "example",
            "type": "string"
          },
          "username": {
            "description": "User's username",
            "example": "user",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A User represents a human or system/service user with the ability to connect to Files.com via any of the available connectivity methods (unless restricted to specific protocols).\n\nUsers are associated with API Keys, SSH (SFTP) Keys, Notifications, Permissions, and Group memberships.\n\n\n## Authentication\n\nThe `authentication_method` property on a User determines exactly how that user can login and authenticate to their Files.com account. Files.com offers a variety of authentication methods to ensure flexibility, security, migration, and compliance.\n\nThese authentication methods can be configured during user creation and can be modified at any time by site administrators. The meanings of the available values are as follows:\n\n* `password` - Allows authentication via a password.  If API Keys or SSH (SFTP) Keys are also configured, those can be used *instead* of the password.  If Two Factor Authentication (2FA) methods are also configured, a valid 2nd factor is required in addition to the password.\n* `email_signup` - When set upon user creation, an email will be sent to the new user with a link for them to create their password. Once the user has created their password, their authentication type will change to `password`.\n* `sso` - Allows authentication via a linked Single Sign On provider.  If API Keys or SSH (SFTP) Keys are also configured, those can be used *instead* of Single Sign On.  If Two Factor Authentication (2FA) methods are also configured, a valid 2nd factor is required in addition to Single Sign On.  When using this method, you must also provide a valid `sso_strategy_id` to associate the User to the appropriate SSO provider.\n* `password_with_imported_hash` - Works like the `password` method but allows importing a hashed password in MD5, SHA-1, or SHA-256 format.  Provide the imported hash in the field `imported_password_hash`.  Upon first use, the password will be converted to Files.com's internal storage format and the authentication type will change to `password`. Typically only used when migrating to Files.com from another MFT solution.\n* `none` - Does not allow authentication via username and password, but does allow authentication via API Key or SSH (SFTP) Key.  Typically only used for service users.\n* `password_and_ssh_key` - Allows authentication only by providing a password and also a valid SSH (SFTP) Key in a single attempt.  If API Keys are also configured, those can be used *instead* of the password and key combination.  This method only works with (typically enterprise) SSH/SFTP clients capable of sending both authentication methods at once.  Typically only used for service users.\n"
      },
      "UserRequestEntity": {
        "description": "UserRequestEntity model",
        "properties": {
          "company": {
            "description": "User's company name",
            "example": "Acme Inc.",
            "type": "string"
          },
          "details": {
            "description": "Details of the user's request",
            "example": "Changed Departments",
            "type": "string"
          },
          "email": {
            "description": "User email address",
            "example": "example",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "User's full name",
            "example": "John Doe",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A UserRequest is an operation that allows anonymous users to place a request for access on the login screen to the site administrator.\n"
      },
      "UserSftpClientUseEntity": {
        "description": "UserSftpClientUseEntity model",
        "properties": {
          "created_at": {
            "description": "The earliest recorded use of this SFTP client (for this user)",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "UserSftpClientUse ID",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "sftp_client": {
            "description": "The SFTP client used",
            "example": "example",
            "type": "string"
          },
          "updated_at": {
            "description": "The most recent use of this SFTP client (for this user)",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "user_id": {
            "description": "ID of the user who performed this access",
            "example": 1,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-docs": "A UserSftpClientUse is a way to see the exact set of SFTP clients used by a given user.\n"
      },
      "WebDavActionLogEntity": {
        "description": "WebDavActionLogEntity model",
        "properties": {
          "action_type": {
            "description": "Action Type",
            "example": "example",
            "type": "string"
          },
          "auth_ciphers": {
            "description": "Authentication Ciphers",
            "example": "example",
            "type": "string"
          },
          "duration_ms": {
            "description": "Duration (in milliseconds)",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "entries_returned": {
            "description": "Number of entries returned when listing files and folders",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "http_method": {
            "description": "Method of the HTTP call.",
            "example": "example",
            "type": "string"
          },
          "http_path": {
            "description": "Path of the HTTP call.",
            "example": "example",
            "type": "string"
          },
          "http_response_code": {
            "description": "HTTP Response Code returned to the WebDAV Client.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name of File",
            "example": "example",
            "type": "string"
          },
          "path": {
            "description": "Path as sent by the Client (may not match Files.com path due to user root folders for WebDAV).",
            "example": "example",
            "type": "string"
          },
          "remote_ip": {
            "description": "IP Address of WebDAV Client",
            "example": "example",
            "type": "string"
          },
          "server_ip": {
            "description": "IP Address of WebDAV Server",
            "example": "example",
            "type": "string"
          },
          "size": {
            "description": "Size of File That was Uploaded or Downloaded.",
            "example": 1,
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "WebDAV Action status.",
            "example": "example",
            "type": "string"
          },
          "success": {
            "description": "Whether WebDAV Action was successful.",
            "example": true,
            "type": "boolean"
          },
          "timestamp": {
            "description": "Start Time of Action",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "true_path": {
            "description": "Path on Files.com",
            "example": "example",
            "type": "string"
          },
          "username": {
            "description": "Username",
            "example": "example",
            "type": "string"
          }
        },
        "type": "object",
        "x-docs": "A WebDAVActionLog is an audit log for monitoring and troubleshooting operations made to your site through WebDAV protocol.\n"
      },
      "WebhookTestEntity": {
        "description": "WebhookTestEntity model",
        "properties": {
          "code": {
            "description": "Status HTTP code",
            "example": 200,
            "format": "int32",
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/AutoEntity",
            "description": "Additional data",
            "example": "example"
          },
          "message": {
            "description": "Error message",
            "example": "",
            "type": "string"
          },
          "status": {
            "description": "Status message",
            "example": "",
            "type": "string"
          },
          "success": {
            "description": "The success status of the webhook test",
            "example": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-docs": "A WebhookTest is an object that can be sent to your Webhook endpoint for connection and response tests.\n"
      },
      "patchFormFieldSets": {
        "description": "Update Form Field Set",
        "properties": {
          "form_fields": {
            "items": {
              "properties": {
                "default_option": {
                  "description": "Default option to be preselected in the dropdown or radio.",
                  "type": "string"
                },
                "field_type": {
                  "description": "Type of field: text, text_area, dropdown, or radio",
                  "type": "string"
                },
                "help_text": {
                  "description": "Help text of field",
                  "type": "string"
                },
                "id": {
                  "description": "Id of existing Form Field",
                  "format": "int32",
                  "type": "integer"
                },
                "label": {
                  "description": "Label of Field",
                  "type": "string"
                },
                "options_for_select": {
                  "description": "List of options for dropdown or radio",
                  "type": "string"
                },
                "required": {
                  "description": "Is this a required field? (default true)",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "skip_company": {
            "description": "Skip validating company",
            "type": "boolean"
          },
          "skip_email": {
            "description": "Skip validating form email",
            "type": "boolean"
          },
          "skip_name": {
            "description": "Skip validating form name",
            "type": "boolean"
          },
          "title": {
            "description": "Title to be displayed",
            "type": "string"
          }
        },
        "type": "object"
      },
      "postFormFieldSets": {
        "description": "Create Form Field Set",
        "properties": {
          "form_fields": {
            "items": {
              "properties": {
                "default_option": {
                  "description": "Default option to be preselected in the dropdown or radio.",
                  "type": "string"
                },
                "field_type": {
                  "description": "Type of field: text, text_area, dropdown, or radio",
                  "type": "string"
                },
                "help_text": {
                  "description": "Help text of field",
                  "type": "string"
                },
                "id": {
                  "description": "Id of existing Form Field",
                  "format": "int32",
                  "type": "integer"
                },
                "label": {
                  "description": "Label of Field",
                  "type": "string"
                },
                "options_for_select": {
                  "description": "List of options for dropdown or radio",
                  "type": "string"
                },
                "required": {
                  "description": "Is this a required field? (default true)",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "skip_company": {
            "description": "Skip validating company",
            "type": "boolean"
          },
          "skip_email": {
            "description": "Skip validating form email",
            "type": "boolean"
          },
          "skip_name": {
            "description": "Skip validating form name",
            "type": "boolean"
          },
          "title": {
            "description": "Title to be displayed",
            "type": "string"
          },
          "user_id": {
            "description": "User ID.  Provide a value of `0` to operate the current session's user.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "api_key": {
        "description": "API Key - supports user-based or site-wide API keys",
        "in": "header",
        "name": "X-FilesAPI-Key",
        "type": "apiKey"
      }
    }
  },
  "tags": [
    {
      "description": "Operations about action_notification_exports",
      "name": "action_notification_exports"
    },
    {
      "description": "Operations about Action Notification Exports",
      "name": "Action Notification Exports"
    },
    {
      "description": "Operations about action_notification_export_results",
      "name": "action_notification_export_results"
    },
    {
      "description": "Operations about Action Notification Export Results",
      "name": "Action Notification Export Results"
    },
    {
      "description": "Operations about api_keys",
      "name": "api_key"
    },
    {
      "description": "Operations about API Keys",
      "name": "API Keys"
    },
    {
      "description": "Operations about api_keys",
      "name": "api_keys"
    },
    {
      "description": "Operations about sites",
      "name": "site"
    },
    {
      "description": "Operations about Usage Snapshots",
      "name": "Usage Snapshots"
    },
    {
      "description": "Operations about Sites",
      "name": "Sites"
    },
    {
      "description": "Operations about IP Addresses",
      "name": "IP Addresses"
    },
    {
      "description": "Operations about DNS Records",
      "name": "DNS Records"
    },
    {
      "description": "Operations about Statuses",
      "name": "Statuses"
    },
    {
      "description": "Operations about users",
      "name": "user"
    },
    {
      "description": "Operations about Users",
      "name": "Users"
    },
    {
      "description": "Operations about Public Keys",
      "name": "Public Keys"
    },
    {
      "description": "Operations about Group Users",
      "name": "Group Users"
    },
    {
      "description": "Operations about users",
      "name": "users"
    },
    {
      "description": "Operations about User SFTP Client Uses",
      "name": "User SFTP Client Uses"
    },
    {
      "description": "Operations about User Cipher Uses",
      "name": "User Cipher Uses"
    },
    {
      "description": "Operations about Permissions",
      "name": "Permissions"
    },
    {
      "description": "Operations about api_request_logs",
      "name": "api_request_logs"
    },
    {
      "description": "Operations about API Request Logs",
      "name": "API Request Logs"
    },
    {
      "description": "Operations about apps",
      "name": "apps"
    },
    {
      "description": "Operations about Apps",
      "name": "Apps"
    },
    {
      "description": "Operations about as2_incoming_messages",
      "name": "as2_incoming_messages"
    },
    {
      "description": "Operations about AS2 Incoming Messages",
      "name": "AS2 Incoming Messages"
    },
    {
      "description": "Operations about as2_outgoing_messages",
      "name": "as2_outgoing_messages"
    },
    {
      "description": "Operations about AS2 Outgoing Messages",
      "name": "AS2 Outgoing Messages"
    },
    {
      "description": "Operations about as2_partners",
      "name": "as2_partners"
    },
    {
      "description": "Operations about AS2 Partners",
      "name": "AS2 Partners"
    },
    {
      "description": "Operations about as2_stations",
      "name": "as2_stations"
    },
    {
      "description": "Operations about AS2 Stations",
      "name": "AS2 Stations"
    },
    {
      "description": "Operations about automations",
      "name": "automations"
    },
    {
      "description": "Operations about Automations",
      "name": "Automations"
    },
    {
      "description": "Operations about automation_logs",
      "name": "automation_logs"
    },
    {
      "description": "Operations about Automation Logs",
      "name": "Automation Logs"
    },
    {
      "description": "Operations about automation_runs",
      "name": "automation_runs"
    },
    {
      "description": "Operations about Automation Runs",
      "name": "Automation Runs"
    },
    {
      "description": "Operations about bandwidth_snapshots",
      "name": "bandwidth_snapshots"
    },
    {
      "description": "Operations about Bandwidth Snapshots",
      "name": "Bandwidth Snapshots"
    },
    {
      "description": "Operations about behaviors",
      "name": "behaviors"
    },
    {
      "description": "Operations about Behaviors",
      "name": "Behaviors"
    },
    {
      "description": "Operations about bundle_actions",
      "name": "bundle_actions"
    },
    {
      "description": "Operations about Bundle Actions",
      "name": "Bundle Actions"
    },
    {
      "description": "Operations about bundle_downloads",
      "name": "bundle_downloads"
    },
    {
      "description": "Operations about Bundle Downloads",
      "name": "Bundle Downloads"
    },
    {
      "description": "Operations about bundle_notifications",
      "name": "bundle_notifications"
    },
    {
      "description": "Operations about Bundle Notifications",
      "name": "Bundle Notifications"
    },
    {
      "description": "Operations about bundle_recipients",
      "name": "bundle_recipients"
    },
    {
      "description": "Operations about Bundle Recipients",
      "name": "Bundle Recipients"
    },
    {
      "description": "Operations about bundle_registrations",
      "name": "bundle_registrations"
    },
    {
      "description": "Operations about Bundle Registrations",
      "name": "Bundle Registrations"
    },
    {
      "description": "Operations about bundles",
      "name": "bundles"
    },
    {
      "description": "Operations about Bundles",
      "name": "Bundles"
    },
    {
      "description": "Operations about clickwraps",
      "name": "clickwraps"
    },
    {
      "description": "Operations about Clickwraps",
      "name": "Clickwraps"
    },
    {
      "description": "Operations about dns_records",
      "name": "dns_records"
    },
    {
      "description": "Operations about email_incoming_messages",
      "name": "email_incoming_messages"
    },
    {
      "description": "Operations about Email Incoming Messages",
      "name": "Email Incoming Messages"
    },
    {
      "description": "Operations about email_logs",
      "name": "email_logs"
    },
    {
      "description": "Operations about Email Logs",
      "name": "Email Logs"
    },
    {
      "description": "Operations about exavault_api_request_logs",
      "name": "exavault_api_request_logs"
    },
    {
      "description": "Operations about Exavault API Request Logs",
      "name": "Exavault API Request Logs"
    },
    {
      "description": "Operations about external_events",
      "name": "external_events"
    },
    {
      "description": "Operations about External Events",
      "name": "External Events"
    },
    {
      "description": "Operations about files",
      "name": "files"
    },
    {
      "description": "Operations about Files",
      "name": "Files"
    },
    {
      "description": "Operations about file_actions",
      "name": "file_actions"
    },
    {
      "description": "Operations about File Actions",
      "name": "File Actions"
    },
    {
      "description": "Operations about File Upload Parts",
      "name": "File Upload Parts"
    },
    {
      "description": "Operations about file_comments",
      "name": "file_comments"
    },
    {
      "description": "Operations about File Comments",
      "name": "File Comments"
    },
    {
      "description": "Operations about file_comment_reactions",
      "name": "file_comment_reactions"
    },
    {
      "description": "Operations about File Comment Reactions",
      "name": "File Comment Reactions"
    },
    {
      "description": "Operations about file_migrations",
      "name": "file_migrations"
    },
    {
      "description": "Operations about File Migrations",
      "name": "File Migrations"
    },
    {
      "description": "Operations about file_migration_logs",
      "name": "file_migration_logs"
    },
    {
      "description": "Operations about File Migration Logs",
      "name": "File Migration Logs"
    },
    {
      "description": "Operations about folders",
      "name": "folders"
    },
    {
      "description": "Operations about form_field_sets",
      "name": "form_field_sets"
    },
    {
      "description": "Operations about Form Field Sets",
      "name": "Form Field Sets"
    },
    {
      "description": "Operations about ftp_action_logs",
      "name": "ftp_action_logs"
    },
    {
      "description": "Operations about FTP Action Logs",
      "name": "FTP Action Logs"
    },
    {
      "description": "Operations about groups",
      "name": "groups"
    },
    {
      "description": "Operations about Groups",
      "name": "Groups"
    },
    {
      "description": "Operations about group_users",
      "name": "group_users"
    },
    {
      "description": "Operations about gpg_keys",
      "name": "gpg_keys"
    },
    {
      "description": "Operations about GPG Keys",
      "name": "GPG Keys"
    },
    {
      "description": "Operations about histories",
      "name": "history"
    },
    {
      "description": "Operations about Actions",
      "name": "Actions"
    },
    {
      "description": "Operations about history_exports",
      "name": "history_exports"
    },
    {
      "description": "Operations about History Exports",
      "name": "History Exports"
    },
    {
      "description": "Operations about history_export_results",
      "name": "history_export_results"
    },
    {
      "description": "Operations about History Export Results",
      "name": "History Export Results"
    },
    {
      "description": "Operations about inbox_recipients",
      "name": "inbox_recipients"
    },
    {
      "description": "Operations about Inbox Recipients",
      "name": "Inbox Recipients"
    },
    {
      "description": "Operations about inbox_registrations",
      "name": "inbox_registrations"
    },
    {
      "description": "Operations about Inbox Registrations",
      "name": "Inbox Registrations"
    },
    {
      "description": "Operations about inbox_uploads",
      "name": "inbox_uploads"
    },
    {
      "description": "Operations about Inbox Uploads",
      "name": "Inbox Uploads"
    },
    {
      "description": "Operations about invoices",
      "name": "invoices"
    },
    {
      "description": "Operations about Account Line Items",
      "name": "Account Line Items"
    },
    {
      "description": "Operations about ip_addresses",
      "name": "ip_addresses"
    },
    {
      "description": "Operations about Public IP Addresses",
      "name": "Public IP Addresses"
    },
    {
      "description": "Operations about locks",
      "name": "locks"
    },
    {
      "description": "Operations about Locks",
      "name": "Locks"
    },
    {
      "description": "Operations about messages",
      "name": "messages"
    },
    {
      "description": "Operations about Messages",
      "name": "Messages"
    },
    {
      "description": "Operations about message_comments",
      "name": "message_comments"
    },
    {
      "description": "Operations about Message Comments",
      "name": "Message Comments"
    },
    {
      "description": "Operations about message_comment_reactions",
      "name": "message_comment_reactions"
    },
    {
      "description": "Operations about Message Comment Reactions",
      "name": "Message Comment Reactions"
    },
    {
      "description": "Operations about message_reactions",
      "name": "message_reactions"
    },
    {
      "description": "Operations about Message Reactions",
      "name": "Message Reactions"
    },
    {
      "description": "Operations about notifications",
      "name": "notifications"
    },
    {
      "description": "Operations about Notifications",
      "name": "Notifications"
    },
    {
      "description": "Operations about outbound_connection_logs",
      "name": "outbound_connection_logs"
    },
    {
      "description": "Operations about Outbound Connection Logs",
      "name": "Outbound Connection Logs"
    },
    {
      "description": "Operations about payments",
      "name": "payments"
    },
    {
      "description": "Operations about permissions",
      "name": "permissions"
    },
    {
      "description": "Operations about priorities",
      "name": "priorities"
    },
    {
      "description": "Operations about Priorities",
      "name": "Priorities"
    },
    {
      "description": "Operations about projects",
      "name": "projects"
    },
    {
      "description": "Operations about Projects",
      "name": "Projects"
    },
    {
      "description": "Operations about public_hosting_request_logs",
      "name": "public_hosting_request_logs"
    },
    {
      "description": "Operations about Public Hosting Request Logs",
      "name": "Public Hosting Request Logs"
    },
    {
      "description": "Operations about public_keys",
      "name": "public_keys"
    },
    {
      "description": "Operations about remote_bandwidth_snapshots",
      "name": "remote_bandwidth_snapshots"
    },
    {
      "description": "Operations about Remote Bandwidth Snapshots",
      "name": "Remote Bandwidth Snapshots"
    },
    {
      "description": "Operations about remote_servers",
      "name": "remote_servers"
    },
    {
      "description": "Operations about Remote Server Configuration Files",
      "name": "Remote Server Configuration Files"
    },
    {
      "description": "Operations about Remote Servers",
      "name": "Remote Servers"
    },
    {
      "description": "Operations about requests",
      "name": "requests"
    },
    {
      "description": "Operations about Requests",
      "name": "Requests"
    },
    {
      "description": "Operations about sessions",
      "name": "sessions"
    },
    {
      "description": "Operations about Sessions",
      "name": "Sessions"
    },
    {
      "description": "Operations about settings_changes",
      "name": "settings_changes"
    },
    {
      "description": "Operations about Settings Changes",
      "name": "Settings Changes"
    },
    {
      "description": "Operations about sftp_action_logs",
      "name": "sftp_action_logs"
    },
    {
      "description": "Operations about SFTP Action Logs",
      "name": "SFTP Action Logs"
    },
    {
      "description": "Operations about sftp_host_keys",
      "name": "sftp_host_keys"
    },
    {
      "description": "Operations about SFTP Host Keys",
      "name": "SFTP Host Keys"
    },
    {
      "description": "Operations about share_groups",
      "name": "share_groups"
    },
    {
      "description": "Operations about Share Groups",
      "name": "Share Groups"
    },
    {
      "description": "Operations about siem_http_destinations",
      "name": "siem_http_destinations"
    },
    {
      "description": "Operations about SIEM HTTP Destinations",
      "name": "SIEM HTTP Destinations"
    },
    {
      "description": "Operations about snapshots",
      "name": "snapshots"
    },
    {
      "description": "Operations about Snapshots",
      "name": "Snapshots"
    },
    {
      "description": "Operations about sso_strategies",
      "name": "sso_strategies"
    },
    {
      "description": "Operations about SSO Strategies",
      "name": "SSO Strategies"
    },
    {
      "description": "Operations about styles",
      "name": "styles"
    },
    {
      "description": "Operations about Styles",
      "name": "Styles"
    },
    {
      "description": "Operations about sync_logs",
      "name": "sync_logs"
    },
    {
      "description": "Operations about Sync Logs",
      "name": "Sync Logs"
    },
    {
      "description": "Operations about usage_snapshots",
      "name": "usage_snapshots"
    },
    {
      "description": "Operations about usage_daily_snapshots",
      "name": "usage_daily_snapshots"
    },
    {
      "description": "Operations about Usage Daily Snapshots",
      "name": "Usage Daily Snapshots"
    },
    {
      "description": "Operations about user_cipher_uses",
      "name": "user_cipher_uses"
    },
    {
      "description": "Operations about user_requests",
      "name": "user_requests"
    },
    {
      "description": "Operations about User Requests",
      "name": "User Requests"
    },
    {
      "description": "Operations about user_sftp_client_uses",
      "name": "user_sftp_client_uses"
    },
    {
      "description": "Operations about web_dav_action_logs",
      "name": "web_dav_action_logs"
    },
    {
      "description": "Operations about WebDAV Action Logs",
      "name": "WebDAV Action Logs"
    },
    {
      "description": "Operations about webhook_tests",
      "name": "webhook_tests"
    },
    {
      "description": "Operations about Webhook Tests",
      "name": "Webhook Tests"
    }
  ],
  "x-behaviors": [
    {
      "behavior": "webhook",
      "can_be_non_recursive": true,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Sends an HTTP(S) request to a remote server whenever certain actions occur on a folder.\nWebhooks are often used to integrate Files.com with other services.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "Array of URLs to send the webhook to.",
          "example": [
            "https://mysite.com/url..."
          ],
          "name": "urls"
        },
        {
          "description": "Default: `GET`.  May also be set to `POST`.",
          "example": "POST",
          "name": "method"
        },
        {
          "description": "Leave blank to send webhooks on any action on this folder.  Or, for specific actions, you may specify an array of action types.  Valid values are: `create`, `read`, `update`, `destroy`, `move`, `copy`.",
          "example": [
            "create",
            "read",
            "update",
            "destroy",
            "move",
            "copy"
          ],
          "name": "triggers"
        },
        {
          "description": "Leave blank to trigger webhooks on any file in this folder.  Or you may specify an array of filenames (possibly with wildcards) to match for action path.",
          "example": [
            "*.pdf",
            "*so*.jpg"
          ],
          "name": "triggering_filenames"
        },
        {
          "description": "May be `JSON`, `XML`, `RAW`, `EV1`, or `EV2`.  If set to `RAW` or left blank, we will deliver the webhook using the HTTP GET params or POST body.  If JSON or XML, we will encode the payload accordingly and send a matching `Content-Type` header.  If set to EV1, we will encode the payload to emulate ExaVault's version 1 webhook format.  If set to EV2, we will encode the payload to emulate ExaVault's version 2.0 webhook format.",
          "example": "RAW",
          "name": "encoding"
        },
        {
          "description": "Hash of HTTP Headers to send.",
          "example": {
            "MY-HEADER": "foo"
          },
          "name": "headers"
        },
        {
          "description": "Hash of Body Params to send.",
          "example": {
            "MY_BODY_PARAM": "bar"
          },
          "name": "body"
        },
        {
          "description": "If provided, this token will be used to sign webhook messages cryptographically to allow you to verify the webhook authenticity.",
          "example": "tok12345",
          "name": "verification_token"
        },
        {
          "description": "A string specifying the name of a form field containing the contents of the file that triggered this webhook send. If this value is present, the webhook will submit a `multipart/form-data` POST with no request body encoding.",
          "example": "my_form_field",
          "name": "file_form_field"
        },
        {
          "description": "When sending webhook requests, submit the contents of the file that triggered this webhook send as the request body.",
          "example": "my_file_body",
          "name": "file_as_body"
        },
        {
          "description": "If set to true, we will send webhooks from dedicated IPs.  This is useful if you need to whitelist IPs for your webhook endpoint.",
          "example": false,
          "name": "use_dedicated_ips"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "file_expiration",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Files in this folder will expire (be deleted) after a certain number of days.  This is most often used for compliance purposes where different types of data may need different retention settings.  It's also great for managing your costs.  You can retain different data for less time than others.\n\nValue is stored as an Integer (not a hash/array) representing the number of days.\n```\n",
      "requires_attachment": false,
      "supports_mounted_folders": false,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Number of days to keep files around.",
          "example": 30,
          "name": "all"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "auto_encrypt",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": [
        "auto_decrypt"
      ],
      "docs": "Files will be automatically encrypted after uploading using your provided GPG keys.\n\nThis Behavior is often used on our HIPAA accounts to convert data into a format unreadable by even us.\nGPG is an asymmetric encryption type (which means it uses public keys and private keys).\nBecause you are only providing us your public keys and keeping your private keys, we won't be able to read anything once it has been GPG encrypted.\n",
      "requires_attachment": false,
      "supports_mounted_folders": false,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "deprecated": true,
          "description": "Your GPG Key ID object to use for this operation.",
          "example": 1,
          "name": "gpg_key_id",
          "optional": true
        },
        {
          "description": "Your GPG Key ID objects to use for this operation.",
          "example": [
            1
          ],
          "name": "gpg_key_ids"
        },
        {
          "description": "Must be set to `PGP/GPG`.  If we support other options in the future (like OpenSSL), we will amend this option.",
          "example": "PGP/GPG",
          "name": "algorithm"
        },
        {
          "description": "Optional GPG Key ID object to use for signing the encrypted file.",
          "example": 1,
          "name": "signing_key_id",
          "optional": true
        },
        {
          "description": "Suffix to apply to filenames once they've been uploaded.",
          "example": ".gpg",
          "name": "suffix"
        },
        {
          "description": "If `true`, encrypted files are written as ASCII text.",
          "example": false,
          "name": "armor"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "lock_subfolders",
      "can_be_non_recursive": false,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "The subfolder structure of this folder may not be changed.\nThis is useful in conjunction with workflows and automations to ensure your folder structure stays as you expect.\n\nChildren Recursive: Do not allow Create/Move/Delete on parent folder, child folders and any descendant folders.\nChildren: Do not allow Create/Move/Delete on parent folder or child folders but do allow on any descendant folders.\nSelf: Do not allow Delete or Rename of this(parent) folder. Do allow Create/Move/Delete on child folders and any descendant folders.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "URL key used for the inbox. Can be `children_recursive` (default), `children`, `self`, or `none`.",
          "example": "children_recursive",
          "name": "level"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "storage_region",
      "can_be_non_recursive": false,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Files in this folder are stored in a certain geographical region.\nIf you set this Behavior on an existing folder, we will migrate existing files to the new location automatically.\n`us-east-1` | USA, Virginia\n`ap-southeast-2` | Australia, Sydney\n`ca-central-1` | Canada, Toronto\n`eu-central-1` | EU - Germany, Frankfurt\n`eu-west-2` | UK, London\n`ap-northeast-1` | Japan, Tokyo\n`ap-southeast-1` | Singapore",
      "requires_attachment": false,
      "supports_mounted_folders": false,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Valid AWS region.",
          "example": "us-east-1",
          "name": "all"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "serve_publicly",
      "can_be_non_recursive": false,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Files in this folder are served via a public HTTPS URL at `https://SUBDOMAIN.hosted-by-files.com/...`\n\nThis feature works with common static site generators such as Jekyll and Middleman, and allows any static web assets or website to be hosted.\nIt's a great way to get extra mileage out of your Files.com account and avoid having to pay for separate web hosting.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "URL path for where the stuff is publicly hosted.  It will look like `https://SUBDOMAIN.hosted-by-files.com/{key}/`.",
          "example": "public-photos",
          "friendly_name": "URL Path",
          "name": "key"
        },
        {
          "description": "If true, show an index page listing the folder contents.",
          "example": true,
          "name": "show_index"
        },
        {
          "description": "If true, send the Content-Disposition: attachment header, instructing browsers to always download files and not display them in the browser.",
          "example": true,
          "name": "force_download"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "create_user_folders",
      "can_be_non_recursive": false,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Create a folder here for new users when they are added.\nThis Behavior is typically used to implement home folders for users.\nIt's also a good building block for more advanced automations and workflows.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "What permission level to give the user on his or her new folder?  Takes the same options as the Permissions endpoint.",
          "example": "full",
          "name": "permission"
        },
        {
          "description": "Additional permission level to give the user on his or her new folder.  Used to apply a second permission.  Takes the same options as the Permissions endpoint.",
          "example": "bundle",
          "name": "additional_permission"
        },
        {
          "description": "Apply this behavior to existing users or only newly added users?",
          "example": true,
          "name": "existing_users"
        },
        {
          "description": "Only apply this behavior to users who are members of this group ID.",
          "example": 1,
          "name": "group_id"
        },
        {
          "description": "What to name the new folder. Currently we support `name` and `username`. `name` will fall back to `username` if not present. Default value is `name`.",
          "example": "username",
          "name": "new_folder_name"
        },
        {
          "description": "Subfolders to create within the new folder.",
          "example": [
            "in",
            "out"
          ],
          "name": "subfolders"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "remote_server_sync",
      "can_be_non_recursive": false,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Sync this folder to a remote server on a regular basis.  Remote servers can be FTP/SFTP servers, Amazon S3/GCP/Azure Blob/Wasabi/Backblaze B2 Buckets, and more.\nSee the RemoteServer object for a full list of the Remote Servers supported.\n\nOne-way and two-way sync options are supported.\n\nWith this behavior, the Sync between Files.com and the RemoteServer occurs on a schedule.  Your plan level determines the frequency of the Sync schedule.\nHigher plans offer faster sync intervals.\n\nIf you want to instead \"mount\" your RemoteServer for real-time operations within Files.com, please see the RemoteServerMount behavior instead.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "One way or two way sync?  Valid values: `push_to_server`, `pull_from_server`, `two_way`.",
          "example": "two_way",
          "name": "direction"
        },
        {
          "description": "If true, this sync will not be run automatically.  Useful for disabling syncs during testing.",
          "example": false,
          "name": "disabled"
        },
        {
          "description": "If one-way syncing, should we delete or keep files after sync?",
          "example": "keep",
          "name": "keep_after_copy"
        },
        {
          "description": "Path on remote server to sync with. This should be an absolute path on the remote server. This must be slash-delimited, but it must neither start nor end with a slash.",
          "example": "",
          "name": "remote_path"
        },
        {
          "description": "Frequency in minutes between remote syncs. If set, this value must be greater than or equal to the `remote_sync_interval` value for the site's plan. If left blank, the plan's `remote_sync_interval` will be used. This setting is only used if `trigger` is empty.",
          "example": 60,
          "name": "remote_sync_interval"
        },
        {
          "description": "ID of the remote server to sync with.  See the Remote Servers API resource for managing these.",
          "example": 1,
          "name": "remote_server_id"
        },
        {
          "description": "How this remote sync is scheduled to run. One of: `` (empty), `manual`, `daily`, or `custom_schedule`. If left empty remote sync will be run on every `remote_sync_interval` minutes.",
          "example": "daily",
          "name": "trigger"
        },
        {
          "description": "If trigger type is `daily`, this specifies how often to run this behavior. One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`.",
          "example": "month",
          "name": "interval"
        },
        {
          "description": "If trigger type is `daily`, this specifies the day of the interval.",
          "example": 25,
          "name": "recurring_day"
        },
        {
          "description": "If trigger type is `custom_schedule`, Custom schedule description for when the behavior should be run.",
          "example": {
            "days_of_week": [
              0,
              2,
              4
            ],
            "time_zone": "Eastern Time (US & Canada)",
            "times_of_day": [
              "6:30",
              "14:30"
            ]
          },
          "name": "schedule"
        },
        {
          "description": "Applies only to one-way syncs.  If true, we will remove empty folders on the source.  This is a good way to clean up empty folders left by this sync or other automated processes.  Note that the removal will occur on the subsequent sync run if the folder was non-empty at any point during the sync run.",
          "example": false,
          "name": "delete_empty_folders"
        },
        {
          "description": "If set, only path names matching one or more of these patterns will be synced.  Path globs are supported in exactly the same way they are supported in Automations.  Reference the Automations documentation to learn about path glob support.  Prefix patterns with `**/` if you want them to apply to filenames in any folder.",
          "example": [
            "Incoming/**",
            "AnotherIncoming/*.jpg",
            "**/*.png"
          ],
          "name": "include_patterns"
        },
        {
          "description": "If set, path names matching one or more of these patterns will be ignored/excluded from the sync.  This setting takes precedence over the `included_patterns` setting if a path matches both settings.  If a folder name matches one of these patterns, it will be recursively (fully) excluded.  Path globs are supported in exactly the same way they are supported in Automations.  Reference the Automations documentation to learn about path glob support.  Prefix patterns with `**/` if you want them to apply to filenames in any folder.",
          "example": [
            "bin/",
            "**/*.bak"
          ],
          "name": "exclude_patterns"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "inbox",
      "can_be_non_recursive": false,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "This folder operates as an inbox where anonymous users can upload files without logging in.\n\n## Path Templates\n\nAdmins can customize how submission subfolders are created by providing a path_template value. For example, an inbox can be created with the following `path_template` value:\n\n> {{name}}_{ip}\n\nThis will result in submission subfolders that look like `john doe_127.0.0.1`.\n\nPath templates can use any of the following standard fields:\n* name\n* company\n* email\n* ip\n\nThey can also use any fields defined on the inbox's custom form field set. An inbox with a custom form field set with a field called 'My Field'\ncan have a path template that looks like this:\n\n> {{name}}_{{My Field}}\n\nNote: Field names are case-sensitive.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "URL key used for the inbox.  May only contain lowercase alphabetic characters, numbers, and dashes.",
          "example": "application-forms",
          "friendly_name": "URL Key",
          "name": "key"
        },
        {
          "description": "Do not create subfolders for files uploaded to this inbox. Note: there are subtle security pitfalls with allowing anonymous uploads from multiple users to live in the same folder. We strongly discourage use of this option unless absolutely required.",
          "example": true,
          "name": "dont_separate_submissions_by_folder"
        },
        {
          "description": "If set to `true`, will prevent folders from being created inside an inbox submission.  Useful for certain automation use cases where nested folders don't work well.",
          "example": false,
          "name": "dont_allow_folders_in_uploads"
        },
        {
          "description": "If set to `true`, requires that the inbox be shared with specific recipients rather than being accessed via a URL directly.",
          "example": false,
          "name": "require_inbox_recipient"
        },
        {
          "description": "Show this inbox on the login page of your website.  Only settable by admins.",
          "example": true,
          "name": "show_on_login_page"
        },
        {
          "description": "Title of the Inbox.",
          "example": "Submit Your Job Applications Here",
          "name": "title"
        },
        {
          "description": "Description of the inbox shown on the actual inbox page.",
          "example": "Thanks for coming to the Files.com Job Application Page",
          "name": "description"
        },
        {
          "description": "Help text shown on the inbox page.",
          "example": "If you have trouble here, please contact your recruiter.",
          "name": "help_text"
        },
        {
          "description": "Show a registration page that captures the uploader's name and email address?",
          "example": true,
          "name": "require_registration"
        },
        {
          "description": "Password to authenticate to inbox.",
          "example": "foobar",
          "name": "password"
        },
        {
          "description": "Template for creating submission subfolders. Can use the uploader's name, email address, ip, company, `strftime` directives, and any custom form data.",
          "example": "{{name}}_{{ip}}",
          "name": "path_template"
        },
        {
          "description": "Timezone to use when rendering timestamps in path templates.",
          "example": "Eastern Time (US & Canada)",
          "name": "path_template_time_zone"
        },
        {
          "description": "This is only used when creating/updating a behavior. If set to `true`, will generate inbound_email_address to this folder. If set to `false`, will remove inbound_email_address to this folder. Please note that the uploads via email doesn't work if require_registration or password options are set to `true`.",
          "example": true,
          "name": "enable_inbound_email_address"
        },
        {
          "description": "If `true`, notify the sender on successful uploads via email.",
          "example": true,
          "name": "notify_senders_on_successful_uploads_via_email"
        },
        {
          "description": "Notify senders on successful uploads via web. Please note that the notifications on web uploads only works if require_registration is set to `true`.",
          "example": true,
          "name": "notify_senders_on_successful_uploads_via_web"
        },
        {
          "description": "If `true`, only allow uploads from whitelisted email addresses and domains.",
          "example": true,
          "name": "allow_whitelisting"
        },
        {
          "description": "Comma-separated string of whitelisted email addresses and domains.",
          "example": [
            "john@test.com",
            "mydomain.com"
          ],
          "name": "whitelist"
        },
        {
          "description": "If `true`, disable the upload URL. Can only be done if uploads via email are enabled.",
          "example": true,
          "name": "disable_web_upload"
        },
        {
          "description": "If set, the plain-text body of email submissions will be saved with this name.",
          "example": "_body.txt",
          "name": "capture_email_body_filename"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "limit_file_extensions",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Limit the allowed extensions of files being uploaded to this folder.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Array of whitelisted/blacklisted file extensions, depending on `mode`.",
          "example": [
            "xls",
            "csv"
          ],
          "name": "extensions"
        },
        {
          "description": "Controls whether the behavior acts as a whitelist or as a blacklist. Default is `whitelist`.",
          "example": "whitelist",
          "name": "mode"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "limit_file_regex",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Limit the filenames of files in this folder according to a regular expression.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Single-element Array (not a hash) containing the regular expression, which must start and end with slashes.",
          "example": [
            "/Document-.*/"
          ],
          "name": "all"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "amazon_sns",
      "can_be_non_recursive": true,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Sends a notification via Amazon SNS whenever certain actions occur on a folder.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "Array of ARNs to send the notifications to.",
          "example": [
            "ARN"
          ],
          "name": "arns"
        },
        {
          "description": "Leave blank to send an SNS notification on any action on this folder.  Or, for specific actions, you may specify an array of action types. Valid values are: `create`, `read`, `update`, `destroy`, `move`, `copy`.",
          "example": [
            "create",
            "read",
            "update",
            "destroy",
            "move",
            "copy"
          ],
          "name": "triggers"
        },
        {
          "description": "AWS IAM Credentials to use for sending SNS requests. Must include `access_key_id`, and `secret_access_key`.",
          "example": {
            "access_key_id": "ACCESS_KEY_ID",
            "region": "us-east-1",
            "secret_access_key": "SECRET_ACCESS_KEY"
          },
          "name": "aws_credentials"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "watermark",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Adds a watermark to any image preview generated for an image in this folder.\n",
      "requires_attachment": true,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Where to locate the watermark?  Valid values: `Center`, `East`, `NorthEast`, `North`, `NorthWest`, `SouthEast`, `South`, `SouthWest`, `West`.",
          "example": "SouthWest",
          "name": "gravity"
        },
        {
          "description": "Max width/height as percent of image preview.",
          "example": 20,
          "name": "max_height_or_width"
        },
        {
          "description": "Percentage applied to the watermark.",
          "example": 25,
          "name": "transparency"
        },
        {
          "description": "Watermark text. Use {{user}} to embed a username into the string.",
          "example": "Confidential: For use by {{user}} only.",
          "name": "dynamic_text"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "remote_server_mount",
      "can_be_non_recursive": false,
      "children_can_add": false,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Mount a remote server within this folder.  Remote servers can be FTP/SFTP servers, Amazon S3/GCP/Azure Blob/Wasabi/Backblaze B2 Buckets, and more.\n\nSee the RemoteServer object for a full list of the Remote Servers supported.\n\nWhen this behavior is enabled, files in this folder will never actually be stored on Files.com.  Rather, Files.com will mount the remote server and\nact as a mere conduit from your clients to the remote server.\n\nFiles.com workflow elements such as Permissions, Automations, Webhooks, Notifications, etc., will apply only to transfer activities that occur through\nFiles.com.  We won't send Webhooks or Notifications based on activity that occurs via a direct connection to the Remote Server other than through Files.com.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "ID of the remote server to sync with.  See the Remote Servers API resource for managing these.",
          "example": 1,
          "name": "remote_server_id"
        },
        {
          "description": "Path on remote server to treat as the root of this mount. This should be an absolute path on the remote server. This must be slash-delimited, but it must neither start nor end with a slash.",
          "example": "",
          "name": "remote_path"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "slack_webhook",
      "can_be_non_recursive": true,
      "children_can_add": true,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Sends a Webhook call to Slack whenever certain actions occur on a folder.\nYou will need to add the \"Incoming WebHooks\" App to your Slack workspace.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": false,
      "value_hash_params": [
        {
          "description": "Slack issued URL to send the webhook to.",
          "example": "https://mysite.com/url...",
          "name": "url"
        },
        {
          "description": "Username to display in Slack.",
          "example": "Files.com",
          "name": "username"
        },
        {
          "description": "Channel is send the webhook to.",
          "example": "alerts",
          "name": "channel"
        },
        {
          "description": "Slack emoji to display in Slack, e.g. :robot_face:.",
          "example": ":robot_face:",
          "name": "icon_emoji"
        },
        {
          "description": "Leave blank to send webhooks on any action on this folder.  Or, for specific actions, you may specify an array of action types.  Valid values are: `create`, `read`, `update`, `destroy`, `move`, `copy`.",
          "example": [
            "create",
            "read",
            "update",
            "destroy",
            "move",
            "copy"
          ],
          "name": "triggers"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "auto_decrypt",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": [
        "auto_encrypt"
      ],
      "docs": "Files will be automatically decrypted after uploading using your provided GPG keys.\n",
      "requires_attachment": false,
      "supports_mounted_folders": false,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "deprecated": true,
          "description": "Your GPG Key ID object to use for this operation.",
          "example": 1,
          "name": "gpg_key_id",
          "optional": true
        },
        {
          "description": "Your GPG Key ID objects to use for this operation.",
          "example": [
            1
          ],
          "name": "gpg_key_ids"
        },
        {
          "description": "Must be set to `PGP/GPG`.  If we support other options in the future (like OpenSSL), we will amend this option.",
          "example": "PGP/GPG",
          "name": "algorithm"
        },
        {
          "description": "Filename suffix that if present will be removed after decryption.",
          "example": ".gpg",
          "name": "suffix"
        },
        {
          "description": "Set to true if you want to ignore any errors from the MDC (modification detection code) check.",
          "example": true,
          "friendly_name": "Ignore MDC Error",
          "name": "ignore_mdc_error"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "override_upload_filename",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Modify filenames of files uploaded to this folder. You can mix flags with regular chars and use anything accepted by the standard UNIX `date` command or `strftime`.\n\n**Upload Path**\n\nTo reference the upload path folders, use `%p1`, `%p2`, `%p3`, etc. for the first, second, third, etc. path folder, respectively.\n\nFor example, if the upload path is `personal/accounts/file.txt`, then the pattern `%p1_%Ff` will result in the actual file name being `accounts_file.txt`. If you pick non existing level e.g. `%p7` it will evaluate it to empty string.\n\nList of available patterns:\n* %Fl - original filename, with extension, converted to lowercase\n* %Ff - original filename, with extension\n* %Fe - original extension\n* %Fb - original filename, without extension\n* %Fn - original filename without non-alphanumeric characters, with extension\n* %pX - reference to the upload path folders, where `X` should be integer number starting from `1` to point the upload path folder level\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Format for filename override.  You may use anything from the list `%Fl, %Ff, %Fe, %Fb, %Fp` as well as any additions you want to modify the name with.",
          "example": "%Fb_addition5%Fe",
          "name": "filename_override_pattern"
        },
        {
          "description": "Accepts any valid timezone value from the web interface (e.g. \"Eastern Time (US & Canada)\") or a UTC offset (\"-05:00\").  Omit parameter for UTC time.",
          "example": "Eastern Time (US & Canada)",
          "name": "time_zone"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "permission_fence",
      "can_be_non_recursive": false,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Apply Permission fence to a folder.\nIgnores user/group upward permissions and only applies downward permissions or permissions on the folder itself.\nDoes not apply to Site Admins.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Which permissions to fence. Currently only 'all' is supported.",
          "example": "all",
          "name": "fenced_permissions"
        }
      ],
      "visible_to_non_admins": false
    },
    {
      "behavior": "limit_filename_length",
      "can_be_non_recursive": true,
      "children_can_add": false,
      "children_can_override": true,
      "children_override_group": null,
      "docs": "Limit the length of filenames in this folder, and optionally shorten them if they exceed the limit.\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Number of characters to limit filenames to.",
          "example": 30,
          "name": "max_length"
        },
        {
          "description": "Shorten the filename if it exceeds the maximum length.",
          "example": true,
          "name": "shorten"
        }
      ],
      "visible_to_non_admins": true
    },
    {
      "behavior": "organize_files_into_subfolders",
      "can_be_non_recursive": false,
      "children_can_add": false,
      "children_can_override": false,
      "children_override_group": null,
      "docs": "Organize uploaded files into subfolders based on configuration settings.  When the rule is in place, any file uploaded will be placed into the subdirectory.  There is also an option to apply the rule to files already exiting in the folder.\n\nThe types of configuration:\n\nextension - organize uploaded files into directories named after the file extensions (ie, file.txt will be in subfolder /txt/)\nregex - a passed in regular expression applied to the file name will determine the new subfolder (ie, the regex /(?<=\\-)[0-9]{1}|(?<=\\.)[a-z]{3}/)/ applied to file123.txt will put the file into subfolder /1/txt/\nprovided_modified_at - organize uploaded files according to the passed in modified_at date, the name of the subdirectory is determined by a passed strftime format (ie, the format of \"%Y-%m-%d\" will put a file with provided_modified_at of Jan 1, 2024 into /2024-01-01/  )\ncreated_at - organize uploaded files according to the created_at date, the name of the subdirectory is determined by a passed strftime format  (ie, the format of \"%Y-%m-%d\" will put a file with created_at of Jan 1, 2024 into /2024-01-01/  )\n\nAt the time of either behavior creation or updating, a passed in parameter of apply_behavior=true will start a File Migration that will apply the rule to each file already in the folder\n\n",
      "requires_attachment": false,
      "supports_mounted_folders": true,
      "unique_per_folder": true,
      "value_hash_params": [
        {
          "description": "Subfolder creation type for this folder.",
          "example": "regex, extension, created_at, :provided_modified_at",
          "friendly_name": "Subfolder creation type",
          "name": "subfolder_name_type"
        },
        {
          "description": "Valid regular expression used to determine the subfolder name. This is used when `subfolder_name_type` is `regex`.",
          "example": "(?<=\\-)(.*?)(?=\\.)",
          "name": "regex"
        },
        {
          "description": "DateTime string format used to determine the subfolder name. This is used when `subfolder_name_type` is `created_at` or `provided_modified_at`.",
          "example": "%Y-%m-%d",
          "name": "strftime_format"
        },
        {
          "description": "Time zone (in Rails TimeZone name format) to be used when interpreting `strftime_format`. If not set, UTC will be used.",
          "example": "Eastern Time (US & Canada)",
          "name": "time_zone"
        },
        {
          "description": "If `true`, apply the current behavior (new or existing) to the files in the folder.",
          "example": true,
          "name": "apply_behavior"
        }
      ],
      "visible_to_non_admins": true
    }
  ],
  "x-errors": [
    {
      "http-code": 422,
      "title": "Bad Request",
      "type": "bad-request"
    },
    {
      "http-code": 422,
      "title": "Agent Upgrade Required",
      "type": "bad-request/agent-upgrade-required"
    },
    {
      "http-code": 422,
      "title": "Attachment Too Large",
      "type": "bad-request/attachment-too-large"
    },
    {
      "http-code": 422,
      "title": "Cannot Download Directory",
      "type": "bad-request/cannot-download-directory"
    },
    {
      "http-code": 422,
      "title": "Cant Move With Multiple Locations",
      "type": "bad-request/cant-move-with-multiple-locations"
    },
    {
      "http-code": 422,
      "title": "Datetime Parse",
      "type": "bad-request/datetime-parse"
    },
    {
      "http-code": 422,
      "title": "Destination Same",
      "type": "bad-request/destination-same"
    },
    {
      "http-code": 422,
      "title": "Does Not Support Sorting",
      "type": "bad-request/does-not-support-sorting"
    },
    {
      "http-code": 422,
      "title": "Folder Must Not Be A File",
      "type": "bad-request/folder-must-not-be-a-file"
    },
    {
      "http-code": 422,
      "title": "Folders Not Allowed",
      "type": "bad-request/folders-not-allowed"
    },
    {
      "http-code": 422,
      "title": "Invalid Body",
      "type": "bad-request/invalid-body"
    },
    {
      "http-code": 422,
      "title": "Invalid Cursor",
      "type": "bad-request/invalid-cursor"
    },
    {
      "http-code": 422,
      "title": "Invalid Cursor Type For Sort",
      "type": "bad-request/invalid-cursor-type-for-sort"
    },
    {
      "http-code": 422,
      "title": "Invalid Etags",
      "type": "bad-request/invalid-etags"
    },
    {
      "http-code": 422,
      "title": "Invalid Filter Alias Combination",
      "type": "bad-request/invalid-filter-alias-combination"
    },
    {
      "http-code": 422,
      "title": "Invalid Filter Field",
      "type": "bad-request/invalid-filter-field"
    },
    {
      "http-code": 422,
      "title": "Invalid Filter Param",
      "type": "bad-request/invalid-filter-param"
    },
    {
      "http-code": 422,
      "title": "Invalid Filter Param Format",
      "type": "bad-request/invalid-filter-param-format"
    },
    {
      "http-code": 422,
      "title": "Invalid Filter Param Value",
      "type": "bad-request/invalid-filter-param-value"
    },
    {
      "http-code": 422,
      "title": "Invalid Input Encoding",
      "type": "bad-request/invalid-input-encoding"
    },
    {
      "http-code": 422,
      "title": "Invalid Interface",
      "type": "bad-request/invalid-interface"
    },
    {
      "http-code": 422,
      "title": "Invalid Oauth Provider",
      "type": "bad-request/invalid-oauth-provider"
    },
    {
      "http-code": 422,
      "title": "Invalid Path",
      "type": "bad-request/invalid-path"
    },
    {
      "http-code": 422,
      "title": "Invalid Return To Url",
      "type": "bad-request/invalid-return-to-url"
    },
    {
      "http-code": 422,
      "title": "Invalid Sort Field",
      "type": "bad-request/invalid-sort-field"
    },
    {
      "http-code": 422,
      "title": "Invalid Sort Filter Combination",
      "type": "bad-request/invalid-sort-filter-combination"
    },
    {
      "http-code": 422,
      "title": "Invalid Upload Offset",
      "type": "bad-request/invalid-upload-offset"
    },
    {
      "http-code": 422,
      "title": "Invalid Upload Part Gap",
      "type": "bad-request/invalid-upload-part-gap"
    },
    {
      "http-code": 422,
      "title": "Invalid Upload Part Size",
      "type": "bad-request/invalid-upload-part-size"
    },
    {
      "http-code": 422,
      "title": "Method Not Allowed",
      "type": "bad-request/method-not-allowed"
    },
    {
      "http-code": 422,
      "title": "Multiple Sort Params Not Allowed",
      "type": "bad-request/multiple-sort-params-not-allowed"
    },
    {
      "http-code": 422,
      "title": "No Valid Input Params",
      "type": "bad-request/no-valid-input-params"
    },
    {
      "http-code": 422,
      "title": "Part Number Too Large",
      "type": "bad-request/part-number-too-large"
    },
    {
      "http-code": 422,
      "title": "Path Cannot Have Trailing Whitespace",
      "type": "bad-request/path-cannot-have-trailing-whitespace"
    },
    {
      "http-code": 422,
      "title": "Reauthentication Needed Fields",
      "type": "bad-request/reauthentication-needed-fields"
    },
    {
      "http-code": 422,
      "title": "Request Params Contain Invalid Character",
      "type": "bad-request/request-params-contain-invalid-character"
    },
    {
      "http-code": 422,
      "title": "Request Params Invalid",
      "type": "bad-request/request-params-invalid"
    },
    {
      "http-code": 422,
      "title": "Request Params Required",
      "type": "bad-request/request-params-required"
    },
    {
      "http-code": 422,
      "title": "Search All On Child Path",
      "type": "bad-request/search-all-on-child-path"
    },
    {
      "http-code": 422,
      "title": "Unrecognized Sort Index",
      "type": "bad-request/unrecognized-sort-index"
    },
    {
      "http-code": 422,
      "title": "Unsupported Currency",
      "type": "bad-request/unsupported-currency"
    },
    {
      "http-code": 422,
      "title": "Unsupported Http Response Format",
      "type": "bad-request/unsupported-http-response-format"
    },
    {
      "http-code": 422,
      "title": "Unsupported Media Type",
      "type": "bad-request/unsupported-media-type"
    },
    {
      "http-code": 422,
      "title": "User Id Invalid",
      "type": "bad-request/user-id-invalid"
    },
    {
      "http-code": 422,
      "title": "User Id On User Endpoint",
      "type": "bad-request/user-id-on-user-endpoint"
    },
    {
      "http-code": 422,
      "title": "User Required",
      "type": "bad-request/user-required"
    },
    {
      "http-code": 401,
      "title": "Additional Authentication Required",
      "type": "not-authenticated/additional-authentication-required"
    },
    {
      "http-code": 401,
      "title": "Api Key Sessions Not Supported",
      "type": "not-authenticated/api-key-sessions-not-supported"
    },
    {
      "http-code": 401,
      "title": "Authentication Required",
      "type": "not-authenticated/authentication-required"
    },
    {
      "http-code": 401,
      "title": "Bundle Registration Code Failed",
      "type": "not-authenticated/bundle-registration-code-failed"
    },
    {
      "http-code": 401,
      "title": "Files Agent Token Failed",
      "type": "not-authenticated/files-agent-token-failed"
    },
    {
      "http-code": 401,
      "title": "Inbox Registration Code Failed",
      "type": "not-authenticated/inbox-registration-code-failed"
    },
    {
      "http-code": 401,
      "title": "Invalid Credentials",
      "type": "not-authenticated/invalid-credentials"
    },
    {
      "http-code": 401,
      "title": "Invalid Oauth",
      "type": "not-authenticated/invalid-oauth"
    },
    {
      "http-code": 401,
      "title": "Invalid Or Expired Code",
      "type": "not-authenticated/invalid-or-expired-code"
    },
    {
      "http-code": 401,
      "title": "Invalid Session",
      "type": "not-authenticated/invalid-session"
    },
    {
      "http-code": 401,
      "title": "Invalid Username Or Password",
      "type": "not-authenticated/invalid-username-or-password"
    },
    {
      "http-code": 401,
      "title": "Locked Out",
      "type": "not-authenticated/locked-out"
    },
    {
      "http-code": 401,
      "title": "Lockout Region Mismatch",
      "type": "not-authenticated/lockout-region-mismatch"
    },
    {
      "http-code": 401,
      "title": "One Time Password Incorrect",
      "type": "not-authenticated/one-time-password-incorrect"
    },
    {
      "http-code": 401,
      "title": "Two Factor Authentication Error",
      "type": "not-authenticated/two-factor-authentication-error"
    },
    {
      "http-code": 401,
      "title": "Two Factor Authentication Setup Expired",
      "type": "not-authenticated/two-factor-authentication-setup-expired"
    },
    {
      "http-code": 403,
      "title": "Api Key Is Disabled",
      "type": "not-authorized/api-key-is-disabled"
    },
    {
      "http-code": 403,
      "title": "Api Key Is Path Restricted",
      "type": "not-authorized/api-key-is-path-restricted"
    },
    {
      "http-code": 403,
      "title": "Api Key Only For Desktop App",
      "type": "not-authorized/api-key-only-for-desktop-app"
    },
    {
      "http-code": 403,
      "title": "Api Key Only For Mobile App",
      "type": "not-authorized/api-key-only-for-mobile-app"
    },
    {
      "http-code": 403,
      "title": "Api Key Only For Office Integration",
      "type": "not-authorized/api-key-only-for-office-integration"
    },
    {
      "http-code": 403,
      "title": "Billing Or Site Admin Permission Required",
      "type": "not-authorized/billing-or-site-admin-permission-required"
    },
    {
      "http-code": 403,
      "title": "Billing Permission Required",
      "type": "not-authorized/billing-permission-required"
    },
    {
      "http-code": 403,
      "title": "Bundle Maximum Uses Reached",
      "type": "not-authorized/bundle-maximum-uses-reached"
    },
    {
      "http-code": 403,
      "title": "Cannot Login While Using Key",
      "type": "not-authorized/cannot-login-while-using-key"
    },
    {
      "http-code": 403,
      "title": "Cant Act For Other User",
      "type": "not-authorized/cant-act-for-other-user"
    },
    {
      "http-code": 403,
      "title": "Contact Admin For Password Change Help",
      "type": "not-authorized/contact-admin-for-password-change-help"
    },
    {
      "http-code": 403,
      "title": "Files Agent Failed Authorization",
      "type": "not-authorized/files-agent-failed-authorization"
    },
    {
      "http-code": 403,
      "title": "Folder Admin Or Billing Permission Required",
      "type": "not-authorized/folder-admin-or-billing-permission-required"
    },
    {
      "http-code": 403,
      "title": "Folder Admin Permission Required",
      "type": "not-authorized/folder-admin-permission-required"
    },
    {
      "http-code": 403,
      "title": "Full Permission Required",
      "type": "not-authorized/full-permission-required"
    },
    {
      "http-code": 403,
      "title": "History Permission Required",
      "type": "not-authorized/history-permission-required"
    },
    {
      "http-code": 403,
      "title": "Insufficient Permission For Params",
      "type": "not-authorized/insufficient-permission-for-params"
    },
    {
      "http-code": 403,
      "title": "Insufficient Permission For Site",
      "type": "not-authorized/insufficient-permission-for-site"
    },
    {
      "http-code": 403,
      "title": "Must Authenticate With Api Key",
      "type": "not-authorized/must-authenticate-with-api-key"
    },
    {
      "http-code": 403,
      "title": "Need Admin Permission For Inbox",
      "type": "not-authorized/need-admin-permission-for-inbox"
    },
    {
      "http-code": 403,
      "title": "Non Admins Must Query By Folder Or Path",
      "type": "not-authorized/non-admins-must-query-by-folder-or-path"
    },
    {
      "http-code": 403,
      "title": "Not Allowed To Create Bundle",
      "type": "not-authorized/not-allowed-to-create-bundle"
    },
    {
      "http-code": 403,
      "title": "Password Change Not Required",
      "type": "not-authorized/password-change-not-required"
    },
    {
      "http-code": 403,
      "title": "Password Change Required",
      "type": "not-authorized/password-change-required"
    },
    {
      "http-code": 403,
      "title": "Read Only Session",
      "type": "not-authorized/read-only-session"
    },
    {
      "http-code": 403,
      "title": "Read Permission Required",
      "type": "not-authorized/read-permission-required"
    },
    {
      "http-code": 403,
      "title": "Reauthentication Failed",
      "type": "not-authorized/reauthentication-failed"
    },
    {
      "http-code": 403,
      "title": "Reauthentication Failed Final",
      "type": "not-authorized/reauthentication-failed-final"
    },
    {
      "http-code": 403,
      "title": "Reauthentication Needed Action",
      "type": "not-authorized/reauthentication-needed-action"
    },
    {
      "http-code": 403,
      "title": "Recaptcha Failed",
      "type": "not-authorized/recaptcha-failed"
    },
    {
      "http-code": 403,
      "title": "Self Managed Required",
      "type": "not-authorized/self-managed-required"
    },
    {
      "http-code": 403,
      "title": "Site Admin Required",
      "type": "not-authorized/site-admin-required"
    },
    {
      "http-code": 403,
      "title": "Site Files Are Immutable",
      "type": "not-authorized/site-files-are-immutable"
    },
    {
      "http-code": 403,
      "title": "Two Factor Authentication Required",
      "type": "not-authorized/two-factor-authentication-required"
    },
    {
      "http-code": 403,
      "title": "User Id Without Site Admin",
      "type": "not-authorized/user-id-without-site-admin"
    },
    {
      "http-code": 403,
      "title": "Write And Bundle Permission Required",
      "type": "not-authorized/write-and-bundle-permission-required"
    },
    {
      "http-code": 403,
      "title": "Write Permission Required",
      "type": "not-authorized/write-permission-required"
    },
    {
      "http-code": 404,
      "title": "Not Found",
      "type": "not-found"
    },
    {
      "http-code": 404,
      "title": "Api Key Not Found",
      "type": "not-found/api-key-not-found"
    },
    {
      "http-code": 404,
      "title": "Bundle Path Not Found",
      "type": "not-found/bundle-path-not-found"
    },
    {
      "http-code": 404,
      "title": "Bundle Registration Not Found",
      "type": "not-found/bundle-registration-not-found"
    },
    {
      "http-code": 404,
      "title": "Code Not Found",
      "type": "not-found/code-not-found"
    },
    {
      "http-code": 404,
      "title": "File Not Found",
      "type": "not-found/file-not-found"
    },
    {
      "http-code": 404,
      "title": "File Upload Not Found",
      "type": "not-found/file-upload-not-found"
    },
    {
      "http-code": 404,
      "title": "Folder Not Found",
      "type": "not-found/folder-not-found"
    },
    {
      "http-code": 404,
      "title": "Group Not Found",
      "type": "not-found/group-not-found"
    },
    {
      "http-code": 404,
      "title": "Inbox Not Found",
      "type": "not-found/inbox-not-found"
    },
    {
      "http-code": 404,
      "title": "Nested Not Found",
      "type": "not-found/nested-not-found"
    },
    {
      "http-code": 404,
      "title": "Plan Not Found",
      "type": "not-found/plan-not-found"
    },
    {
      "http-code": 404,
      "title": "Site Not Found",
      "type": "not-found/site-not-found"
    },
    {
      "http-code": 404,
      "title": "User Not Found",
      "type": "not-found/user-not-found"
    },
    {
      "http-code": 422,
      "title": "Processing Failure",
      "type": "processing-failure"
    },
    {
      "http-code": 422,
      "title": "Already Completed",
      "type": "processing-failure/already-completed"
    },
    {
      "http-code": 422,
      "title": "Automation Cannot Be Run Manually",
      "type": "processing-failure/automation-cannot-be-run-manually"
    },
    {
      "http-code": 422,
      "title": "Behavior Not Allowed On Remote Server",
      "type": "processing-failure/behavior-not-allowed-on-remote-server"
    },
    {
      "http-code": 422,
      "title": "Bundle Only Allows Previews",
      "type": "processing-failure/bundle-only-allows-previews"
    },
    {
      "http-code": 422,
      "title": "Bundle Operation Requires Subfolder",
      "type": "processing-failure/bundle-operation-requires-subfolder"
    },
    {
      "http-code": 422,
      "title": "Could Not Create Parent",
      "type": "processing-failure/could-not-create-parent"
    },
    {
      "http-code": 422,
      "title": "Destination Exists",
      "type": "processing-failure/destination-exists"
    },
    {
      "http-code": 422,
      "title": "Destination Folder Limited",
      "type": "processing-failure/destination-folder-limited"
    },
    {
      "http-code": 422,
      "title": "Destination Parent Conflict",
      "type": "processing-failure/destination-parent-conflict"
    },
    {
      "http-code": 409,
      "title": "Destination Parent Does Not Exist",
      "type": "processing-failure/destination-parent-does-not-exist"
    },
    {
      "http-code": 422,
      "title": "Exceeded Runtime Limit",
      "type": "processing-failure/exceeded-runtime-limit"
    },
    {
      "http-code": 422,
      "title": "Expired Private Key",
      "type": "processing-failure/expired-private-key"
    },
    {
      "http-code": 422,
      "title": "Expired Public Key",
      "type": "processing-failure/expired-public-key"
    },
    {
      "http-code": 422,
      "title": "Export Failure",
      "type": "processing-failure/export-failure"
    },
    {
      "http-code": 422,
      "title": "Export Not Ready",
      "type": "processing-failure/export-not-ready"
    },
    {
      "http-code": 422,
      "title": "Failed To Change Password",
      "type": "processing-failure/failed-to-change-password"
    },
    {
      "http-code": 422,
      "title": "File Locked",
      "type": "processing-failure/file-locked"
    },
    {
      "http-code": 422,
      "title": "File Not Uploaded",
      "type": "processing-failure/file-not-uploaded"
    },
    {
      "http-code": 422,
      "title": "File Pending Processing",
      "type": "processing-failure/file-pending-processing"
    },
    {
      "http-code": 422,
      "title": "File Processing Error",
      "type": "processing-failure/file-processing-error"
    },
    {
      "http-code": 422,
      "title": "File Too Big To Decrypt",
      "type": "processing-failure/file-too-big-to-decrypt"
    },
    {
      "http-code": 422,
      "title": "File Too Big To Encrypt",
      "type": "processing-failure/file-too-big-to-encrypt"
    },
    {
      "http-code": 422,
      "title": "File Uploaded To Wrong Region",
      "type": "processing-failure/file-uploaded-to-wrong-region"
    },
    {
      "http-code": 422,
      "title": "Filename Too Long",
      "type": "processing-failure/filename-too-long"
    },
    {
      "http-code": 403,
      "title": "Folder Locked",
      "type": "processing-failure/folder-locked"
    },
    {
      "http-code": 422,
      "title": "Folder Not Empty",
      "type": "processing-failure/folder-not-empty"
    },
    {
      "http-code": 422,
      "title": "History Unavailable",
      "type": "processing-failure/history-unavailable"
    },
    {
      "http-code": 422,
      "title": "Invalid Bundle Code",
      "type": "processing-failure/invalid-bundle-code"
    },
    {
      "http-code": 422,
      "title": "Invalid File Type",
      "type": "processing-failure/invalid-file-type"
    },
    {
      "http-code": 422,
      "title": "Invalid Filename",
      "type": "processing-failure/invalid-filename"
    },
    {
      "http-code": 422,
      "title": "Invalid Priority Color",
      "type": "processing-failure/invalid-priority-color"
    },
    {
      "http-code": 422,
      "title": "Invalid Range",
      "type": "processing-failure/invalid-range"
    },
    {
      "http-code": 422,
      "title": "Invalid Site",
      "type": "processing-failure/invalid-site"
    },
    {
      "http-code": 422,
      "title": "Model Save Error",
      "type": "processing-failure/model-save-error"
    },
    {
      "http-code": 422,
      "title": "Multiple Processing Errors",
      "type": "processing-failure/multiple-processing-errors"
    },
    {
      "http-code": 422,
      "title": "Path Too Long",
      "type": "processing-failure/path-too-long"
    },
    {
      "http-code": 422,
      "title": "Recipient Already Shared",
      "type": "processing-failure/recipient-already-shared"
    },
    {
      "http-code": 422,
      "title": "Remote Server Error",
      "type": "processing-failure/remote-server-error"
    },
    {
      "http-code": 422,
      "title": "Resource Belongs To Parent Site",
      "type": "processing-failure/resource-belongs-to-parent-site"
    },
    {
      "http-code": 422,
      "title": "Resource Locked",
      "type": "processing-failure/resource-locked"
    },
    {
      "http-code": 422,
      "title": "Subfolder Locked",
      "type": "processing-failure/subfolder-locked"
    },
    {
      "http-code": 422,
      "title": "Two Factor Authentication Code Already Sent",
      "type": "processing-failure/two-factor-authentication-code-already-sent"
    },
    {
      "http-code": 422,
      "title": "Two Factor Authentication Country Blacklisted",
      "type": "processing-failure/two-factor-authentication-country-blacklisted"
    },
    {
      "http-code": 422,
      "title": "Two Factor Authentication General Error",
      "type": "processing-failure/two-factor-authentication-general-error"
    },
    {
      "http-code": 422,
      "title": "Two Factor Authentication Method Unsupported Error",
      "type": "processing-failure/two-factor-authentication-method-unsupported-error"
    },
    {
      "http-code": 422,
      "title": "Two Factor Authentication Unsubscribed Recipient",
      "type": "processing-failure/two-factor-authentication-unsubscribed-recipient"
    },
    {
      "http-code": 422,
      "title": "Updates Not Allowed For Remotes",
      "type": "processing-failure/updates-not-allowed-for-remotes"
    },
    {
      "http-code": 429,
      "title": "Duplicate Share Recipient",
      "type": "rate-limited/duplicate-share-recipient"
    },
    {
      "http-code": 429,
      "title": "Reauthentication Rate Limited",
      "type": "rate-limited/reauthentication-rate-limited"
    },
    {
      "http-code": 429,
      "title": "Too Many Concurrent Logins",
      "type": "rate-limited/too-many-concurrent-logins"
    },
    {
      "http-code": 429,
      "title": "Too Many Concurrent Requests",
      "type": "rate-limited/too-many-concurrent-requests"
    },
    {
      "http-code": 429,
      "title": "Too Many Login Attempts",
      "type": "rate-limited/too-many-login-attempts"
    },
    {
      "http-code": 429,
      "title": "Too Many Requests",
      "type": "rate-limited/too-many-requests"
    },
    {
      "http-code": 429,
      "title": "Too Many Shares",
      "type": "rate-limited/too-many-shares"
    },
    {
      "http-code": 503,
      "title": "Agent Unavailable",
      "type": "service-unavailable/agent-unavailable"
    },
    {
      "http-code": 503,
      "title": "Automations Unavailable",
      "type": "service-unavailable/automations-unavailable"
    },
    {
      "http-code": 503,
      "title": "Migration In Progress",
      "type": "service-unavailable/migration-in-progress"
    },
    {
      "http-code": 503,
      "title": "Site Disabled",
      "type": "service-unavailable/site-disabled"
    },
    {
      "http-code": 503,
      "title": "Uploads Unavailable",
      "type": "service-unavailable/uploads-unavailable"
    },
    {
      "http-code": 403,
      "title": "Account Already Exists",
      "type": "site-configuration/account-already-exists"
    },
    {
      "http-code": 403,
      "title": "Account Overdue",
      "type": "site-configuration/account-overdue"
    },
    {
      "http-code": 403,
      "title": "No Account For Site",
      "type": "site-configuration/no-account-for-site"
    },
    {
      "http-code": 403,
      "title": "Site Was Removed",
      "type": "site-configuration/site-was-removed"
    },
    {
      "http-code": 403,
      "title": "Trial Expired",
      "type": "site-configuration/trial-expired"
    },
    {
      "http-code": 403,
      "title": "Trial Locked",
      "type": "site-configuration/trial-locked"
    },
    {
      "http-code": 403,
      "title": "User Requests Enabled Required",
      "type": "site-configuration/user-requests-enabled-required"
    }
  ],
  "x-regions": [
    {
      "description": "USA, Virginia",
      "name": "us-east-1"
    },
    {
      "description": "Australia, Sydney",
      "name": "ap-southeast-2"
    },
    {
      "description": "Canada, Toronto",
      "name": "ca-central-1"
    },
    {
      "description": "EU - Germany, Frankfurt",
      "name": "eu-central-1"
    },
    {
      "description": "UK, London",
      "name": "eu-west-2"
    },
    {
      "description": "Japan, Tokyo",
      "name": "ap-northeast-1"
    },
    {
      "description": "Singapore",
      "name": "ap-southeast-1"
    }
  ],
  "x-site_attribute_requirements": {
    "custom_namespace": "feature_bundle_power",
    "domain": "feature_bundle_power",
    "require_2fa": "feature_bundle_power",
    "sftp_insecure_ciphers": "feature_bundle_power",
    "smtp_address": "feature_bundle_power",
    "smtp_authentication": "feature_bundle_power",
    "smtp_from": "feature_bundle_power",
    "smtp_password": "feature_bundle_power",
    "smtp_port": "feature_bundle_power",
    "smtp_username": "feature_bundle_power",
    "tls_disabled": "feature_bundle_power"
  }
}